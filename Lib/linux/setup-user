#!/bin/bash
# Copyright (c) 2014 SIL International
# This software is licensed under the LGPL, version 2.1 or later
# (http://www.gnu.org/licenses/lgpl-2.1.html)
#
# see http://standards.freedesktop.org/basedir-spec/basedir-spec-0.6.html for standard
# locations and environment variables

XDG_DATA_HOME=${XDG_DATA_HOME:-${HOME}/.local/share}
XDG_CONFIG_HOME=${XDG_CONFIG_HOME:-${HOME}/.config}

scriptdir="$(dirname "$0")"
prefix=$(cd "$scriptdir/../.."; /bin/pwd)
FW_DATA="${XDG_DATA_HOME}/fieldworks"
FW_CONFIG="${XDG_CONFIG_HOME}/fieldworks"
FW_LIB=$prefix/lib/fieldworks
FW_SHARE=$prefix/share/fieldworks

WRITEKEY="${FW_LIB}/WriteKey.exe"
READKEY="${FW_LIB}/ReadKey.exe"

WriteKey()
{
	mono "${WRITEKEY}" "$@"
}


ReadKey()
{
	# MONO_DEBUG seems to trigger warnings being printed to stdout for
	# bad values in MONO_PATH. While correcting the occasional bad value
	# that creeps into MONO_PATH is good, just unsetting MONO_DEBUG here
	# will prevent surprise registry corruption when migrating registry
	# keys from old to new FW versions. This is LT-18815.
	(unset MONO_DEBUG
	mono "${READKEY}" "$@")
}

# For example: CopyRegistryKey LM "Software/SIL/FieldWorks/7.0" "ProjectsDir" LM "Software/SIL/FieldWorks/8" "ProjectsDir"
CopyRegistryKey()
{
	SOURCE_ROOT="$1"
	SOURCE_LOCATION="$2"
	SOURCE_KEY="$3"

	DESTINATION_ROOT="$4"
	DESTINATION_LOCATION="$5"
	DESTINATION_KEY="$6"

	WriteKey "$DESTINATION_ROOT" "$DESTINATION_LOCATION" "$DESTINATION_KEY" \
		"$(ReadKey "$SOURCE_ROOT" "$SOURCE_LOCATION" "$SOURCE_KEY")"
}

(
	if [ ! -d "${FW_CONFIG}/Icu54/" ]; then
		echo "# Copying ICU data"
		mkdir -p "${FW_CONFIG}"
		cp -a "${FW_SHARE}/Icu54" "${FW_CONFIG}/"
	fi

	if [ ! -d "${FW_CONFIG}/SIL/" ]; then
		echo "# Copying encoding converter registry"
		mkdir -p "${FW_CONFIG}/"
		cp -a "${FW_SHARE}/SIL" "${FW_CONFIG}/"
	fi

	if [ ! -d "${FW_DATA}/Projects/" ]; then
		echo "# Creating default Project database directory"
		mkdir -p "${FW_DATA}/Projects/"
	fi

	mkdir -p "${FW_CONFIG}/SIL/Repository"
	mkdir -p "${FW_CONFIG}/MoveRepositoryTo"

	# Set registry keys

	cd "$FW_LIB"; RUNMODE="INSTALLED" . environ; cd "$OLDPWD"

	# Are there FW 9 registry settings?
	if ReadKey LM "Software/SIL/FieldWorks/9" "ProjectsDir" 2>/dev/null; then
		# All done!
		:
	else
		# Are there FW 8 registry settings?
		if ReadKey LM "Software/SIL/FieldWorks/8" "ProjectsDir" 2>/dev/null; then
			# Migrate them to FW 9.

			echo "# Migrating from FW 8 registry settings."

			# Write any default settings for keys that are new in version 9.
			# None.

			# Migrate any settings from version 8 to version 9.
			CopyRegistryKey LM "Software/SIL/FieldWorks/8" "RootDataDir" LM "Software/SIL/FieldWorks/9" "RootDataDir"
			CopyRegistryKey LM "Software/SIL/FieldWorks/8" "RootCodeDir" LM "Software/SIL/FieldWorks/9" "RootCodeDir"
			CopyRegistryKey LM "Software/SIL/FieldWorks/8" "ProjectsDir" LM "Software/SIL/FieldWorks/9" "ProjectsDir"
		else
			# Are there FW 7 registry settings?
			if ReadKey LM "Software/SIL/FieldWorks/7.0" "ProjectsDir" 2>/dev/null; then
				# Migrate them to FW 9.

				echo "# Migrating from FW 7 registry settings."

				# Write any default settings for keys that are new in version 8 or 9.
				# None.

				# Migrate any settings from version 7 to version 9.
				CopyRegistryKey LM "Software/SIL/FieldWorks/7.0" "RootDataDir" LM "Software/SIL/FieldWorks/9" "RootDataDir"
				CopyRegistryKey LM "Software/SIL/FieldWorks/7.0" "RootCodeDir" LM "Software/SIL/FieldWorks/9" "RootCodeDir"
				CopyRegistryKey LM "Software/SIL/FieldWorks/7.0" "ProjectsDir" LM "Software/SIL/FieldWorks/9" "ProjectsDir"
			else
				# Create FW 9 registry settings for an empty registry.
				echo "# Creating FW 9 registry settings."

				# REVIEW these were taken from nant setup registry may not be correct for an install.
				if [ ! -d "${FW_CONFIG}/registry/LocalMachine/software/sil/encodingconverterrepository" ]; then
					WriteKey LM "Software/SIL/EncodingConverterRepository" "Registry" "${FW_CONFIG}/SIL/Repository/mappingRegistry.xml"
					WriteKey LM "Software/SIL/EncodingConverterRepository" "MoveRepositoryTo" "${FW_CONFIG}/MoveRepositoryTo"
				fi
				WriteKey LM "Software/Microsoft/.NETFramework/AssemblyFolders" "Primary Interop Assemblies" "$FW_LIB"
				WriteKey LM "Software/SIL" "InitIcu" "1"
				WriteKey LM "Software/SIL/FieldWorks" "InstallLanguageUseLog" "False"

				WriteKey LM "Software/SIL/FieldWorks/9" "RootDataDir" "${FW_CONFIG}/"
				WriteKey LM "Software/SIL/FieldWorks/9" "RootCodeDir" "${FW_SHARE}"
				WriteKey LM "Software/SIL/FieldWorks/9" "ProjectsDir" "${FW_DATA}/Projects"
			fi
		fi
	fi

	# Set values unconditionally, to take care of upgrades
	# TODO: implement a WriteKey option to only set and not overwrite values. See comments in FWNX-1065.
	# TODO: implement batch load/dump in WriteKey similar to dconf

	echo "# Writing required registry settings."

	WriteKey LM "Software/SIL" "Icu54DataDir" "${FW_CONFIG}/Icu54"
	WriteKey LM "Software/SIL" "Icu54Dir" "${FW_CONFIG}/Icu54"

	WriteKey LM "Software/SIL/SilEncConverters40" "PluginDir" "${FW_LIB}/EC/Plugins"
	WriteKey LM "Software/SIL/SilEncConverters40" "RootDir" "${FW_LIB}"

) | zenity --progress \
	--title="User specific setup" \
	--percentage=0 \
	--pulsate \
	--auto-close
