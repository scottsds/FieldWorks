//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SIL.FieldWorks.Common.FwUtils {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class FwUtilsStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal FwUtilsStrings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SIL.FieldWorks.Common.FwUtils.FwUtilsStrings", typeof(FwUtilsStrings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The help file could not be located..
        /// </summary>
        internal static string ksCannotFindHelp {
            get {
                return ResourceManager.GetString("ksCannotFindHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change Failed.
        /// </summary>
        internal static string ksChangeFailed {
            get {
                return ResourceManager.GetString("ksChangeFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Corrupt Settings File Detected.
        /// </summary>
        internal static string ksCorruptSettingsFileCaption {
            get {
                return ResourceManager.GetString("ksCorruptSettingsFileCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FieldWorks has detected one or more corrupted settings files. These files will be safely deleted. If you have been using different keyboards to input text, these may be reset to default values. Please restore them yourself..
        /// </summary>
        internal static string ksDeleteAndReportCorruptSettingsFile {
            get {
                return ResourceManager.GetString("ksDeleteAndReportCorruptSettingsFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AD.
        /// </summary>
        internal static string ksGenDateAD {
            get {
                return ResourceManager.GetString("ksGenDateAD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to After.
        /// </summary>
        internal static string ksGenDateAfter {
            get {
                return ResourceManager.GetString("ksGenDateAfter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to About.
        /// </summary>
        internal static string ksGenDateApprox {
            get {
                return ResourceManager.GetString("ksGenDateApprox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BC.
        /// </summary>
        internal static string ksGenDateBC {
            get {
                return ResourceManager.GetString("ksGenDateBC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Before.
        /// </summary>
        internal static string ksGenDateBefore {
            get {
                return ResourceManager.GetString("ksGenDateBefore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The help topic is not available for topic: {0}.
        /// </summary>
        internal static string ksNoHelpTopicX {
            get {
                return ResourceManager.GetString("ksNoHelpTopicX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The project you are opening will not communicate with Paratext
        ///because a project with the same name is already open.
        ///If you want to use Paratext with this project, make a change in this project (so that it will start first), close both projects, then restart FLEx..
        /// </summary>
        internal static string ksPtCommunicationProblem {
            get {
                return ResourceManager.GetString("ksPtCommunicationProblem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You do not have permission to change the setting &quot;{0}&quot;. Administrator privileges are required to make changes affecting all users of this computer..
        /// </summary>
        internal static string ksRegChangeFailed {
            get {
                return ResourceManager.GetString("ksRegChangeFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version: {0}  {1}  {2}.
        /// </summary>
        internal static string kstidAppVersionFmt {
            get {
                return ResourceManager.GetString("kstidAppVersionFmt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FieldWorks has unexpectedly timed out trying to determine whether the spelling dictionary {0} exists. FieldWorks will assume there is no such dictionary, which may affect spell-checking. If you think this dictionary should exist, we recommend restarting your computer. If you see this message regularly, please report it as a bug..
        /// </summary>
        internal static string kstIdCantDoDictExists {
            get {
                return ResourceManager.GetString("kstIdCantDoDictExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spelling Dictionary Problem.
        /// </summary>
        internal static string kstidCantDoDictExistsCaption {
            get {
                return ResourceManager.GetString("kstidCantDoDictExistsCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  cm.
        /// </summary>
        internal static string kstidCm {
            get {
                return ResourceManager.GetString("kstidCm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  in.
        /// </summary>
        internal static string kstidIn {
            get {
                return ResourceManager.GetString("kstidIn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;.
        /// </summary>
        internal static string kstidInches {
            get {
                return ResourceManager.GetString("kstidInches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The writing system {0} specifies an invalid spelling dictionary ({1}). Valid spelling dictionary IDs must only contain ASCII alphanumeric characters or underline. Spell checking will not work for this writing system until you correct this in the Writing System Properties dialog..
        /// </summary>
        internal static string kstidInvalidDictId {
            get {
                return ResourceManager.GetString("kstidInvalidDictId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This software is licensed under the LGPL, version 2.1 or later.
        /// </summary>
        internal static string kstidLicense {
            get {
                return ResourceManager.GetString("kstidLicense", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (http://www.gnu.org/licenses/lgpl-2.1.html).
        /// </summary>
        internal static string kstidLicenseURL {
            get {
                return ResourceManager.GetString("kstidLicenseURL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version: {0}.
        /// </summary>
        internal static string kstidMajorVersionFmt {
            get {
                return ResourceManager.GetString("kstidMajorVersionFmt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  mm.
        /// </summary>
        internal static string kstidMm {
            get {
                return ResourceManager.GetString("kstidMm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  pt.
        /// </summary>
        internal static string kstidPt {
            get {
                return ResourceManager.GetString("kstidPt", resourceCulture);
            }
        }
    }
}
