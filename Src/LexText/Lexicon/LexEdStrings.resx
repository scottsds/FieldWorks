<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ks_Add" xml:space="preserve">
    <value>&amp;Add</value>
    <comment>button label</comment>
  </data>
  <data name="ks_Link" xml:space="preserve">
    <value>&amp;Link</value>
    <comment>button label</comment>
  </data>
  <data name="ks_MoveEntry" xml:space="preserve">
    <value>&amp;Move Entry</value>
  </data>
  <data name="ks_Replace" xml:space="preserve">
    <value>&amp;Replace</value>
  </data>
  <data name="ksAlternateForms" xml:space="preserve">
    <value>Alternate Forms</value>
  </data>
  <data name="ksAlwaysVisible" xml:space="preserve">
    <value>Always visible</value>
    <comment>menu item</comment>
  </data>
  <data name="ksGenericUtilityCannotUndo" xml:space="preserve">
    <value>You cannot use 'Undo' to cancel the effect of this utility. You would need to go back to a previously saved version of the database.</value>
  </data>
  <data name="ksCategoryToMergeInto" xml:space="preserve">
    <value>Category to merge into</value>
  </data>
  <data name="ksCategoryToMoveTo" xml:space="preserve">
    <value>Category to move to</value>
  </data>
  <data name="ksCreateLexRefType_" xml:space="preserve">
    <value>Create New Lexical Relation...</value>
    <comment>menu item</comment>
  </data>
  <data name="ksDeleteLexTree" xml:space="preserve">
    <value>Note: this will remove this entire {0} reference set tree.</value>
    <comment>{0} is a line feed</comment>
  </data>
  <data name="ksDeleteSequenceCollectionA" xml:space="preserve">
    <value>Note: the listed references will still be {0} related in a </value>
    <comment>{0} is a line feed.</comment>
  </data>
  <data name="ksDeleteSequenceCollectionB" xml:space="preserve">
    <value> relation.</value>
  </data>
  <data name="ksDeletingThisRevIndex" xml:space="preserve">
    <value>You are deleting the following Reversal Index:</value>
  </data>
  <data name="ksEditX" xml:space="preserve">
    <value>Edit {0}</value>
  </data>
  <data name="ksFieldVisibility" xml:space="preserve">
    <value>Field Visibility</value>
    <comment>menu item</comment>
  </data>
  <data name="ksFind_" xml:space="preserve">
    <value>Find:</value>
  </data>
  <data name="ksFindExampleSentenceDlgBrowseViewPaneTitle" xml:space="preserve">
    <value>Concordance</value>
  </data>
  <data name="ksFindExampleSentenceDlgPreviewPaneTitle" xml:space="preserve">
    <value>Sentence with Translations</value>
  </data>
  <data name="ksHelp" xml:space="preserve">
    <value>Help...</value>
    <comment>menu item</comment>
  </data>
  <data name="ksHiddenUnlessData" xml:space="preserve">
    <value>Normally hidden, unless non-empty</value>
    <comment>menu item</comment>
  </data>
  <data name="ksIdentifySense" xml:space="preserve">
    <value>Identify sense</value>
  </data>
  <data name="ksIdentifyXEntry" xml:space="preserve">
    <value>Add Reference ({0})</value>
  </data>
  <data name="ksIdentifyXLexEntry" xml:space="preserve">
    <value>Add Reference ({0})</value>
  </data>
  <data name="ksIdentifyXLexEntryOrSense" xml:space="preserve">
    <value>Add Reference ({0})</value>
  </data>
  <data name="ksIdentifyXSense" xml:space="preserve">
    <value>Add Reference ({0})</value>
  </data>
  <data name="ksLexRelation2" xml:space="preserve">
    <value>{0}/{1} relation</value>
    <comment>{0}/{1} Parts/Whole names for a tree relation</comment>
  </data>
  <data name="ksMoveRevEntry" xml:space="preserve">
    <value>Move Reversal Entry</value>
  </data>
  <data name="ksMustSelectOne" xml:space="preserve">
    <value>You must select one to create.</value>
  </data>
  <data name="ksNormallyHidden" xml:space="preserve">
    <value>Normally hidden</value>
    <comment>menu item</comment>
  </data>
  <data name="ksReallyWantToDeleteRevIndex" xml:space="preserve">
    <value>Do you really want to delete this Reversal Index?</value>
  </data>
  <data name="ksReassignHomographs" xml:space="preserve">
    <value>Reassign Homographs</value>
  </data>
  <data name="ksRedoAddRevToSense" xml:space="preserve">
    <value>Redo Add Reversal Entry to Sense</value>
  </data>
  <data name="ksRedoBulkEditRevPOS" xml:space="preserve">
    <value>Redo Bulk Edit Reversal Entry POS</value>
  </data>
  <data name="ksRedoDelete" xml:space="preserve">
    <value>Redo Delete</value>
  </data>
  <data name="ksRedoDeleteRevFromSense" xml:space="preserve">
    <value>Redo Delete Reversal Entry from Sense</value>
  </data>
  <data name="ksRedoEditFunction" xml:space="preserve">
    <value>Redo Edit Function</value>
  </data>
  <data name="ksRedoInsertLexRefType" xml:space="preserve">
    <value>Redo Insert Lexical Reference Type</value>
  </data>
  <data name="ksRedoMergeRevCategory" xml:space="preserve">
    <value>Redo Merge Reversal Category</value>
  </data>
  <data name="ksRedoMoveRevCategory" xml:space="preserve">
    <value>Redo Move Reversal Category</value>
  </data>
  <data name="ksRedoMoveRevEntry" xml:space="preserve">
    <value>Redo Move Reversal Entry</value>
  </data>
  <data name="ksRedoSetRevEntries" xml:space="preserve">
    <value>Redo Set Reversal Entries</value>
  </data>
  <data name="ksReplaceXEntry" xml:space="preserve">
    <value>Replace Reference</value>
  </data>
  <data name="ksSenses" xml:space="preserve">
    <value>Senses</value>
  </data>
  <data name="ksSetReversal" xml:space="preserve">
    <value>Set Reversal</value>
    <comment>button label</comment>
  </data>
  <data name="ksStars" xml:space="preserve">
    <value>***</value>
    <comment>signals missing/unknown value</comment>
  </data>
  <data name="ksSwapLexWithAllo" xml:space="preserve">
    <value>Swap Lexeme Form with Allomorph</value>
  </data>
  <data name="ksSwapXWithY" xml:space="preserve">
    <value>Swap: "{0}"{2}With: "{1}"</value>
  </data>
  <data name="ksUndoAddRevToSense" xml:space="preserve">
    <value>Undo Add Reversal Entry to Sense</value>
  </data>
  <data name="ksUndoBulkEditRevPOS" xml:space="preserve">
    <value>Undo Bulk Edit Reversal Entry POS</value>
  </data>
  <data name="ksUndoDelete" xml:space="preserve">
    <value>Undo Delete</value>
  </data>
  <data name="ksUndoDeleteRevFromSense" xml:space="preserve">
    <value>Undo Delete Reversal Entry from Sense</value>
  </data>
  <data name="ksUndoEditFunction" xml:space="preserve">
    <value>Undo Edit Function</value>
  </data>
  <data name="ksUndoInsertLexRefType" xml:space="preserve">
    <value>Undo Insert Lexical Reference Type</value>
  </data>
  <data name="ksUndoMergeRevCategory" xml:space="preserve">
    <value>Undo Merge Reversal Category</value>
  </data>
  <data name="ksUndoMoveRevCategory" xml:space="preserve">
    <value>Undo Move Reversal Category</value>
  </data>
  <data name="ksUndoMoveRevEntry" xml:space="preserve">
    <value>Undo Move Reversal Entry</value>
  </data>
  <data name="ksUndoSetRevEntries" xml:space="preserve">
    <value>Undo Set Reversal Entries</value>
  </data>
  <data name="ksWhatIsReassignHomographs" xml:space="preserve">
    <value>This utility cleans up the homographs numbers of lexical entries. It preserves the current relative order of homographs, so you won't lose any ordering you have done.</value>
  </data>
  <data name="ksWhenToReassignHomographs" xml:space="preserve">
    <value>Run this utility when the FieldWorks project has entries with duplicate or missing homograph numbers, or when there are gaps in the homograph number sequences.</value>
  </data>
  <data name="ksShowInReversalIndex" xml:space="preserve">
    <value>Show in Reversal Index (Ctrl-Click)</value>
  </data>
  <data name="ksConvertFormLoseCaption" xml:space="preserve">
    <value>Warning!</value>
  </data>
  <data name="ksConvertFormLoseEnv" xml:space="preserve">
    <value>The environment will be lost! Do you still want to continue?</value>
  </data>
  <data name="ksConvertFormLoseEnvGramInfo" xml:space="preserve">
    <value>The environment and some grammatical information will be lost! Do you still want to continue?</value>
  </data>
  <data name="ksConvertFormLoseEnvInfixLoc" xml:space="preserve">
    <value>The environment and infix position will be lost! Do you still want to continue?</value>
  </data>
  <data name="ksConvertFormLoseEnvInfixLocGramInfo" xml:space="preserve">
    <value>The environment, infix position, and some grammatical information will be lost! Do you still want to continue?</value>
  </data>
  <data name="ksConvertFormLoseGramInfo" xml:space="preserve">
    <value>Some grammatical information will be lost! Do you still want to continue?</value>
  </data>
  <data name="ksConvertFormLoseInfixLoc" xml:space="preserve">
    <value>The infix position will be lost! Do you still want to continue?</value>
  </data>
  <data name="ksConvertFormLoseInfixLocGramInfo" xml:space="preserve">
    <value>The infix position and some grammatical information will be lost! Do you still want to continue?</value>
  </data>
  <data name="ksConvertFormLoseRule" xml:space="preserve">
    <value>The affix process rule will be lost! Do you still want to continue?</value>
  </data>
  <data name="ksRedoAddComponent" xml:space="preserve">
    <value>Redo Add Component</value>
  </data>
  <data name="ksRedoVariantOf" xml:space="preserve">
    <value>Redo Variant Of</value>
  </data>
  <data name="ksUndoAddComponent" xml:space="preserve">
    <value>Undo Add Component</value>
  </data>
  <data name="ksUndoVariantOf" xml:space="preserve">
    <value>Undo Variant Of</value>
  </data>
  <data name="ksRedoAddRef" xml:space="preserve">
    <value>Redo Add Reference</value>
  </data>
  <data name="ksRedoDeleteRelation" xml:space="preserve">
    <value>Redo Delete Relation</value>
  </data>
  <data name="ksRedoInsertRelation" xml:space="preserve">
    <value>Redo {0}</value>
  </data>
  <data name="ksRedoReplaceRef" xml:space="preserve">
    <value>Redo Replace Reference</value>
  </data>
  <data name="ksUndoAddRef" xml:space="preserve">
    <value>Undo Add Reference</value>
  </data>
  <data name="ksUndoDeleteRelation" xml:space="preserve">
    <value>Undo Delete Relation</value>
  </data>
  <data name="ksUndoInsertRelation" xml:space="preserve">
    <value>Undo {0}</value>
  </data>
  <data name="ksUndoReplaceRef" xml:space="preserve">
    <value>Undo Replace Reference</value>
  </data>
  <data name="ksRedoDeleteRef" xml:space="preserve">
    <value>Redo Delete Reference</value>
  </data>
  <data name="ksUndoDeleteRef" xml:space="preserve">
    <value>Undo Delete Reference</value>
  </data>
  <data name="ksCreateReversal" xml:space="preserve">
    <value>Create Reversal</value>
  </data>
  <data name="ksRecreateReversal" xml:space="preserve">
    <value>Recreate Reversal</value>
  </data>
  <data name="ksIdentifyRecord" xml:space="preserve">
    <value>Add Reference</value>
  </data>
  <data name="ksAddParticipants" xml:space="preserve">
    <value>Add {0}</value>
  </data>
  <data name="ksRedoAddParticipants" xml:space="preserve">
    <value>Redo Add {0}</value>
  </data>
  <data name="ksRedoDeleteParticipants" xml:space="preserve">
    <value>Redo Delete Participants</value>
  </data>
  <data name="ksUndoAddParticipants" xml:space="preserve">
    <value>Undo Add {0}</value>
  </data>
  <data name="ksUndoDeleteParticipants" xml:space="preserve">
    <value>Undo Delete Participants</value>
  </data>
  <data name="ksRedoAddExamples" xml:space="preserve">
    <value>Redo Add Examples</value>
  </data>
  <data name="ksUndoAddExamples" xml:space="preserve">
    <value>Undo Add Examples</value>
  </data>
  <data name="ksRedoPromote" xml:space="preserve">
    <value>Redo Promote</value>
  </data>
  <data name="ksUndoPromote" xml:space="preserve">
    <value>Undo Promote</value>
  </data>
  <data name="ksChooseWhereToShowSubentry" xml:space="preserve">
    <value>Choose where to show subentry</value>
  </data>
  <data name="ksAddAComponent" xml:space="preserve">
    <value>Add a Component...</value>
  </data>
  <data name="ksRedoCreateReversalIndex" xml:space="preserve">
    <value>Redo Create Reversal Index</value>
  </data>
  <data name="ksUndoCreateReversalIndex" xml:space="preserve">
    <value>Undo Create Reversal Index</value>
  </data>
  <data name="ksUndoEditRefSetDetails" xml:space="preserve">
    <value>Undo Edit Reference Set Details</value>
  </data>
  <data name="ksRedoEditRefSetDetails" xml:space="preserve">
    <value>Redo Edit Reference Set Details</value>
  </data>
  <data name="ksRedoDemote" xml:space="preserve">
    <value>Redo Demote</value>
  </data>
  <data name="ksUndoDemote" xml:space="preserve">
    <value>Undo Demote</value>
  </data>
  <data name="ksUndoCreatingEntry" xml:space="preserve">
    <value>Undo Creating Entry</value>
  </data>
  <data name="ksRedoCreatingEntry" xml:space="preserve">
    <value>Redo Creating Entry</value>
  </data>
  <data name="ksMakeComponentOf" xml:space="preserve">
    <value>Select</value>
    <comment>Replaces text of "OK" button in choose entry dialog when choosing a lex entry to make this one a component of. Should be short enough to fit in standard button.</comment>
  </data>
  <data name="ksRedoAddComplexForm" xml:space="preserve">
    <value>Undo Add Complex Form</value>
  </data>
  <data name="ksUndoAddComplexForm" xml:space="preserve">
    <value>Undo Add Complex Form</value>
  </data>
  <data name="ksChooseSubentries" xml:space="preserve">
    <value>Choose Subentries to display in Root-based views</value>
  </data>
  <data name="ksChooseVisibleComplexForms" xml:space="preserve">
    <value>Choose Complex Forms to display in Lexeme-based views</value>
  </data>
  <data name="ksAddAComplexForm" xml:space="preserve">
    <value>Add a Complex Form...</value>
  </data>
  <data name="kProblemImportWhileMerging" xml:space="preserve">
    <value>FieldWorks was unable to import the LIFT file {0} that resulted from merging remote changes. Remote changes have NOT been received into this project. This may indicate corruption of the LIFT file, or possibly a bug in Language Explorer. The following message may provide more details of what went wrong: {1}</value>
  </data>
  <data name="kProblemMerging" xml:space="preserve">
    <value>Problem merging remote changes</value>
    <comment>Dialog caption</comment>
  </data>
  <data name="ksDeleteEntriesSenses" xml:space="preserve">
    <value>Delete Entries and Senses that are not used in interlinear</value>
  </data>
  <data name="ksDeleteEntriesSensesDoes" xml:space="preserve">
    <value>After a confirmation warning, this will delete all entries and senses that are not referenced in the current set of filtered interlinear texts.</value>
  </data>
  <data name="ksDeleteEntriesSensesWhen" xml:space="preserve">
    <value>Use this when you want to have a lexicon that is limited to entries and senses that are used in one or more filtered interlinear texts.</value>
  </data>
  <data name="ksDeleteEntriesSensesWarning" xml:space="preserve">
    <value>Always back up your project before using this. This will delete all of your entries and senses if you have not done any interlinearization, and can delete a large number if you have done minimal interlinearization. It cannot be undone. It will warn you about the number of entries that will be deleted and give you a chance to stop without deletions.</value>
  </data>
  <data name="ksDeleteEntrySenseConfirmText" xml:space="preserve">
    <value>You are about to delete {0} lexical entries. Do you want to continue?</value>
  </data>
  <data name="ksDeleteEntrySenseConfirmTitle" xml:space="preserve">
    <value>Delete Entries Confirmation</value>
  </data>
  <data name="ksCannotRedoConvertIrregularlyInflectedFormVariants" xml:space="preserve">
    <value>You cannot use 'Undo' to cancel the effect of this utility. You would need to go back to a previously saved version of the database (i.e., make a backup of your database before running this utility so you can restore to it if the results are not what you want).</value>
  </data>
  <data name="ksConvertIrregularlyInflectedFormVariants" xml:space="preserve">
    <value>Convert variant types to irregularly inflected form variant types</value>
  </data>
  <data name="ksWhatIsConvertIrregularlyInflectedFormVariants" xml:space="preserve">
    <value>This utility allows you to select which variant types should be converted to irregularly inflected form variant types, which are a special sub-kind of variant types.</value>
  </data>
  <data name="ksWhenToConvertIrregularlyInflectedFormVariants" xml:space="preserve">
    <value>Run this utility when you need to convert one or more of your existing variant types to be irregularly inflected form variant types.  When a variant type is an irregularly inflected form variant type, it has extra fields such as 'Append to Gloss', 'Inflection Features', and 'Slots.'</value>
  </data>
  <data name="ksRedoConvertIrregularlyInflectedFormVariants" xml:space="preserve">
    <value>Redo Convert variant types to irregularly inflected form variant types</value>
  </data>
  <data name="ksUndoConvertIrregularlyInflectedFormVariants" xml:space="preserve">
    <value>Undo Convert variant types to irregularly inflected form variant types</value>
  </data>
  <data name="ksCannotRedoConvertVariants" xml:space="preserve">
    <value>You cannot use 'Undo' to cancel the effect of this utility. You would need to go back to a previously saved version of the database (i.e., make a backup of your database before running this utility so you can restore to it if the results are not what you want).</value>
  </data>
  <data name="ksConvertVariants" xml:space="preserve">
    <value>Convert irregularly inflected form variant types to variant types</value>
  </data>
  <data name="ksRedoConvertVariants" xml:space="preserve">
    <value>Redo Convert irregularly inflected form variant types to variant types</value>
  </data>
  <data name="ksUndoConvertVariants" xml:space="preserve">
    <value>Undo Convert irregularly inflected form variant types to variant types</value>
  </data>
  <data name="ksWhatIsConvertVariants" xml:space="preserve">
    <value>This utility allows you to select which irregularly inflected form variant types should be converted to variant types (irregularly inflected form variant types are a special sub-kind of variant types).</value>
  </data>
  <data name="ksWhenToConvertVariants" xml:space="preserve">
    <value>Run this utility when you need to convert one or more of your existing irregularly inflected form variant types to be variant types.  When a variant type is an irregularly inflected form variant type, it has extra fields such as 'Append to Gloss', 'Inflection Features', and 'Slots.'</value>
  </data>
  <data name="ksReassignHomographsCaution" xml:space="preserve">
    <value>The homograph numbers are currently based on {0}. Do you want to update the homograph numbers to be based on the current default vernacular writing system, {1}?</value>
  </data>
  <data name="ksRedoHomographWs" xml:space="preserve">
    <value>Redo Reassign Homographs</value>
  </data>
  <data name="ksUndoHomographWs" xml:space="preserve">
    <value>Undo Reassign Homographs</value>
  </data>
  <data name="kBasicFailureFileContents" xml:space="preserve">
    <value>basic</value>
  </data>
  <data name="kBasicImportFailureMessage" xml:space="preserve">
    <value>FLEx was not able to do the initial import. FLEx Bridge will protect its shared LIFT data from loss by requiring a retry of the initial import, until it is successful. Retry attempts will start with the next LIFT Send/Receive attempt. Sorry for the inconvenience, but a new version of FLEx will likely be required in order to continue using LIFT Send/Receive.</value>
  </data>
  <data name="kFlexImportFailureTitle" xml:space="preserve">
    <value>FLEx Import failure</value>
  </data>
  <data name="kFlexStandardImportFailureMessage" xml:space="preserve">
    <value>FLEx was not able to import the changes received. FLEx Bridge will protect its shared LIFT data from loss by requiring a retry of the import, until it is successful. Retry attempts will start with the next LIFT Send/Receive attempt. Sorry for the inconvenience, but a new version of FLEx will likely be required in order to continue using LIFT Send/Receive.</value>
  </data>
  <data name="ksExistingProjectName" xml:space="preserve">
    <value>That project already exists. Please choose a different name in Project Properties.</value>
  </data>
  <data name="kStandardFailureFileContents" xml:space="preserve">
    <value>standard</value>
  </data>
  <data name="ksWarning" xml:space="preserve">
    <value>Warning</value>
    <comment>Used for dialog caption when project name has non-ASCII characters</comment>
  </data>
  <data name="FLExBridgeListener_UndoExport_Error_exporting_LIFT" xml:space="preserve">
    <value>Error exporting LIFT data; could not complete Send/Receive</value>
    <comment>Message displayed if an error occurred during "Send/Receive Lexicon" while the export of the LIFT data was going on.
</comment>
  </data>
  <data name="FLExBridgeListener_UndoExport_LIFT_Export_failed_Title" xml:space="preserve">
    <value>LIFT Export failed</value>
    <comment>Title of message box displayed if an error occurred during the Send/Receive lift while the export of the LIFT data was going on.
</comment>
  </data>
  <data name="kProjectAlreadyHasLiftRepo" xml:space="preserve">
    <value>This project has already been linked to a Lexicon (LIFT) repository. It is not possible to Get and Merge with another Lexicon repository.</value>
  </data>
  <data name="kCannotDoGetAndMergeAgain" xml:space="preserve">
    <value>Second Get and Merge not possible</value>
  </data>
  <data name="ksSendReceiveNotPermittedMultipleAppsCaption" xml:space="preserve">
    <value>Send/Receive not permitted</value>
  </data>
  <data name="ksSendReceiveNotPermittedMultipleAppsText" xml:space="preserve">
    <value>Send/Receive cannot be performed when there are other applications using this project. Please close all other applications that are using this project before continuing.</value>
  </data>
  <data name="ksWhatIsSetPartOfSpeechGUIDsToGold" xml:space="preserve">
    <value>This utility will make the Part of Speech GUIDs for the project match the GOLD standard.</value>
  </data>
  <data name="ksWhenToSetPartOfSpeechGUIDsToGold" xml:space="preserve">
    <value>If this project was created before FieldWorks version 8.1 and you want to use the data as part of a multi-language query, use this utility to standardize the internal identifiers (GUIDs).</value>
  </data>
  <data name="GoldEticGuidFixer_Guids_changed_Title" xml:space="preserve">
    <value>GUIDs changed</value>
    <comment>MessageBox title when the utility looking for incorrect Part of Speech GUIDs found some.</comment>
  </data>
  <data name="GoldEticGuidFixer_NoChangeTitle" xml:space="preserve">
    <value>No GUIDs changed</value>
    <comment>MessageBox title when the utility looking for incorrect Part of Speech GUIDs found nothing.</comment>
  </data>
  <data name="GoldEticGuidFixer_GuidsChangedContent" xml:space="preserve">
    <value>Some GUIDs for Parts of Speech that did not match the GOLD standard were found and replaced.</value>
    <comment>Message box content for when the utility found GUIDs and changed them.</comment>
  </data>
  <data name="GoldEticGuidFixer_NoChangeContent" xml:space="preserve">
    <value>No changes were necessary.</value>
    <comment>Message box content for when the POS GUID utility found nothing to change.</comment>
  </data>
  <data name="GoldEticGuidFixer_Label" xml:space="preserve">
    <value>Use standard Part of Speech GUIDs</value>
    <comment>Label shown in the Tools:Utilities dialog for the POS GUID utility.</comment>
  </data>
  <data name="LiftSRFailureDetectedOnStartupMessage" xml:space="preserve">
    <value>Your last Send/Receive Lexicon did not complete successfully. Any work you do before a successful S/R Lexicon will be lost. You should immediately retry S/R Lexicon. If it completes successfully, you can continue your work. If the S/R Lexicon continues to fail, contact flex_errors@sil.org for help before doing further work.</value>
  </data>
  <data name="LiftSRFailureDetectedOnStartupTitle" xml:space="preserve">
    <value>Failed LIFT S/R Detected</value>
  </data>
  <data name="ksWhatIsSortReversalSubentries" xml:space="preserve">
    <value>This utility will sort the reversal subentries in your data alphabetically.</value>
  </data>
  <data name="ksWhenToSortReversalSubentries" xml:space="preserve">
    <value>Run this utility when you want your reversal subentries to be sorted alphabetically (in contrast to a manually chosen order, such as by frequency of use).</value>
  </data>
  <data name="ksWarningSortReversalSubentries" xml:space="preserve">
    <value>You cannot use 'Undo' to cancel the effect of this utility. You would need to either go back to a previously saved version of the database, or manually reorder the subentries in each reversal entry again.</value>
  </data>
  <data name="SortReversalSubentries_Label" xml:space="preserve">
    <value>Sort Reversal Subentries</value>
  </data>
  <data name="SortReversalSubEntries_CompletedContent" xml:space="preserve">
    <value>All reversal subentries are now sorted.</value>
  </data>
  <data name="SortReversalSubEntries_CompletedTitle" xml:space="preserve">
    <value>Reversal subentry sorting is completed</value>
  </data>
  <data name="ksBreakCircularRefs" xml:space="preserve">
    <value>Remove circular references to complex forms</value>
  </data>
  <data name="ksTryIfProgramGoesPoof" xml:space="preserve">
    <value>Try this tool if Language Explorer disappears or produces a "FieldWorks has stopped working" dialog when you try to view the Dictionary.</value>
  </data>
  <data name="ksWhatAreCircularRefs" xml:space="preserve">
    <value>Older versions of Language Explorer allowed the user to make two complex form entries claim each other as components.  This is no longer allowed, but older projects can be in this bad state.</value>
  </data>
  <data name="ksRemovingCircularComponentLexeme" xml:space="preserve">
    <value>Removing {0} as component lexeme for {1}</value>
  </data>
  <data name="ksFoundNCircularReferences" xml:space="preserve">
    <value>Found {0} circular references in {1} entry references</value>
  </data>
  <data name="ksCircularRefsFixed" xml:space="preserve">
    <value>Circular Reference Fixed</value>
  </data>
  <data name="ksAlsoEmptyComplexFormInfo" xml:space="preserve">
    <value>Also removing empty Complex Form Info from {0}</value>
  </data>
  <data name="SendReceiveForTheFirstTimeContent" xml:space="preserve">
    <value>&amp;lt;!DOCTYPE html&amp;gt;&amp;lt;html&amp;gt;&amp;lt;body style='font-family:"Microsoft Sans Serif","sans-serif";font-size:9.5pt'&amp;gt;
&amp;lt;p style='font-size:11pt;margin-bottom:0in'&amp;gt;Getting Started&amp;lt;/p&amp;gt;
&amp;lt;p style='margin:0in;text-indent:10.5pt'&amp;gt;When you begin to share data for the first time, the computer with the most authoritative copy &amp;lt;b&amp;gt;must&amp;lt;/b&amp;gt; be the first to send/receive, and all other computers must have the project &amp;lt;b&amp;gt;removed&amp;lt;/b&amp;gt; from that computer before proceeding.&amp;lt;/p&amp;gt;
&amp;lt;p style='margin:0in;text-indent:10pt'&amp;gt;If your project is spread across two or more computers, and neither contains a more complete or up-to-date work, it is recommended to merge the databases into one project before sharing the project. If you need help with this process, please contact &amp;lt;a href='mailto:FLEx_Errors@sil.org'&amp;gt;FLEx_Errors@sil.org&amp;lt;/a&amp;gt; for advice.&amp;lt;/p&amp;gt;
&amp;lt;p style='margin:0in;text-indent:10pt'&amp;gt;All other computers/users in the project will receive this project through the command &amp;amp;quot;Get Project from Colleague&amp;amp;quot;. After that, they can continue to work on the new shared project.&amp;lt;/p&amp;gt;
&amp;lt;p style='margin:0in;text-indent:10pt'&amp;gt;For step-by-step instructions on project sharing, please search for &amp;amp;quot;Get started with Send/Receive&amp;amp;quot; in the Helps or click the Help button below.&amp;lt;/p&amp;gt;
&amp;lt;p style='font-size:11pt;margin-bottom:0in'&amp;gt;Best Practices&amp;lt;/p&amp;gt;
&amp;lt;p style='margin:0in;text-indent:10pt'&amp;gt;When working, it is recommended for each user to complete a send/receive before starting the day's work (to receive the most current data) and when ending the day's work (to share your new changes with other users). Users who work at the same time, or who are making major changes to the database are encouraged to send/receive more often to prevent conflicts.&amp;lt;/p&amp;gt;
&amp;lt;ul&amp;gt;&amp;lt;p style='margin:0in;margin-left:-30pt;text-indent:10pt'&amp;gt;As with any Send/Receive process, there are recommendations about which areas to avoid editing at the same time:&amp;lt;/p&amp;gt;
&amp;lt;li style='list-style-type:bullet;margin-left:-10pt'&amp;gt;If you will be doing a Bulk Edit, please do a Send/Receive immediately before and after, and ask other teammates to refrain from working while you do this.&amp;lt;/li&amp;gt;
&amp;lt;li style='list-style-type:bullet;margin-left:-10pt'&amp;gt;Try to avoid having two users work on the same interlinear text during the same send/receive cycle. This includes the Text Chart.&amp;lt;/li&amp;gt;
&amp;lt;li style='list-style-type:bullet;margin-left:-10pt'&amp;gt;If two users adjust lexical relations in the same entry in the same Send/Receive cycle, the results may not be what you expect.&amp;lt;/li&amp;gt;
&amp;lt;li style='list-style-type:bullet;margin-left:-10pt'&amp;gt;Once you have done Send/Receive with this project, you will not be able to restore a backup over it.&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;</value>
    <comment>HTML used to display instructions for users when the Send/Receive for the first time menu item is used</comment>
  </data>
</root>