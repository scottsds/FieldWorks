//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SIL.FieldWorks.XWorks.LexText {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class LexTextStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal LexTextStrings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SIL.FieldWorks.XWorks.LexText.LexTextStrings", typeof(LexTextStrings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not locate the tool named &apos;{0}&apos;..
        /// </summary>
        public static string CannotFindToolNamed0 {
            get {
                return ResourceManager.GetString("CannotFindToolNamed0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your settings have developed a problem in which they don&apos;t know what tool is the default for the area {0}. Please report this problem..
        /// </summary>
        public static string ksAreaXLostItsDefaultTool {
            get {
                return ResourceManager.GetString("ksAreaXLostItsDefaultTool", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sorry, could not launch {0}..
        /// </summary>
        public static string ksCannotLaunchX {
            get {
                return ResourceManager.GetString("ksCannotLaunchX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not locate the writing system based on the locale &apos;{0}&apos;..
        /// </summary>
        public static string ksCannotLocateWsForX {
            get {
                return ResourceManager.GetString("ksCannotLocateWsForX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sorry, could not show {0}..
        /// </summary>
        public static string ksCannotShowX {
            get {
                return ResourceManager.GetString("ksCannotShowX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot use &apos;Undo&apos; to cancel the effect of this utility. You would need to go back to a previously saved version of the database..
        /// </summary>
        public static string ksCannotUndoTransducingCitForms {
            get {
                return ResourceManager.GetString("ksCannotUndoTransducingCitForms", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Characters within words.
        /// </summary>
        public static string ksCharsWithinWords {
            get {
                return ResourceManager.GetString("ksCharsWithinWords", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This discourse analysis tool has columns preset for SVO languages. If you need to change that order, edit the list called &quot;Text Constituent Chart Templates&quot;. The columns are the 3rd level list items. Note that once you have charted some text, you cannot reorder the columns without first clearing the chart..
        /// </summary>
        public static string ksChartTemplateWarning {
            get {
                return ResourceManager.GetString("ksChartTemplateWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Click OK..
        /// </summary>
        public static string ksClickOK {
            get {
                return ResourceManager.GetString("ksClickOK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You will now be taken to a new, custom grammatical category. Enter at least the name and abbreviation for the new category. Then, click the &quot;Back&quot; button on the toolbar to return to where you were working. The new category will then be available for you to choose..
        /// </summary>
        public static string ksCreatingCustomGramCategory {
            get {
                return ResourceManager.GetString("ksCreatingCustomGramCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You will now be taken to a new lexical reference type. Enter at least the name and abbreviation for the type. Then, click the &quot;Back&quot; button on the toolbar to return to where you were working. The new type will then be available for you to choose..
        /// </summary>
        public static string ksCreatingCustomLexRefType {
            get {
                return ResourceManager.GetString("ksCreatingCustomLexRefType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating window for {0} Project....
        /// </summary>
        public static string ksCreatingWindowForX {
            get {
                return ResourceManager.GetString("ksCreatingWindowForX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This project is in the format that permits sharing over a network, but that format is not compatible with Send/Receive..
        /// </summary>
        public static string ksDb4oProjectNotShareableTextLine1 {
            get {
                return ResourceManager.GetString("ksDb4oProjectNotShareableTextLine1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To change the format of your projects, use the link below and clear the checkbox labeled &apos;Share Projects stored on this computer&apos;..
        /// </summary>
        public static string ksDb4oProjectNotShareableTextLine2 {
            get {
                return ResourceManager.GetString("ksDb4oProjectNotShareableTextLine2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Project format not compatible for Send/Receive.
        /// </summary>
        public static string ksDb4oProjectNotShareableTitle {
            get {
                return ResourceManager.GetString("ksDb4oProjectNotShareableTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is a trivial demonstration of using Python to generate the contents of a field. It is extremely limited.  It grabs the default vernacular alternative of the citation form of every entry, runs it through a Python script that you supply, and then places the output in a different writing system alternative of the citation form. It is currently implemented in a very inefficient way; it actually runs the Python script once for every entry in the database. This utility will run the Python script found at (yo [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ksDemoOfUsingPython {
            get {
                return ResourceManager.GetString("ksDemoOfUsingPython", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error.
        /// </summary>
        public static string ksError {
            get {
                return ResourceManager.GetString("ksError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred trying to launch the movies. You could try to launch them yourself. They are located in this folder: {0}.
        /// </summary>
        public static string ksErrorCannotLaunchMovies {
            get {
                return ResourceManager.GetString("ksErrorCannotLaunchMovies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error loading resource strings: {0}.
        /// </summary>
        public static string ksErrorLoadingResourceStrings {
            get {
                return ResourceManager.GetString("ksErrorLoadingResourceStrings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an error: {0}
        ///{1}.
        /// </summary>
        public static string ksErrorMsgWithStackTrace {
            get {
                return ResourceManager.GetString("ksErrorMsgWithStackTrace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to That project already exists. You&apos;ll need to choose a different name in Project Properties..
        /// </summary>
        public static string ksExistingProjectName {
            get {
                return ResourceManager.GetString("ksExistingProjectName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Information.
        /// </summary>
        public static string ksInformation {
            get {
                return ResourceManager.GetString("ksInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Initializing Layouts....
        /// </summary>
        public static string ksInitializingLayouts_ {
            get {
                return ResourceManager.GetString("ksInitializingLayouts_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Initializing Message Dialogs....
        /// </summary>
        public static string ksInitializingMessageDialogs_ {
            get {
                return ResourceManager.GetString("ksInitializingMessageDialogs_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loading....
        /// </summary>
        public static string ksLoading_ {
            get {
                return ResourceManager.GetString("ksLoading_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Feature.
        /// </summary>
        public static string ksNewFeature {
            get {
                return ResourceManager.GetString("ksNewFeature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This view shows semantic domains that have been used to classify senses, each listing the related senses. You can optionally show all semantic domains, even those that have not been used for any senses..
        /// </summary>
        public static string ksShowingSemanticClassification {
            get {
                return ResourceManager.GetString("ksShowingSemanticClassification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to study the training materials for Language Explorer?
        ///
        ///If you click Yes, the Sena 3 sample project will open. On the Help menu, point to Training and click Student Manual for a walk-through guide.
        ///Alternatively, point to Demo Movies and choose an option.
        ///	- Play All gives a half-hour overview of Language Explorer.
        ///	- You may also choose specific demo movie topics.
        ///
        ///If you click No, you will see various options for starting work in Language Explorer..
        /// </summary>
        public static string kstidOpenSampleDbMsg {
            get {
                return ResourceManager.GetString("kstidOpenSampleDbMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FlexErrors@sil.org.
        /// </summary>
        public static string kstidSupportEmail {
            get {
                return ResourceManager.GetString("kstidSupportEmail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transduce Citation Forms.
        /// </summary>
        public static string ksTransduceCitationForms {
            get {
                return ResourceManager.GetString("ksTransduceCitationForms", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Under Development.
        /// </summary>
        public static string ksUnderDevelopment {
            get {
                return ResourceManager.GetString("ksUnderDevelopment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FieldWorks now provides a way for you to specify for each writing system which characters are found in words (word-forming) and which characters are not found in words (punctuation, symbols, spacing).
        ///
        ///Before using Text or Concordance tools, we recommend you add word-forming characters so that Language Explorer does not change where it thinks the word boundaries are in your texts. If you use apostrophes, hyphens, zero-width characters, or superscript numbers within words, these should be added and specifi [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ksUpgradeValidCharsWarning {
            get {
                return ResourceManager.GetString("ksUpgradeValidCharsWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This tool is designed for a typist to use during a semantically-based word-collection workshop.  For information on this method, see http://www.rapidwords.net.
        /// </summary>
        public static string ksUsedForSemanticBasedEntry {
            get {
                return ResourceManager.GetString("ksUsedForSemanticBasedEntry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning.
        /// </summary>
        public static string ksWarning {
            get {
                return ResourceManager.GetString("ksWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This can be used to convert Citation Forms into another writing system..
        /// </summary>
        public static string ksWhenToTransduceCitForms {
            get {
                return ResourceManager.GetString("ksWhenToTransduceCitForms", resourceCulture);
            }
        }
    }
}
