
| DO NOT EDIT THIS FILE DIRECTLY!
|

| ------------------------------------------------------------
|                TOP-LEVEL WORD
| ------------------------------------------------------------
rule {Top-level cliticless word}
  OrthographicWord = Word
								| percolation
		<OrthographicWord synCat>       = <Word synCat>
		<OrthographicWord morphoSyntax> = <Word morphoSyntax>

rule {Top-level word with one or more proclitics and enclitics}
  OrthographicWord = Proclitics Word Enclitics
								| percolation
		<OrthographicWord synCat>       = <Word synCat>
		<OrthographicWord morphoSyntax> = <Word morphoSyntax>
		<OrthographicWord proclitics morphoSyntax> = <Proclitics morphoSyntax>
		<OrthographicWord enclitics morphoSyntax> = <Enclitics morphoSyntax>
								| drip (pass down)
		<Word synCat>       = <Proclitics synCat>
		<Word synCat>       = <Enclitics synCat>

rule {Top-level word with one or more proclitics}
  OrthographicWord = Proclitics Word
								| percolation
		<OrthographicWord synCat>       = <Word synCat>
		<OrthographicWord morphoSyntax> = <Word morphoSyntax>
		<OrthographicWord proclitics morphoSyntax> = <Proclitics morphoSyntax>
								| drip (pass down)
		<Word synCat>       = <Proclitics synCat>

rule {Top-level word with one or more enclitics}
  OrthographicWord =            Word Enclitics
								| percolation
		<OrthographicWord synCat>       = <Word synCat>
		<OrthographicWord morphoSyntax> = <Word morphoSyntax>
		<OrthographicWord enclitics morphoSyntax> = <Enclitics morphoSyntax>
								| drip (pass down)
		<Word synCat>       = <Enclitics synCat>


| ------------------------------------------------------------
|                CLITICS
| ------------------------------------------------------------
rule {One or more proclitics}
  Proclitics_1 = proclitic (Proclitics_2)
								| percolation
		<Proclitics_1 morphoSyntax> = <proclitic morphoSyntax>
								| drip (pass down)
		<Proclitics_1 synCat>       = <Proclitics_2 synCat>
								| constraints
		<Proclitics_2 morphoSyntax> = <proclitic morphoSyntax>
		<Proclitics_1 synCat>       = <proclitic fromCat>

rule {One or more enclitics}
  Enclitics_1  = (Enclitics_2) enclitic
								| percolation
		<Enclitics_1 morphoSyntax> = <enclitic morphoSyntax>
								| drip (pass down)
		<Enclitics_1 synCat>       = <Enclitics_2 synCat>
								| constraints
		<Enclitics_2 morphoSyntax> = <enclitic morphoSyntax>
		<Enclitics_1 synCat>       = <enclitic fromCat>


| ------------------------------------------------------------
|                WORD
| ------------------------------------------------------------
rule {clitic word}
  Word = clitic
								| percolation
		<Word synCat>       = <clitic rootCat>
		<Word morphoSyntax> = <clitic morphoSyntax>

rule {Fully analyzed word}
  Word = Full
								| percolation
		<Word synCat>       = <Full synCat>
		<Word morphoSyntax> = <Full morphoSyntax>
		<Full> == [requiresInflection : -] /  | doesn't require inflection or
				  [inflected : +]             | is inflected

rule {Partially analyzed word}
  Word = Partial
								| percolation
		<Word synCat>       = <Partial synCat>
		<Word morphoSyntax> = <Partial morphoSyntax>

| ------------------------------------------------------------
|                FULLY ANALYZED WORD PORTION
| ------------------------------------------------------------

rule {Fully analyzed stem with no inflectional template}
  Full = Stem
								| percolation
		<Full synCat>       = <Stem synCat>
		<Full morphoSyntax> = <Stem morphoSyntax>
		<Full stratum>      = <Stem stratum>
		<Full requiresInflection> = <Stem requiresInflection>
						  | constraint
		<Full inflected>    = -  | this Full word category is not inflected
		<Stem blocksInflection> = - | prevent a non-final template from immediately being inflected without any intervening derivation or compounding

rule {Fully analyzed stem with a final inflectional template 13149}
  Full =  Stem 13150_0
														 | percolation
  <Full synCat>       = <Stem synCat>
  <Full morphoSyntax> = <Stem morphoSyntax>
  <Full inflected>    = +
  <Full requiresInflection> = -
						  | constraints
  <Stem blocksInflection> = - | prevent a non-final template from immediately being inflected without any intervening derivation or compounding
  <Stem  synCat>       = 13146
  <Stem morphoSyntax>    = <13150_0 morphoSyntax>
  <Stem synCat>          = <13150_0 envCat>   | allomorph
  <Stem exception>       = <13150_0 fromException>
  <Stem inflectionClass> = <13150_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <13150_0 morphoSyntax>
rule {Fully analyzed stem with a final inflectional template 13166}
  Full =  13205_0 Stem (13303_0) (13196_1)
														 | percolation
  <Full synCat>       = <Stem synCat>
  <Full morphoSyntax> = <Stem morphoSyntax>
  <Full inflected>    = +
  <Full requiresInflection> = -
						  | constraints
  <Stem blocksInflection> = - | prevent a non-final template from immediately being inflected without any intervening derivation or compounding
  <Stem  synCat>       = 13146
  <Stem morphoSyntax>    = <13205_0 morphoSyntax>
  <Stem synCat>          = <13205_0 envCat>   | allomorph
  <Stem exception>       = <13205_0 fromException>
  <Stem inflectionClass> = <13205_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <13205_0 morphoSyntax>
  <Stem morphoSyntax>    = <13303_0 morphoSyntax>
  <Stem synCat>          = <13303_0 envCat>   | allomorph
  <Stem exception>       = <13303_0 fromException>
  <Stem inflectionClass> = <13303_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <13303_0 morphoSyntax>
  <Stem morphoSyntax>    = <13196_1 morphoSyntax>
  <Stem synCat>          = <13196_1 envCat>   | allomorph
  <Stem exception>       = <13196_1 fromException>
  <Stem inflectionClass> = <13196_1 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <13196_1 morphoSyntax>
rule {Fully analyzed stem with a final inflectional template 17101}
  Full =  17102_0 Stem 13150_0
														 | percolation
  <Full synCat>       = <Stem synCat>
  <Full morphoSyntax> = <Stem morphoSyntax>
  <Full inflected>    = +
  <Full requiresInflection> = -
						  | constraints
  <Stem blocksInflection> = - | prevent a non-final template from immediately being inflected without any intervening derivation or compounding
  <Stem  synCat>       = 13146
  <Stem morphoSyntax>    = <17102_0 morphoSyntax>
  <Stem synCat>          = <17102_0 envCat>   | allomorph
  <Stem exception>       = <17102_0 fromException>
  <Stem inflectionClass> = <17102_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17102_0 morphoSyntax>
  <Stem morphoSyntax>    = <13150_0 morphoSyntax>
  <Stem synCat>          = <13150_0 envCat>   | allomorph
  <Stem exception>       = <13150_0 fromException>
  <Stem inflectionClass> = <13150_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <13150_0 morphoSyntax>
rule {Fully analyzed stem with a final inflectional template 17117}
  Full =  17102_0 13205_1 Stem (13303_0) (13196_1)
														 | percolation
  <Full synCat>       = <Stem synCat>
  <Full morphoSyntax> = <Stem morphoSyntax>
  <Full inflected>    = +
  <Full requiresInflection> = -
						  | constraints
  <Stem blocksInflection> = - | prevent a non-final template from immediately being inflected without any intervening derivation or compounding
  <Stem  synCat>       = 13146
  <Stem morphoSyntax>    = <17102_0 morphoSyntax>
  <Stem synCat>          = <17102_0 envCat>   | allomorph
  <Stem exception>       = <17102_0 fromException>
  <Stem inflectionClass> = <17102_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17102_0 morphoSyntax>
  <Stem morphoSyntax>    = <13205_1 morphoSyntax>
  <Stem synCat>          = <13205_1 envCat>   | allomorph
  <Stem exception>       = <13205_1 fromException>
  <Stem inflectionClass> = <13205_1 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <13205_1 morphoSyntax>
  <Stem morphoSyntax>    = <13303_0 morphoSyntax>
  <Stem synCat>          = <13303_0 envCat>   | allomorph
  <Stem exception>       = <13303_0 fromException>
  <Stem inflectionClass> = <13303_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <13303_0 morphoSyntax>
  <Stem morphoSyntax>    = <13196_1 morphoSyntax>
  <Stem synCat>          = <13196_1 envCat>   | allomorph
  <Stem exception>       = <13196_1 fromException>
  <Stem inflectionClass> = <13196_1 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <13196_1 morphoSyntax>
rule {Fully analyzed stem with a final inflectional template 13277}
  Full =  13205_0 Stem (13303_0) (13196_1)
														 | percolation
  <Full synCat>       = <Stem synCat>
  <Full morphoSyntax> = <Stem morphoSyntax>
  <Full inflected>    = +
  <Full requiresInflection> = -
						  | constraints
  <Stem blocksInflection> = - | prevent a non-final template from immediately being inflected without any intervening derivation or compounding
  <Stem  synCat>       = 13147
  <Stem morphoSyntax>    = <13205_0 morphoSyntax>
  <Stem synCat>          = <13205_0 envCat>   | allomorph
  <Stem exception>       = <13205_0 fromException>
  <Stem inflectionClass> = <13205_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <13205_0 morphoSyntax>
  <Stem morphoSyntax>    = <13303_0 morphoSyntax>
  <Stem synCat>          = <13303_0 envCat>   | allomorph
  <Stem exception>       = <13303_0 fromException>
  <Stem inflectionClass> = <13303_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <13303_0 morphoSyntax>
  <Stem morphoSyntax>    = <13196_1 morphoSyntax>
  <Stem synCat>          = <13196_1 envCat>   | allomorph
  <Stem exception>       = <13196_1 fromException>
  <Stem inflectionClass> = <13196_1 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <13196_1 morphoSyntax>
rule {Fully analyzed stem with a final inflectional template 17118}
  Full =  17102_0 13205_1 Stem (13303_0) (13196_1)
														 | percolation
  <Full synCat>       = <Stem synCat>
  <Full morphoSyntax> = <Stem morphoSyntax>
  <Full inflected>    = +
  <Full requiresInflection> = -
						  | constraints
  <Stem blocksInflection> = - | prevent a non-final template from immediately being inflected without any intervening derivation or compounding
  <Stem  synCat>       = 13147
  <Stem morphoSyntax>    = <17102_0 morphoSyntax>
  <Stem synCat>          = <17102_0 envCat>   | allomorph
  <Stem exception>       = <17102_0 fromException>
  <Stem inflectionClass> = <17102_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17102_0 morphoSyntax>
  <Stem morphoSyntax>    = <13205_1 morphoSyntax>
  <Stem synCat>          = <13205_1 envCat>   | allomorph
  <Stem exception>       = <13205_1 fromException>
  <Stem inflectionClass> = <13205_1 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <13205_1 morphoSyntax>
  <Stem morphoSyntax>    = <13303_0 morphoSyntax>
  <Stem synCat>          = <13303_0 envCat>   | allomorph
  <Stem exception>       = <13303_0 fromException>
  <Stem inflectionClass> = <13303_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <13303_0 morphoSyntax>
  <Stem morphoSyntax>    = <13196_1 morphoSyntax>
  <Stem synCat>          = <13196_1 envCat>   | allomorph
  <Stem exception>       = <13196_1 fromException>
  <Stem inflectionClass> = <13196_1 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <13196_1 morphoSyntax>
rule {Fully analyzed stem with a final inflectional template 13278}
  Full =  Stem (13279_0)
														 | percolation
  <Full synCat>       = <Stem synCat>
  <Full morphoSyntax> = <Stem morphoSyntax>
  <Full inflected>    = +
  <Full requiresInflection> = -
						  | constraints
  <Stem blocksInflection> = - | prevent a non-final template from immediately being inflected without any intervening derivation or compounding
  <Stem  synCat>       = 13148
  <Stem morphoSyntax>    = <13279_0 morphoSyntax>
  <Stem synCat>          = <13279_0 envCat>   | allomorph
  <Stem exception>       = <13279_0 fromException>
  <Stem inflectionClass> = <13279_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <13279_0 morphoSyntax>
rule {Fully analyzed stem with a final inflectional template 13329}
  Full =  13205_0 Stem (13196_0)
														 | percolation
  <Full synCat>       = <Stem synCat>
  <Full morphoSyntax> = <Stem morphoSyntax>
  <Full inflected>    = +
  <Full requiresInflection> = -
						  | constraints
  <Stem blocksInflection> = - | prevent a non-final template from immediately being inflected without any intervening derivation or compounding
  <Stem  synCat>       = 13148
  <Stem morphoSyntax>    = <13205_0 morphoSyntax>
  <Stem synCat>          = <13205_0 envCat>   | allomorph
  <Stem exception>       = <13205_0 fromException>
  <Stem inflectionClass> = <13205_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <13205_0 morphoSyntax>
  <Stem morphoSyntax>    = <13196_0 morphoSyntax>
  <Stem synCat>          = <13196_0 envCat>   | allomorph
  <Stem exception>       = <13196_0 fromException>
  <Stem inflectionClass> = <13196_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <13196_0 morphoSyntax>
rule {Fully analyzed stem with a final inflectional template 17119}
  Full =  17102_0 13205_1 Stem (13196_0)
														 | percolation
  <Full synCat>       = <Stem synCat>
  <Full morphoSyntax> = <Stem morphoSyntax>
  <Full inflected>    = +
  <Full requiresInflection> = -
						  | constraints
  <Stem blocksInflection> = - | prevent a non-final template from immediately being inflected without any intervening derivation or compounding
  <Stem  synCat>       = 13148
  <Stem morphoSyntax>    = <17102_0 morphoSyntax>
  <Stem synCat>          = <17102_0 envCat>   | allomorph
  <Stem exception>       = <17102_0 fromException>
  <Stem inflectionClass> = <17102_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17102_0 morphoSyntax>
  <Stem morphoSyntax>    = <13205_1 morphoSyntax>
  <Stem synCat>          = <13205_1 envCat>   | allomorph
  <Stem exception>       = <13205_1 fromException>
  <Stem inflectionClass> = <13205_1 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <13205_1 morphoSyntax>
  <Stem morphoSyntax>    = <13196_0 morphoSyntax>
  <Stem synCat>          = <13196_0 envCat>   | allomorph
  <Stem exception>       = <13196_0 fromException>
  <Stem inflectionClass> = <13196_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <13196_0 morphoSyntax>
rule {Fully analyzed stem with a final inflectional template 13340}
  Full =  Stem (13341_0)
														 | percolation
  <Full synCat>       = <Stem synCat>
  <Full morphoSyntax> = <Stem morphoSyntax>
  <Full inflected>    = +
  <Full requiresInflection> = -
						  | constraints
  <Stem blocksInflection> = - | prevent a non-final template from immediately being inflected without any intervening derivation or compounding
  <Stem  synCat>       = 13339
  <Stem morphoSyntax>    = <13341_0 morphoSyntax>
  <Stem synCat>          = <13341_0 envCat>   | allomorph
  <Stem exception>       = <13341_0 fromException>
  <Stem inflectionClass> = <13341_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <13341_0 morphoSyntax>
rule {Fully analyzed stem with a final inflectional template 17120}
  Full =  17102_0 Stem (13341_0)
														 | percolation
  <Full synCat>       = <Stem synCat>
  <Full morphoSyntax> = <Stem morphoSyntax>
  <Full inflected>    = +
  <Full requiresInflection> = -
						  | constraints
  <Stem blocksInflection> = - | prevent a non-final template from immediately being inflected without any intervening derivation or compounding
  <Stem  synCat>       = 13339
  <Stem morphoSyntax>    = <17102_0 morphoSyntax>
  <Stem synCat>          = <17102_0 envCat>   | allomorph
  <Stem exception>       = <17102_0 fromException>
  <Stem inflectionClass> = <17102_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17102_0 morphoSyntax>
  <Stem morphoSyntax>    = <13341_0 morphoSyntax>
  <Stem synCat>          = <13341_0 envCat>   | allomorph
  <Stem exception>       = <13341_0 fromException>
  <Stem inflectionClass> = <13341_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <13341_0 morphoSyntax>
rule {Fully analyzed stem with a final inflectional template 16931}
  Full =  (16932_0) (24689_1) Stem 16933_0
														 | percolation
  <Full synCat>       = <Stem synCat>
  <Full morphoSyntax> = <Stem morphoSyntax>
  <Full inflected>    = +
  <Full requiresInflection> = -
						  | constraints
  <Stem blocksInflection> = - | prevent a non-final template from immediately being inflected without any intervening derivation or compounding
  <Stem  synCat>       = 16929
  <Stem morphoSyntax>    = <16932_0 morphoSyntax>
  <Stem synCat>          = <16932_0 envCat>   | allomorph
  <Stem exception>       = <16932_0 fromException>
  <Stem inflectionClass> = <16932_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <16932_0 morphoSyntax>
  <Stem morphoSyntax>    = <24689_1 morphoSyntax>
  <Stem synCat>          = <24689_1 envCat>   | allomorph
  <Stem exception>       = <24689_1 fromException>
  <Stem inflectionClass> = <24689_1 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <24689_1 morphoSyntax>
  <Stem morphoSyntax>    = <16933_0 morphoSyntax>
  <Stem synCat>          = <16933_0 envCat>   | allomorph
  <Stem exception>       = <16933_0 fromException>
  <Stem inflectionClass> = <16933_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <16933_0 morphoSyntax>
  <Full stemNameInfo stemName>       = <Stem stemName>
				  | stem name logical constraint
 <Full stemNameInfo> == (
  ([stemName:66683] -> ([morphoSyntax:[ 16944:20772 20800:20801]]  / ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] ))))
				 & ( ([stemName:66696] -> ([morphoSyntax:[ 17137:66715]]  / ([morphoSyntax:[ 20800:20806]] )))
				 & ( ([stemName:66698] -> ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] )))
			& ( ([stemName:NotStemName66683] -> ~([morphoSyntax:[ 16944:20772 20800:20801]]  / ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] ))))
			& ( ([stemName:NotStemName66696] -> ~([morphoSyntax:[ 17137:66715]]  / ([morphoSyntax:[ 20800:20806]] ))))))))
rule {Fully analyzed stem with a final inflectional template 22719}
  Full =  (16932_0) (24689_1) Stem 22720_0 22008_1
														 | percolation
  <Full synCat>       = <Stem synCat>
  <Full morphoSyntax> = <Stem morphoSyntax>
  <Full inflected>    = +
  <Full requiresInflection> = -
						  | constraints
  <Stem blocksInflection> = - | prevent a non-final template from immediately being inflected without any intervening derivation or compounding
  <Stem  synCat>       = 16929
  <Stem morphoSyntax>    = <16932_0 morphoSyntax>
  <Stem synCat>          = <16932_0 envCat>   | allomorph
  <Stem exception>       = <16932_0 fromException>
  <Stem inflectionClass> = <16932_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <16932_0 morphoSyntax>
  <Stem morphoSyntax>    = <24689_1 morphoSyntax>
  <Stem synCat>          = <24689_1 envCat>   | allomorph
  <Stem exception>       = <24689_1 fromException>
  <Stem inflectionClass> = <24689_1 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <24689_1 morphoSyntax>
  <Stem morphoSyntax>    = <22720_0 morphoSyntax>
  <Stem synCat>          = <22720_0 envCat>   | allomorph
  <Stem exception>       = <22720_0 fromException>
  <Stem inflectionClass> = <22720_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <22720_0 morphoSyntax>
  <Stem morphoSyntax>    = <22008_1 morphoSyntax>
  <Stem synCat>          = <22008_1 envCat>   | allomorph
  <Stem exception>       = <22008_1 fromException>
  <Stem inflectionClass> = <22008_1 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <22008_1 morphoSyntax>
  <Full stemNameInfo stemName>       = <Stem stemName>
				  | stem name logical constraint
 <Full stemNameInfo> == (
  ([stemName:66683] -> ([morphoSyntax:[ 16944:20772 20800:20801]]  / ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] ))))
				 & ( ([stemName:66696] -> ([morphoSyntax:[ 17137:66715]]  / ([morphoSyntax:[ 20800:20806]] )))
				 & ( ([stemName:66698] -> ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] )))
			& ( ([stemName:NotStemName66683] -> ~([morphoSyntax:[ 16944:20772 20800:20801]]  / ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] ))))
			& ( ([stemName:NotStemName66696] -> ~([morphoSyntax:[ 17137:66715]]  / ([morphoSyntax:[ 20800:20806]] ))))))))
rule {Fully analyzed stem with a final inflectional template 20765}
  Full =  20766_0 (16932_1) (24689_2) Stem 22008_0
														 | percolation
  <Full synCat>       = <Stem synCat>
  <Full morphoSyntax> = <Stem morphoSyntax>
  <Full inflected>    = +
  <Full requiresInflection> = -
						  | constraints
  <Stem blocksInflection> = - | prevent a non-final template from immediately being inflected without any intervening derivation or compounding
  <Stem  synCat>       = 16929
  <Stem morphoSyntax>    = <20766_0 morphoSyntax>
  <Stem synCat>          = <20766_0 envCat>   | allomorph
  <Stem exception>       = <20766_0 fromException>
  <Stem inflectionClass> = <20766_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <20766_0 morphoSyntax>
  <Stem morphoSyntax>    = <16932_1 morphoSyntax>
  <Stem synCat>          = <16932_1 envCat>   | allomorph
  <Stem exception>       = <16932_1 fromException>
  <Stem inflectionClass> = <16932_1 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <16932_1 morphoSyntax>
  <Stem morphoSyntax>    = <24689_2 morphoSyntax>
  <Stem synCat>          = <24689_2 envCat>   | allomorph
  <Stem exception>       = <24689_2 fromException>
  <Stem inflectionClass> = <24689_2 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <24689_2 morphoSyntax>
  <Stem morphoSyntax>    = <22008_0 morphoSyntax>
  <Stem synCat>          = <22008_0 envCat>   | allomorph
  <Stem exception>       = <22008_0 fromException>
  <Stem inflectionClass> = <22008_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <22008_0 morphoSyntax>
  <Full stemNameInfo stemName>       = <Stem stemName>
				  | stem name logical constraint
 <Full stemNameInfo> == (
  ([stemName:66683] -> ([morphoSyntax:[ 16944:20772 20800:20801]]  / ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] ))))
				 & ( ([stemName:66696] -> ([morphoSyntax:[ 17137:66715]]  / ([morphoSyntax:[ 20800:20806]] )))
				 & ( ([stemName:66698] -> ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] )))
			& ( ([stemName:NotStemName66683] -> ~([morphoSyntax:[ 16944:20772 20800:20801]]  / ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] ))))
			& ( ([stemName:NotStemName66696] -> ~([morphoSyntax:[ 17137:66715]]  / ([morphoSyntax:[ 20800:20806]] ))))))))
rule {Fully analyzed stem with a final inflectional template 22730}
  Full =  20766_0 (16932_1) (24689_2) Stem 22731_0 16933_1
														 | percolation
  <Full synCat>       = <Stem synCat>
  <Full morphoSyntax> = <Stem morphoSyntax>
  <Full inflected>    = +
  <Full requiresInflection> = -
						  | constraints
  <Stem blocksInflection> = - | prevent a non-final template from immediately being inflected without any intervening derivation or compounding
  <Stem  synCat>       = 16929
  <Stem morphoSyntax>    = <20766_0 morphoSyntax>
  <Stem synCat>          = <20766_0 envCat>   | allomorph
  <Stem exception>       = <20766_0 fromException>
  <Stem inflectionClass> = <20766_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <20766_0 morphoSyntax>
  <Stem morphoSyntax>    = <16932_1 morphoSyntax>
  <Stem synCat>          = <16932_1 envCat>   | allomorph
  <Stem exception>       = <16932_1 fromException>
  <Stem inflectionClass> = <16932_1 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <16932_1 morphoSyntax>
  <Stem morphoSyntax>    = <24689_2 morphoSyntax>
  <Stem synCat>          = <24689_2 envCat>   | allomorph
  <Stem exception>       = <24689_2 fromException>
  <Stem inflectionClass> = <24689_2 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <24689_2 morphoSyntax>
  <Stem morphoSyntax>    = <22731_0 morphoSyntax>
  <Stem synCat>          = <22731_0 envCat>   | allomorph
  <Stem exception>       = <22731_0 fromException>
  <Stem inflectionClass> = <22731_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <22731_0 morphoSyntax>
  <Stem morphoSyntax>    = <16933_1 morphoSyntax>
  <Stem synCat>          = <16933_1 envCat>   | allomorph
  <Stem exception>       = <16933_1 fromException>
  <Stem inflectionClass> = <16933_1 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <16933_1 morphoSyntax>
  <Full stemNameInfo stemName>       = <Stem stemName>
				  | stem name logical constraint
 <Full stemNameInfo> == (
  ([stemName:66683] -> ([morphoSyntax:[ 16944:20772 20800:20801]]  / ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] ))))
				 & ( ([stemName:66696] -> ([morphoSyntax:[ 17137:66715]]  / ([morphoSyntax:[ 20800:20806]] )))
				 & ( ([stemName:66698] -> ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] )))
			& ( ([stemName:NotStemName66683] -> ~([morphoSyntax:[ 16944:20772 20800:20801]]  / ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] ))))
			& ( ([stemName:NotStemName66696] -> ~([morphoSyntax:[ 17137:66715]]  / ([morphoSyntax:[ 20800:20806]] ))))))))
rule {Fully analyzed stem with a final inflectional template 17170}
  Full =  17164_0 (24689_1) Stem (17165_0)
														 | percolation
  <Full synCat>       = <Stem synCat>
  <Full morphoSyntax> = <Stem morphoSyntax>
  <Full inflected>    = +
  <Full requiresInflection> = -
						  | constraints
  <Stem blocksInflection> = - | prevent a non-final template from immediately being inflected without any intervening derivation or compounding
  <Stem  synCat>       = 16929
  <Stem morphoSyntax>    = <17164_0 morphoSyntax>
  <Stem synCat>          = <17164_0 envCat>   | allomorph
  <Stem exception>       = <17164_0 fromException>
  <Stem inflectionClass> = <17164_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17164_0 morphoSyntax>
  <Stem morphoSyntax>    = <24689_1 morphoSyntax>
  <Stem synCat>          = <24689_1 envCat>   | allomorph
  <Stem exception>       = <24689_1 fromException>
  <Stem inflectionClass> = <24689_1 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <24689_1 morphoSyntax>
  <Stem morphoSyntax>    = <17165_0 morphoSyntax>
  <Stem synCat>          = <17165_0 envCat>   | allomorph
  <Stem exception>       = <17165_0 fromException>
  <Stem inflectionClass> = <17165_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17165_0 morphoSyntax>
  <Full stemNameInfo stemName>       = <Stem stemName>
				  | stem name logical constraint
 <Full stemNameInfo> == (
  ([stemName:66683] -> ([morphoSyntax:[ 16944:20772 20800:20801]]  / ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] ))))
				 & ( ([stemName:66696] -> ([morphoSyntax:[ 17137:66715]]  / ([morphoSyntax:[ 20800:20806]] )))
				 & ( ([stemName:66698] -> ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] )))
			& ( ([stemName:NotStemName66683] -> ~([morphoSyntax:[ 16944:20772 20800:20801]]  / ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] ))))
			& ( ([stemName:NotStemName66696] -> ~([morphoSyntax:[ 17137:66715]]  / ([morphoSyntax:[ 20800:20806]] ))))))))
rule {Fully analyzed stem with a final inflectional template 17169}
  Full =  (17122_0) (24689_1) Stem 17142_0
														 | percolation
  <Full synCat>       = <Stem synCat>
  <Full morphoSyntax> = <Stem morphoSyntax>
  <Full inflected>    = +
  <Full requiresInflection> = -
						  | constraints
  <Stem blocksInflection> = - | prevent a non-final template from immediately being inflected without any intervening derivation or compounding
  <Stem  synCat>       = 16929
  <Stem morphoSyntax>    = <17122_0 morphoSyntax>
  <Stem synCat>          = <17122_0 envCat>   | allomorph
  <Stem exception>       = <17122_0 fromException>
  <Stem inflectionClass> = <17122_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17122_0 morphoSyntax>
  <Stem morphoSyntax>    = <24689_1 morphoSyntax>
  <Stem synCat>          = <24689_1 envCat>   | allomorph
  <Stem exception>       = <24689_1 fromException>
  <Stem inflectionClass> = <24689_1 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <24689_1 morphoSyntax>
  <Stem morphoSyntax>    = <17142_0 morphoSyntax>
  <Stem synCat>          = <17142_0 envCat>   | allomorph
  <Stem exception>       = <17142_0 fromException>
  <Stem inflectionClass> = <17142_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17142_0 morphoSyntax>
  <Full stemNameInfo stemName>       = <Stem stemName>
				  | stem name logical constraint
 <Full stemNameInfo> == (
  ([stemName:66683] -> ([morphoSyntax:[ 16944:20772 20800:20801]]  / ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] ))))
				 & ( ([stemName:66696] -> ([morphoSyntax:[ 17137:66715]]  / ([morphoSyntax:[ 20800:20806]] )))
				 & ( ([stemName:66698] -> ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] )))
			& ( ([stemName:NotStemName66683] -> ~([morphoSyntax:[ 16944:20772 20800:20801]]  / ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] ))))
			& ( ([stemName:NotStemName66696] -> ~([morphoSyntax:[ 17137:66715]]  / ([morphoSyntax:[ 20800:20806]] ))))))))
rule {Fully analyzed stem with a final inflectional template 17006}
  Full =  (16932_0) 17007_1 (24689_2) (17053_3) Stem 16933_0
														 | percolation
  <Full synCat>       = <Stem synCat>
  <Full morphoSyntax> = <Stem morphoSyntax>
  <Full inflected>    = +
  <Full requiresInflection> = -
						  | constraints
  <Stem blocksInflection> = - | prevent a non-final template from immediately being inflected without any intervening derivation or compounding
  <Stem  synCat>       = 16930
  <Stem morphoSyntax>    = <16932_0 morphoSyntax>
  <Stem synCat>          = <16932_0 envCat>   | allomorph
  <Stem exception>       = <16932_0 fromException>
  <Stem inflectionClass> = <16932_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <16932_0 morphoSyntax>
  <Stem morphoSyntax>    = <17007_1 morphoSyntax>
  <Stem synCat>          = <17007_1 envCat>   | allomorph
  <Stem exception>       = <17007_1 fromException>
  <Stem inflectionClass> = <17007_1 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17007_1 morphoSyntax>
  <Stem morphoSyntax>    = <24689_2 morphoSyntax>
  <Stem synCat>          = <24689_2 envCat>   | allomorph
  <Stem exception>       = <24689_2 fromException>
  <Stem inflectionClass> = <24689_2 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <24689_2 morphoSyntax>
  <Stem morphoSyntax>    = <17053_3 morphoSyntax>
  <Stem synCat>          = <17053_3 envCat>   | allomorph
  <Stem exception>       = <17053_3 fromException>
  <Stem inflectionClass> = <17053_3 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17053_3 morphoSyntax>
  <Stem morphoSyntax>    = <16933_0 morphoSyntax>
  <Stem synCat>          = <16933_0 envCat>   | allomorph
  <Stem exception>       = <16933_0 fromException>
  <Stem inflectionClass> = <16933_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <16933_0 morphoSyntax>
  <Full stemNameInfo stemName>       = <Stem stemName>
				  | stem name logical constraint
 <Full stemNameInfo> == (
  ([stemName:66683] -> ([morphoSyntax:[ 16944:20772 20800:20801]]  / ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] ))))
				 & ( ([stemName:66696] -> ([morphoSyntax:[ 17137:66715]]  / ([morphoSyntax:[ 20800:20806]] )))
				 & ( ([stemName:66698] -> ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] )))
			& ( ([stemName:NotStemName66683] -> ~([morphoSyntax:[ 16944:20772 20800:20801]]  / ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] ))))
			& ( ([stemName:NotStemName66696] -> ~([morphoSyntax:[ 17137:66715]]  / ([morphoSyntax:[ 20800:20806]] ))))))))
rule {Fully analyzed stem with a final inflectional template 17060}
  Full =  17061_0 (24689_1) (17053_2) Stem 16933_0
														 | percolation
  <Full synCat>       = <Stem synCat>
  <Full morphoSyntax> = <Stem morphoSyntax>
  <Full inflected>    = +
  <Full requiresInflection> = -
						  | constraints
  <Stem blocksInflection> = - | prevent a non-final template from immediately being inflected without any intervening derivation or compounding
  <Stem  synCat>       = 16930
  <Stem morphoSyntax>    = <17061_0 morphoSyntax>
  <Stem synCat>          = <17061_0 envCat>   | allomorph
  <Stem exception>       = <17061_0 fromException>
  <Stem inflectionClass> = <17061_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17061_0 morphoSyntax>
  <Stem morphoSyntax>    = <24689_1 morphoSyntax>
  <Stem synCat>          = <24689_1 envCat>   | allomorph
  <Stem exception>       = <24689_1 fromException>
  <Stem inflectionClass> = <24689_1 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <24689_1 morphoSyntax>
  <Stem morphoSyntax>    = <17053_2 morphoSyntax>
  <Stem synCat>          = <17053_2 envCat>   | allomorph
  <Stem exception>       = <17053_2 fromException>
  <Stem inflectionClass> = <17053_2 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17053_2 morphoSyntax>
  <Stem morphoSyntax>    = <16933_0 morphoSyntax>
  <Stem synCat>          = <16933_0 envCat>   | allomorph
  <Stem exception>       = <16933_0 fromException>
  <Stem inflectionClass> = <16933_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <16933_0 morphoSyntax>
  <Full stemNameInfo stemName>       = <Stem stemName>
				  | stem name logical constraint
 <Full stemNameInfo> == (
  ([stemName:66683] -> ([morphoSyntax:[ 16944:20772 20800:20801]]  / ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] ))))
				 & ( ([stemName:66696] -> ([morphoSyntax:[ 17137:66715]]  / ([morphoSyntax:[ 20800:20806]] )))
				 & ( ([stemName:66698] -> ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] )))
			& ( ([stemName:NotStemName66683] -> ~([morphoSyntax:[ 16944:20772 20800:20801]]  / ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] ))))
			& ( ([stemName:NotStemName66696] -> ~([morphoSyntax:[ 17137:66715]]  / ([morphoSyntax:[ 20800:20806]] ))))))))
rule {Fully analyzed stem with a final inflectional template 22742}
  Full =  (16932_0) 17007_1 (24689_2) (17053_3) Stem 22720_0 22008_1
														 | percolation
  <Full synCat>       = <Stem synCat>
  <Full morphoSyntax> = <Stem morphoSyntax>
  <Full inflected>    = +
  <Full requiresInflection> = -
						  | constraints
  <Stem blocksInflection> = - | prevent a non-final template from immediately being inflected without any intervening derivation or compounding
  <Stem  synCat>       = 16930
  <Stem morphoSyntax>    = <16932_0 morphoSyntax>
  <Stem synCat>          = <16932_0 envCat>   | allomorph
  <Stem exception>       = <16932_0 fromException>
  <Stem inflectionClass> = <16932_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <16932_0 morphoSyntax>
  <Stem morphoSyntax>    = <17007_1 morphoSyntax>
  <Stem synCat>          = <17007_1 envCat>   | allomorph
  <Stem exception>       = <17007_1 fromException>
  <Stem inflectionClass> = <17007_1 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17007_1 morphoSyntax>
  <Stem morphoSyntax>    = <24689_2 morphoSyntax>
  <Stem synCat>          = <24689_2 envCat>   | allomorph
  <Stem exception>       = <24689_2 fromException>
  <Stem inflectionClass> = <24689_2 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <24689_2 morphoSyntax>
  <Stem morphoSyntax>    = <17053_3 morphoSyntax>
  <Stem synCat>          = <17053_3 envCat>   | allomorph
  <Stem exception>       = <17053_3 fromException>
  <Stem inflectionClass> = <17053_3 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17053_3 morphoSyntax>
  <Stem morphoSyntax>    = <22720_0 morphoSyntax>
  <Stem synCat>          = <22720_0 envCat>   | allomorph
  <Stem exception>       = <22720_0 fromException>
  <Stem inflectionClass> = <22720_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <22720_0 morphoSyntax>
  <Stem morphoSyntax>    = <22008_1 morphoSyntax>
  <Stem synCat>          = <22008_1 envCat>   | allomorph
  <Stem exception>       = <22008_1 fromException>
  <Stem inflectionClass> = <22008_1 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <22008_1 morphoSyntax>
  <Full stemNameInfo stemName>       = <Stem stemName>
				  | stem name logical constraint
 <Full stemNameInfo> == (
  ([stemName:66683] -> ([morphoSyntax:[ 16944:20772 20800:20801]]  / ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] ))))
				 & ( ([stemName:66696] -> ([morphoSyntax:[ 17137:66715]]  / ([morphoSyntax:[ 20800:20806]] )))
				 & ( ([stemName:66698] -> ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] )))
			& ( ([stemName:NotStemName66683] -> ~([morphoSyntax:[ 16944:20772 20800:20801]]  / ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] ))))
			& ( ([stemName:NotStemName66696] -> ~([morphoSyntax:[ 17137:66715]]  / ([morphoSyntax:[ 20800:20806]] ))))))))
rule {Fully analyzed stem with a final inflectional template 22743}
  Full =  17061_0 (24689_1) (17053_2) Stem 22720_0 22008_1
														 | percolation
  <Full synCat>       = <Stem synCat>
  <Full morphoSyntax> = <Stem morphoSyntax>
  <Full inflected>    = +
  <Full requiresInflection> = -
						  | constraints
  <Stem blocksInflection> = - | prevent a non-final template from immediately being inflected without any intervening derivation or compounding
  <Stem  synCat>       = 16930
  <Stem morphoSyntax>    = <17061_0 morphoSyntax>
  <Stem synCat>          = <17061_0 envCat>   | allomorph
  <Stem exception>       = <17061_0 fromException>
  <Stem inflectionClass> = <17061_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17061_0 morphoSyntax>
  <Stem morphoSyntax>    = <24689_1 morphoSyntax>
  <Stem synCat>          = <24689_1 envCat>   | allomorph
  <Stem exception>       = <24689_1 fromException>
  <Stem inflectionClass> = <24689_1 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <24689_1 morphoSyntax>
  <Stem morphoSyntax>    = <17053_2 morphoSyntax>
  <Stem synCat>          = <17053_2 envCat>   | allomorph
  <Stem exception>       = <17053_2 fromException>
  <Stem inflectionClass> = <17053_2 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17053_2 morphoSyntax>
  <Stem morphoSyntax>    = <22720_0 morphoSyntax>
  <Stem synCat>          = <22720_0 envCat>   | allomorph
  <Stem exception>       = <22720_0 fromException>
  <Stem inflectionClass> = <22720_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <22720_0 morphoSyntax>
  <Stem morphoSyntax>    = <22008_1 morphoSyntax>
  <Stem synCat>          = <22008_1 envCat>   | allomorph
  <Stem exception>       = <22008_1 fromException>
  <Stem inflectionClass> = <22008_1 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <22008_1 morphoSyntax>
  <Full stemNameInfo stemName>       = <Stem stemName>
				  | stem name logical constraint
 <Full stemNameInfo> == (
  ([stemName:66683] -> ([morphoSyntax:[ 16944:20772 20800:20801]]  / ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] ))))
				 & ( ([stemName:66696] -> ([morphoSyntax:[ 17137:66715]]  / ([morphoSyntax:[ 20800:20806]] )))
				 & ( ([stemName:66698] -> ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] )))
			& ( ([stemName:NotStemName66683] -> ~([morphoSyntax:[ 16944:20772 20800:20801]]  / ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] ))))
			& ( ([stemName:NotStemName66696] -> ~([morphoSyntax:[ 17137:66715]]  / ([morphoSyntax:[ 20800:20806]] ))))))))
rule {Fully analyzed stem with a final inflectional template 20774}
  Full =  20766_0 (16932_1) 17007_2 (24689_3) (17053_4) Stem 22008_0
														 | percolation
  <Full synCat>       = <Stem synCat>
  <Full morphoSyntax> = <Stem morphoSyntax>
  <Full inflected>    = +
  <Full requiresInflection> = -
						  | constraints
  <Stem blocksInflection> = - | prevent a non-final template from immediately being inflected without any intervening derivation or compounding
  <Stem  synCat>       = 16930
  <Stem morphoSyntax>    = <20766_0 morphoSyntax>
  <Stem synCat>          = <20766_0 envCat>   | allomorph
  <Stem exception>       = <20766_0 fromException>
  <Stem inflectionClass> = <20766_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <20766_0 morphoSyntax>
  <Stem morphoSyntax>    = <16932_1 morphoSyntax>
  <Stem synCat>          = <16932_1 envCat>   | allomorph
  <Stem exception>       = <16932_1 fromException>
  <Stem inflectionClass> = <16932_1 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <16932_1 morphoSyntax>
  <Stem morphoSyntax>    = <17007_2 morphoSyntax>
  <Stem synCat>          = <17007_2 envCat>   | allomorph
  <Stem exception>       = <17007_2 fromException>
  <Stem inflectionClass> = <17007_2 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17007_2 morphoSyntax>
  <Stem morphoSyntax>    = <24689_3 morphoSyntax>
  <Stem synCat>          = <24689_3 envCat>   | allomorph
  <Stem exception>       = <24689_3 fromException>
  <Stem inflectionClass> = <24689_3 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <24689_3 morphoSyntax>
  <Stem morphoSyntax>    = <17053_4 morphoSyntax>
  <Stem synCat>          = <17053_4 envCat>   | allomorph
  <Stem exception>       = <17053_4 fromException>
  <Stem inflectionClass> = <17053_4 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17053_4 morphoSyntax>
  <Stem morphoSyntax>    = <22008_0 morphoSyntax>
  <Stem synCat>          = <22008_0 envCat>   | allomorph
  <Stem exception>       = <22008_0 fromException>
  <Stem inflectionClass> = <22008_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <22008_0 morphoSyntax>
  <Full stemNameInfo stemName>       = <Stem stemName>
				  | stem name logical constraint
 <Full stemNameInfo> == (
  ([stemName:66683] -> ([morphoSyntax:[ 16944:20772 20800:20801]]  / ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] ))))
				 & ( ([stemName:66696] -> ([morphoSyntax:[ 17137:66715]]  / ([morphoSyntax:[ 20800:20806]] )))
				 & ( ([stemName:66698] -> ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] )))
			& ( ([stemName:NotStemName66683] -> ~([morphoSyntax:[ 16944:20772 20800:20801]]  / ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] ))))
			& ( ([stemName:NotStemName66696] -> ~([morphoSyntax:[ 17137:66715]]  / ([morphoSyntax:[ 20800:20806]] ))))))))
rule {Fully analyzed stem with a final inflectional template 20775}
  Full =  20766_0 17061_1 (24689_2) (17053_3) Stem 22008_0
														 | percolation
  <Full synCat>       = <Stem synCat>
  <Full morphoSyntax> = <Stem morphoSyntax>
  <Full inflected>    = +
  <Full requiresInflection> = -
						  | constraints
  <Stem blocksInflection> = - | prevent a non-final template from immediately being inflected without any intervening derivation or compounding
  <Stem  synCat>       = 16930
  <Stem morphoSyntax>    = <20766_0 morphoSyntax>
  <Stem synCat>          = <20766_0 envCat>   | allomorph
  <Stem exception>       = <20766_0 fromException>
  <Stem inflectionClass> = <20766_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <20766_0 morphoSyntax>
  <Stem morphoSyntax>    = <17061_1 morphoSyntax>
  <Stem synCat>          = <17061_1 envCat>   | allomorph
  <Stem exception>       = <17061_1 fromException>
  <Stem inflectionClass> = <17061_1 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17061_1 morphoSyntax>
  <Stem morphoSyntax>    = <24689_2 morphoSyntax>
  <Stem synCat>          = <24689_2 envCat>   | allomorph
  <Stem exception>       = <24689_2 fromException>
  <Stem inflectionClass> = <24689_2 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <24689_2 morphoSyntax>
  <Stem morphoSyntax>    = <17053_3 morphoSyntax>
  <Stem synCat>          = <17053_3 envCat>   | allomorph
  <Stem exception>       = <17053_3 fromException>
  <Stem inflectionClass> = <17053_3 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17053_3 morphoSyntax>
  <Stem morphoSyntax>    = <22008_0 morphoSyntax>
  <Stem synCat>          = <22008_0 envCat>   | allomorph
  <Stem exception>       = <22008_0 fromException>
  <Stem inflectionClass> = <22008_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <22008_0 morphoSyntax>
  <Full stemNameInfo stemName>       = <Stem stemName>
				  | stem name logical constraint
 <Full stemNameInfo> == (
  ([stemName:66683] -> ([morphoSyntax:[ 16944:20772 20800:20801]]  / ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] ))))
				 & ( ([stemName:66696] -> ([morphoSyntax:[ 17137:66715]]  / ([morphoSyntax:[ 20800:20806]] )))
				 & ( ([stemName:66698] -> ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] )))
			& ( ([stemName:NotStemName66683] -> ~([morphoSyntax:[ 16944:20772 20800:20801]]  / ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] ))))
			& ( ([stemName:NotStemName66696] -> ~([morphoSyntax:[ 17137:66715]]  / ([morphoSyntax:[ 20800:20806]] ))))))))
rule {Fully analyzed stem with a final inflectional template 22744}
  Full =  20766_0 (16932_1) 17007_2 (24689_3) (17053_4) Stem 22731_0 16933_1
														 | percolation
  <Full synCat>       = <Stem synCat>
  <Full morphoSyntax> = <Stem morphoSyntax>
  <Full inflected>    = +
  <Full requiresInflection> = -
						  | constraints
  <Stem blocksInflection> = - | prevent a non-final template from immediately being inflected without any intervening derivation or compounding
  <Stem  synCat>       = 16930
  <Stem morphoSyntax>    = <20766_0 morphoSyntax>
  <Stem synCat>          = <20766_0 envCat>   | allomorph
  <Stem exception>       = <20766_0 fromException>
  <Stem inflectionClass> = <20766_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <20766_0 morphoSyntax>
  <Stem morphoSyntax>    = <16932_1 morphoSyntax>
  <Stem synCat>          = <16932_1 envCat>   | allomorph
  <Stem exception>       = <16932_1 fromException>
  <Stem inflectionClass> = <16932_1 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <16932_1 morphoSyntax>
  <Stem morphoSyntax>    = <17007_2 morphoSyntax>
  <Stem synCat>          = <17007_2 envCat>   | allomorph
  <Stem exception>       = <17007_2 fromException>
  <Stem inflectionClass> = <17007_2 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17007_2 morphoSyntax>
  <Stem morphoSyntax>    = <24689_3 morphoSyntax>
  <Stem synCat>          = <24689_3 envCat>   | allomorph
  <Stem exception>       = <24689_3 fromException>
  <Stem inflectionClass> = <24689_3 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <24689_3 morphoSyntax>
  <Stem morphoSyntax>    = <17053_4 morphoSyntax>
  <Stem synCat>          = <17053_4 envCat>   | allomorph
  <Stem exception>       = <17053_4 fromException>
  <Stem inflectionClass> = <17053_4 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17053_4 morphoSyntax>
  <Stem morphoSyntax>    = <22731_0 morphoSyntax>
  <Stem synCat>          = <22731_0 envCat>   | allomorph
  <Stem exception>       = <22731_0 fromException>
  <Stem inflectionClass> = <22731_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <22731_0 morphoSyntax>
  <Stem morphoSyntax>    = <16933_1 morphoSyntax>
  <Stem synCat>          = <16933_1 envCat>   | allomorph
  <Stem exception>       = <16933_1 fromException>
  <Stem inflectionClass> = <16933_1 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <16933_1 morphoSyntax>
  <Full stemNameInfo stemName>       = <Stem stemName>
				  | stem name logical constraint
 <Full stemNameInfo> == (
  ([stemName:66683] -> ([morphoSyntax:[ 16944:20772 20800:20801]]  / ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] ))))
				 & ( ([stemName:66696] -> ([morphoSyntax:[ 17137:66715]]  / ([morphoSyntax:[ 20800:20806]] )))
				 & ( ([stemName:66698] -> ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] )))
			& ( ([stemName:NotStemName66683] -> ~([morphoSyntax:[ 16944:20772 20800:20801]]  / ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] ))))
			& ( ([stemName:NotStemName66696] -> ~([morphoSyntax:[ 17137:66715]]  / ([morphoSyntax:[ 20800:20806]] ))))))))
rule {Fully analyzed stem with a final inflectional template 22745}
  Full =  20766_0 17061_1 (24689_2) (17053_3) Stem 22731_0 16933_1
														 | percolation
  <Full synCat>       = <Stem synCat>
  <Full morphoSyntax> = <Stem morphoSyntax>
  <Full inflected>    = +
  <Full requiresInflection> = -
						  | constraints
  <Stem blocksInflection> = - | prevent a non-final template from immediately being inflected without any intervening derivation or compounding
  <Stem  synCat>       = 16930
  <Stem morphoSyntax>    = <20766_0 morphoSyntax>
  <Stem synCat>          = <20766_0 envCat>   | allomorph
  <Stem exception>       = <20766_0 fromException>
  <Stem inflectionClass> = <20766_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <20766_0 morphoSyntax>
  <Stem morphoSyntax>    = <17061_1 morphoSyntax>
  <Stem synCat>          = <17061_1 envCat>   | allomorph
  <Stem exception>       = <17061_1 fromException>
  <Stem inflectionClass> = <17061_1 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17061_1 morphoSyntax>
  <Stem morphoSyntax>    = <24689_2 morphoSyntax>
  <Stem synCat>          = <24689_2 envCat>   | allomorph
  <Stem exception>       = <24689_2 fromException>
  <Stem inflectionClass> = <24689_2 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <24689_2 morphoSyntax>
  <Stem morphoSyntax>    = <17053_3 morphoSyntax>
  <Stem synCat>          = <17053_3 envCat>   | allomorph
  <Stem exception>       = <17053_3 fromException>
  <Stem inflectionClass> = <17053_3 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17053_3 morphoSyntax>
  <Stem morphoSyntax>    = <22731_0 morphoSyntax>
  <Stem synCat>          = <22731_0 envCat>   | allomorph
  <Stem exception>       = <22731_0 fromException>
  <Stem inflectionClass> = <22731_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <22731_0 morphoSyntax>
  <Stem morphoSyntax>    = <16933_1 morphoSyntax>
  <Stem synCat>          = <16933_1 envCat>   | allomorph
  <Stem exception>       = <16933_1 fromException>
  <Stem inflectionClass> = <16933_1 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <16933_1 morphoSyntax>
  <Full stemNameInfo stemName>       = <Stem stemName>
				  | stem name logical constraint
 <Full stemNameInfo> == (
  ([stemName:66683] -> ([morphoSyntax:[ 16944:20772 20800:20801]]  / ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] ))))
				 & ( ([stemName:66696] -> ([morphoSyntax:[ 17137:66715]]  / ([morphoSyntax:[ 20800:20806]] )))
				 & ( ([stemName:66698] -> ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] )))
			& ( ([stemName:NotStemName66683] -> ~([morphoSyntax:[ 16944:20772 20800:20801]]  / ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] ))))
			& ( ([stemName:NotStemName66696] -> ~([morphoSyntax:[ 17137:66715]]  / ([morphoSyntax:[ 20800:20806]] ))))))))
rule {Fully analyzed stem with a final inflectional template 17163}
  Full =  17164_0 17007_1 (24689_2) (17053_3) Stem (17165_0)
														 | percolation
  <Full synCat>       = <Stem synCat>
  <Full morphoSyntax> = <Stem morphoSyntax>
  <Full inflected>    = +
  <Full requiresInflection> = -
						  | constraints
  <Stem blocksInflection> = - | prevent a non-final template from immediately being inflected without any intervening derivation or compounding
  <Stem  synCat>       = 16930
  <Stem morphoSyntax>    = <17164_0 morphoSyntax>
  <Stem synCat>          = <17164_0 envCat>   | allomorph
  <Stem exception>       = <17164_0 fromException>
  <Stem inflectionClass> = <17164_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17164_0 morphoSyntax>
  <Stem morphoSyntax>    = <17007_1 morphoSyntax>
  <Stem synCat>          = <17007_1 envCat>   | allomorph
  <Stem exception>       = <17007_1 fromException>
  <Stem inflectionClass> = <17007_1 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17007_1 morphoSyntax>
  <Stem morphoSyntax>    = <24689_2 morphoSyntax>
  <Stem synCat>          = <24689_2 envCat>   | allomorph
  <Stem exception>       = <24689_2 fromException>
  <Stem inflectionClass> = <24689_2 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <24689_2 morphoSyntax>
  <Stem morphoSyntax>    = <17053_3 morphoSyntax>
  <Stem synCat>          = <17053_3 envCat>   | allomorph
  <Stem exception>       = <17053_3 fromException>
  <Stem inflectionClass> = <17053_3 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17053_3 morphoSyntax>
  <Stem morphoSyntax>    = <17165_0 morphoSyntax>
  <Stem synCat>          = <17165_0 envCat>   | allomorph
  <Stem exception>       = <17165_0 fromException>
  <Stem inflectionClass> = <17165_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17165_0 morphoSyntax>
  <Full stemNameInfo stemName>       = <Stem stemName>
				  | stem name logical constraint
 <Full stemNameInfo> == (
  ([stemName:66683] -> ([morphoSyntax:[ 16944:20772 20800:20801]]  / ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] ))))
				 & ( ([stemName:66696] -> ([morphoSyntax:[ 17137:66715]]  / ([morphoSyntax:[ 20800:20806]] )))
				 & ( ([stemName:66698] -> ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] )))
			& ( ([stemName:NotStemName66683] -> ~([morphoSyntax:[ 16944:20772 20800:20801]]  / ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] ))))
			& ( ([stemName:NotStemName66696] -> ~([morphoSyntax:[ 17137:66715]]  / ([morphoSyntax:[ 20800:20806]] ))))))))
rule {Fully analyzed stem with a final inflectional template 17121}
  Full =  (17122_0) 17007_1 (24689_2) (17053_3) Stem 17142_0
														 | percolation
  <Full synCat>       = <Stem synCat>
  <Full morphoSyntax> = <Stem morphoSyntax>
  <Full inflected>    = +
  <Full requiresInflection> = -
						  | constraints
  <Stem blocksInflection> = - | prevent a non-final template from immediately being inflected without any intervening derivation or compounding
  <Stem  synCat>       = 16930
  <Stem morphoSyntax>    = <17122_0 morphoSyntax>
  <Stem synCat>          = <17122_0 envCat>   | allomorph
  <Stem exception>       = <17122_0 fromException>
  <Stem inflectionClass> = <17122_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17122_0 morphoSyntax>
  <Stem morphoSyntax>    = <17007_1 morphoSyntax>
  <Stem synCat>          = <17007_1 envCat>   | allomorph
  <Stem exception>       = <17007_1 fromException>
  <Stem inflectionClass> = <17007_1 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17007_1 morphoSyntax>
  <Stem morphoSyntax>    = <24689_2 morphoSyntax>
  <Stem synCat>          = <24689_2 envCat>   | allomorph
  <Stem exception>       = <24689_2 fromException>
  <Stem inflectionClass> = <24689_2 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <24689_2 morphoSyntax>
  <Stem morphoSyntax>    = <17053_3 morphoSyntax>
  <Stem synCat>          = <17053_3 envCat>   | allomorph
  <Stem exception>       = <17053_3 fromException>
  <Stem inflectionClass> = <17053_3 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17053_3 morphoSyntax>
  <Stem morphoSyntax>    = <17142_0 morphoSyntax>
  <Stem synCat>          = <17142_0 envCat>   | allomorph
  <Stem exception>       = <17142_0 fromException>
  <Stem inflectionClass> = <17142_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17142_0 morphoSyntax>
  <Full stemNameInfo stemName>       = <Stem stemName>
				  | stem name logical constraint
 <Full stemNameInfo> == (
  ([stemName:66683] -> ([morphoSyntax:[ 16944:20772 20800:20801]]  / ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] ))))
				 & ( ([stemName:66696] -> ([morphoSyntax:[ 17137:66715]]  / ([morphoSyntax:[ 20800:20806]] )))
				 & ( ([stemName:66698] -> ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] )))
			& ( ([stemName:NotStemName66683] -> ~([morphoSyntax:[ 16944:20772 20800:20801]]  / ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] ))))
			& ( ([stemName:NotStemName66696] -> ~([morphoSyntax:[ 17137:66715]]  / ([morphoSyntax:[ 20800:20806]] ))))))))
rule {Fully analyzed stem with a final inflectional template 58164}
  Full =  20766_0 (16932_1) 17007_2 (24689_3) (17053_4) Stem 58165_0 16933_1
														 | percolation
  <Full synCat>       = <Stem synCat>
  <Full morphoSyntax> = <Stem morphoSyntax>
  <Full inflected>    = +
  <Full requiresInflection> = -
						  | constraints
  <Stem blocksInflection> = - | prevent a non-final template from immediately being inflected without any intervening derivation or compounding
  <Stem  synCat>       = 16930
  <Stem morphoSyntax>    = <20766_0 morphoSyntax>
  <Stem synCat>          = <20766_0 envCat>   | allomorph
  <Stem exception>       = <20766_0 fromException>
  <Stem inflectionClass> = <20766_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <20766_0 morphoSyntax>
  <Stem morphoSyntax>    = <16932_1 morphoSyntax>
  <Stem synCat>          = <16932_1 envCat>   | allomorph
  <Stem exception>       = <16932_1 fromException>
  <Stem inflectionClass> = <16932_1 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <16932_1 morphoSyntax>
  <Stem morphoSyntax>    = <17007_2 morphoSyntax>
  <Stem synCat>          = <17007_2 envCat>   | allomorph
  <Stem exception>       = <17007_2 fromException>
  <Stem inflectionClass> = <17007_2 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17007_2 morphoSyntax>
  <Stem morphoSyntax>    = <24689_3 morphoSyntax>
  <Stem synCat>          = <24689_3 envCat>   | allomorph
  <Stem exception>       = <24689_3 fromException>
  <Stem inflectionClass> = <24689_3 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <24689_3 morphoSyntax>
  <Stem morphoSyntax>    = <17053_4 morphoSyntax>
  <Stem synCat>          = <17053_4 envCat>   | allomorph
  <Stem exception>       = <17053_4 fromException>
  <Stem inflectionClass> = <17053_4 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17053_4 morphoSyntax>
  <Stem morphoSyntax>    = <58165_0 morphoSyntax>
  <Stem synCat>          = <58165_0 envCat>   | allomorph
  <Stem exception>       = <58165_0 fromException>
  <Stem inflectionClass> = <58165_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <58165_0 morphoSyntax>
  <Stem morphoSyntax>    = <16933_1 morphoSyntax>
  <Stem synCat>          = <16933_1 envCat>   | allomorph
  <Stem exception>       = <16933_1 fromException>
  <Stem inflectionClass> = <16933_1 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <16933_1 morphoSyntax>
  <Full stemNameInfo stemName>       = <Stem stemName>
				  | stem name logical constraint
 <Full stemNameInfo> == (
  ([stemName:66683] -> ([morphoSyntax:[ 16944:20772 20800:20801]]  / ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] ))))
				 & ( ([stemName:66696] -> ([morphoSyntax:[ 17137:66715]]  / ([morphoSyntax:[ 20800:20806]] )))
				 & ( ([stemName:66698] -> ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] )))
			& ( ([stemName:NotStemName66683] -> ~([morphoSyntax:[ 16944:20772 20800:20801]]  / ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] ))))
			& ( ([stemName:NotStemName66696] -> ~([morphoSyntax:[ 17137:66715]]  / ([morphoSyntax:[ 20800:20806]] ))))))))
rule {Fully analyzed stem with a final inflectional template 22935}
  Full =  (16932_0) 17007_1 (24689_2) (17053_3) (22936_4) Stem 16933_0
														 | percolation
  <Full synCat>       = <Stem synCat>
  <Full morphoSyntax> = <Stem morphoSyntax>
  <Full inflected>    = +
  <Full requiresInflection> = -
						  | constraints
  <Stem blocksInflection> = - | prevent a non-final template from immediately being inflected without any intervening derivation or compounding
  <Stem  synCat>       = 22932
  <Stem morphoSyntax>    = <16932_0 morphoSyntax>
  <Stem synCat>          = <16932_0 envCat>   | allomorph
  <Stem exception>       = <16932_0 fromException>
  <Stem inflectionClass> = <16932_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <16932_0 morphoSyntax>
  <Stem morphoSyntax>    = <17007_1 morphoSyntax>
  <Stem synCat>          = <17007_1 envCat>   | allomorph
  <Stem exception>       = <17007_1 fromException>
  <Stem inflectionClass> = <17007_1 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17007_1 morphoSyntax>
  <Stem morphoSyntax>    = <24689_2 morphoSyntax>
  <Stem synCat>          = <24689_2 envCat>   | allomorph
  <Stem exception>       = <24689_2 fromException>
  <Stem inflectionClass> = <24689_2 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <24689_2 morphoSyntax>
  <Stem morphoSyntax>    = <17053_3 morphoSyntax>
  <Stem synCat>          = <17053_3 envCat>   | allomorph
  <Stem exception>       = <17053_3 fromException>
  <Stem inflectionClass> = <17053_3 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17053_3 morphoSyntax>
  <Stem morphoSyntax>    = <22936_4 morphoSyntax>
  <Stem synCat>          = <22936_4 envCat>   | allomorph
  <Stem exception>       = <22936_4 fromException>
  <Stem inflectionClass> = <22936_4 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <22936_4 morphoSyntax>
  <Stem morphoSyntax>    = <16933_0 morphoSyntax>
  <Stem synCat>          = <16933_0 envCat>   | allomorph
  <Stem exception>       = <16933_0 fromException>
  <Stem inflectionClass> = <16933_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <16933_0 morphoSyntax>
  <Full stemNameInfo stemName>       = <Stem stemName>
				  | stem name logical constraint
 <Full stemNameInfo> == (
  ([stemName:66683] -> ([morphoSyntax:[ 16944:20772 20800:20801]]  / ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] ))))
				 & ( ([stemName:66696] -> ([morphoSyntax:[ 17137:66715]]  / ([morphoSyntax:[ 20800:20806]] )))
				 & ( ([stemName:66698] -> ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] )))
			& ( ([stemName:NotStemName66683] -> ~([morphoSyntax:[ 16944:20772 20800:20801]]  / ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] ))))
			& ( ([stemName:NotStemName66696] -> ~([morphoSyntax:[ 17137:66715]]  / ([morphoSyntax:[ 20800:20806]] ))))))))
rule {Fully analyzed stem with a final inflectional template 22953}
  Full =  17061_0 (24689_1) (17053_2) (22936_3) Stem 16933_0
														 | percolation
  <Full synCat>       = <Stem synCat>
  <Full morphoSyntax> = <Stem morphoSyntax>
  <Full inflected>    = +
  <Full requiresInflection> = -
						  | constraints
  <Stem blocksInflection> = - | prevent a non-final template from immediately being inflected without any intervening derivation or compounding
  <Stem  synCat>       = 22932
  <Stem morphoSyntax>    = <17061_0 morphoSyntax>
  <Stem synCat>          = <17061_0 envCat>   | allomorph
  <Stem exception>       = <17061_0 fromException>
  <Stem inflectionClass> = <17061_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17061_0 morphoSyntax>
  <Stem morphoSyntax>    = <24689_1 morphoSyntax>
  <Stem synCat>          = <24689_1 envCat>   | allomorph
  <Stem exception>       = <24689_1 fromException>
  <Stem inflectionClass> = <24689_1 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <24689_1 morphoSyntax>
  <Stem morphoSyntax>    = <17053_2 morphoSyntax>
  <Stem synCat>          = <17053_2 envCat>   | allomorph
  <Stem exception>       = <17053_2 fromException>
  <Stem inflectionClass> = <17053_2 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17053_2 morphoSyntax>
  <Stem morphoSyntax>    = <22936_3 morphoSyntax>
  <Stem synCat>          = <22936_3 envCat>   | allomorph
  <Stem exception>       = <22936_3 fromException>
  <Stem inflectionClass> = <22936_3 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <22936_3 morphoSyntax>
  <Stem morphoSyntax>    = <16933_0 morphoSyntax>
  <Stem synCat>          = <16933_0 envCat>   | allomorph
  <Stem exception>       = <16933_0 fromException>
  <Stem inflectionClass> = <16933_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <16933_0 morphoSyntax>
  <Full stemNameInfo stemName>       = <Stem stemName>
				  | stem name logical constraint
 <Full stemNameInfo> == (
  ([stemName:66683] -> ([morphoSyntax:[ 16944:20772 20800:20801]]  / ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] ))))
				 & ( ([stemName:66696] -> ([morphoSyntax:[ 17137:66715]]  / ([morphoSyntax:[ 20800:20806]] )))
				 & ( ([stemName:66698] -> ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] )))
			& ( ([stemName:NotStemName66683] -> ~([morphoSyntax:[ 16944:20772 20800:20801]]  / ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] ))))
			& ( ([stemName:NotStemName66696] -> ~([morphoSyntax:[ 17137:66715]]  / ([morphoSyntax:[ 20800:20806]] ))))))))
rule {Fully analyzed stem with a final inflectional template 22954}
  Full =  (16932_0) 17007_1 (24689_2) (17053_3) (22936_4) Stem 22720_0 22008_1
														 | percolation
  <Full synCat>       = <Stem synCat>
  <Full morphoSyntax> = <Stem morphoSyntax>
  <Full inflected>    = +
  <Full requiresInflection> = -
						  | constraints
  <Stem blocksInflection> = - | prevent a non-final template from immediately being inflected without any intervening derivation or compounding
  <Stem  synCat>       = 22932
  <Stem morphoSyntax>    = <16932_0 morphoSyntax>
  <Stem synCat>          = <16932_0 envCat>   | allomorph
  <Stem exception>       = <16932_0 fromException>
  <Stem inflectionClass> = <16932_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <16932_0 morphoSyntax>
  <Stem morphoSyntax>    = <17007_1 morphoSyntax>
  <Stem synCat>          = <17007_1 envCat>   | allomorph
  <Stem exception>       = <17007_1 fromException>
  <Stem inflectionClass> = <17007_1 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17007_1 morphoSyntax>
  <Stem morphoSyntax>    = <24689_2 morphoSyntax>
  <Stem synCat>          = <24689_2 envCat>   | allomorph
  <Stem exception>       = <24689_2 fromException>
  <Stem inflectionClass> = <24689_2 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <24689_2 morphoSyntax>
  <Stem morphoSyntax>    = <17053_3 morphoSyntax>
  <Stem synCat>          = <17053_3 envCat>   | allomorph
  <Stem exception>       = <17053_3 fromException>
  <Stem inflectionClass> = <17053_3 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17053_3 morphoSyntax>
  <Stem morphoSyntax>    = <22936_4 morphoSyntax>
  <Stem synCat>          = <22936_4 envCat>   | allomorph
  <Stem exception>       = <22936_4 fromException>
  <Stem inflectionClass> = <22936_4 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <22936_4 morphoSyntax>
  <Stem morphoSyntax>    = <22720_0 morphoSyntax>
  <Stem synCat>          = <22720_0 envCat>   | allomorph
  <Stem exception>       = <22720_0 fromException>
  <Stem inflectionClass> = <22720_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <22720_0 morphoSyntax>
  <Stem morphoSyntax>    = <22008_1 morphoSyntax>
  <Stem synCat>          = <22008_1 envCat>   | allomorph
  <Stem exception>       = <22008_1 fromException>
  <Stem inflectionClass> = <22008_1 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <22008_1 morphoSyntax>
  <Full stemNameInfo stemName>       = <Stem stemName>
				  | stem name logical constraint
 <Full stemNameInfo> == (
  ([stemName:66683] -> ([morphoSyntax:[ 16944:20772 20800:20801]]  / ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] ))))
				 & ( ([stemName:66696] -> ([morphoSyntax:[ 17137:66715]]  / ([morphoSyntax:[ 20800:20806]] )))
				 & ( ([stemName:66698] -> ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] )))
			& ( ([stemName:NotStemName66683] -> ~([morphoSyntax:[ 16944:20772 20800:20801]]  / ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] ))))
			& ( ([stemName:NotStemName66696] -> ~([morphoSyntax:[ 17137:66715]]  / ([morphoSyntax:[ 20800:20806]] ))))))))
rule {Fully analyzed stem with a final inflectional template 22955}
  Full =  17061_0 (24689_1) (17053_2) (22936_3) Stem 22720_0 22008_1
														 | percolation
  <Full synCat>       = <Stem synCat>
  <Full morphoSyntax> = <Stem morphoSyntax>
  <Full inflected>    = +
  <Full requiresInflection> = -
						  | constraints
  <Stem blocksInflection> = - | prevent a non-final template from immediately being inflected without any intervening derivation or compounding
  <Stem  synCat>       = 22932
  <Stem morphoSyntax>    = <17061_0 morphoSyntax>
  <Stem synCat>          = <17061_0 envCat>   | allomorph
  <Stem exception>       = <17061_0 fromException>
  <Stem inflectionClass> = <17061_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17061_0 morphoSyntax>
  <Stem morphoSyntax>    = <24689_1 morphoSyntax>
  <Stem synCat>          = <24689_1 envCat>   | allomorph
  <Stem exception>       = <24689_1 fromException>
  <Stem inflectionClass> = <24689_1 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <24689_1 morphoSyntax>
  <Stem morphoSyntax>    = <17053_2 morphoSyntax>
  <Stem synCat>          = <17053_2 envCat>   | allomorph
  <Stem exception>       = <17053_2 fromException>
  <Stem inflectionClass> = <17053_2 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17053_2 morphoSyntax>
  <Stem morphoSyntax>    = <22936_3 morphoSyntax>
  <Stem synCat>          = <22936_3 envCat>   | allomorph
  <Stem exception>       = <22936_3 fromException>
  <Stem inflectionClass> = <22936_3 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <22936_3 morphoSyntax>
  <Stem morphoSyntax>    = <22720_0 morphoSyntax>
  <Stem synCat>          = <22720_0 envCat>   | allomorph
  <Stem exception>       = <22720_0 fromException>
  <Stem inflectionClass> = <22720_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <22720_0 morphoSyntax>
  <Stem morphoSyntax>    = <22008_1 morphoSyntax>
  <Stem synCat>          = <22008_1 envCat>   | allomorph
  <Stem exception>       = <22008_1 fromException>
  <Stem inflectionClass> = <22008_1 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <22008_1 morphoSyntax>
  <Full stemNameInfo stemName>       = <Stem stemName>
				  | stem name logical constraint
 <Full stemNameInfo> == (
  ([stemName:66683] -> ([morphoSyntax:[ 16944:20772 20800:20801]]  / ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] ))))
				 & ( ([stemName:66696] -> ([morphoSyntax:[ 17137:66715]]  / ([morphoSyntax:[ 20800:20806]] )))
				 & ( ([stemName:66698] -> ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] )))
			& ( ([stemName:NotStemName66683] -> ~([morphoSyntax:[ 16944:20772 20800:20801]]  / ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] ))))
			& ( ([stemName:NotStemName66696] -> ~([morphoSyntax:[ 17137:66715]]  / ([morphoSyntax:[ 20800:20806]] ))))))))
rule {Fully analyzed stem with a final inflectional template 22956}
  Full =  20766_0 (16932_1) 17007_2 (24689_3) (17053_4) (22936_5) Stem 22008_0
														 | percolation
  <Full synCat>       = <Stem synCat>
  <Full morphoSyntax> = <Stem morphoSyntax>
  <Full inflected>    = +
  <Full requiresInflection> = -
						  | constraints
  <Stem blocksInflection> = - | prevent a non-final template from immediately being inflected without any intervening derivation or compounding
  <Stem  synCat>       = 22932
  <Stem morphoSyntax>    = <20766_0 morphoSyntax>
  <Stem synCat>          = <20766_0 envCat>   | allomorph
  <Stem exception>       = <20766_0 fromException>
  <Stem inflectionClass> = <20766_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <20766_0 morphoSyntax>
  <Stem morphoSyntax>    = <16932_1 morphoSyntax>
  <Stem synCat>          = <16932_1 envCat>   | allomorph
  <Stem exception>       = <16932_1 fromException>
  <Stem inflectionClass> = <16932_1 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <16932_1 morphoSyntax>
  <Stem morphoSyntax>    = <17007_2 morphoSyntax>
  <Stem synCat>          = <17007_2 envCat>   | allomorph
  <Stem exception>       = <17007_2 fromException>
  <Stem inflectionClass> = <17007_2 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17007_2 morphoSyntax>
  <Stem morphoSyntax>    = <24689_3 morphoSyntax>
  <Stem synCat>          = <24689_3 envCat>   | allomorph
  <Stem exception>       = <24689_3 fromException>
  <Stem inflectionClass> = <24689_3 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <24689_3 morphoSyntax>
  <Stem morphoSyntax>    = <17053_4 morphoSyntax>
  <Stem synCat>          = <17053_4 envCat>   | allomorph
  <Stem exception>       = <17053_4 fromException>
  <Stem inflectionClass> = <17053_4 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17053_4 morphoSyntax>
  <Stem morphoSyntax>    = <22936_5 morphoSyntax>
  <Stem synCat>          = <22936_5 envCat>   | allomorph
  <Stem exception>       = <22936_5 fromException>
  <Stem inflectionClass> = <22936_5 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <22936_5 morphoSyntax>
  <Stem morphoSyntax>    = <22008_0 morphoSyntax>
  <Stem synCat>          = <22008_0 envCat>   | allomorph
  <Stem exception>       = <22008_0 fromException>
  <Stem inflectionClass> = <22008_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <22008_0 morphoSyntax>
  <Full stemNameInfo stemName>       = <Stem stemName>
				  | stem name logical constraint
 <Full stemNameInfo> == (
  ([stemName:66683] -> ([morphoSyntax:[ 16944:20772 20800:20801]]  / ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] ))))
				 & ( ([stemName:66696] -> ([morphoSyntax:[ 17137:66715]]  / ([morphoSyntax:[ 20800:20806]] )))
				 & ( ([stemName:66698] -> ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] )))
			& ( ([stemName:NotStemName66683] -> ~([morphoSyntax:[ 16944:20772 20800:20801]]  / ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] ))))
			& ( ([stemName:NotStemName66696] -> ~([morphoSyntax:[ 17137:66715]]  / ([morphoSyntax:[ 20800:20806]] ))))))))
rule {Fully analyzed stem with a final inflectional template 22957}
  Full =  20766_0 17061_1 (24689_2) (17053_3) (22936_4) Stem 22008_0
														 | percolation
  <Full synCat>       = <Stem synCat>
  <Full morphoSyntax> = <Stem morphoSyntax>
  <Full inflected>    = +
  <Full requiresInflection> = -
						  | constraints
  <Stem blocksInflection> = - | prevent a non-final template from immediately being inflected without any intervening derivation or compounding
  <Stem  synCat>       = 22932
  <Stem morphoSyntax>    = <20766_0 morphoSyntax>
  <Stem synCat>          = <20766_0 envCat>   | allomorph
  <Stem exception>       = <20766_0 fromException>
  <Stem inflectionClass> = <20766_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <20766_0 morphoSyntax>
  <Stem morphoSyntax>    = <17061_1 morphoSyntax>
  <Stem synCat>          = <17061_1 envCat>   | allomorph
  <Stem exception>       = <17061_1 fromException>
  <Stem inflectionClass> = <17061_1 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17061_1 morphoSyntax>
  <Stem morphoSyntax>    = <24689_2 morphoSyntax>
  <Stem synCat>          = <24689_2 envCat>   | allomorph
  <Stem exception>       = <24689_2 fromException>
  <Stem inflectionClass> = <24689_2 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <24689_2 morphoSyntax>
  <Stem morphoSyntax>    = <17053_3 morphoSyntax>
  <Stem synCat>          = <17053_3 envCat>   | allomorph
  <Stem exception>       = <17053_3 fromException>
  <Stem inflectionClass> = <17053_3 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17053_3 morphoSyntax>
  <Stem morphoSyntax>    = <22936_4 morphoSyntax>
  <Stem synCat>          = <22936_4 envCat>   | allomorph
  <Stem exception>       = <22936_4 fromException>
  <Stem inflectionClass> = <22936_4 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <22936_4 morphoSyntax>
  <Stem morphoSyntax>    = <22008_0 morphoSyntax>
  <Stem synCat>          = <22008_0 envCat>   | allomorph
  <Stem exception>       = <22008_0 fromException>
  <Stem inflectionClass> = <22008_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <22008_0 morphoSyntax>
  <Full stemNameInfo stemName>       = <Stem stemName>
				  | stem name logical constraint
 <Full stemNameInfo> == (
  ([stemName:66683] -> ([morphoSyntax:[ 16944:20772 20800:20801]]  / ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] ))))
				 & ( ([stemName:66696] -> ([morphoSyntax:[ 17137:66715]]  / ([morphoSyntax:[ 20800:20806]] )))
				 & ( ([stemName:66698] -> ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] )))
			& ( ([stemName:NotStemName66683] -> ~([morphoSyntax:[ 16944:20772 20800:20801]]  / ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] ))))
			& ( ([stemName:NotStemName66696] -> ~([morphoSyntax:[ 17137:66715]]  / ([morphoSyntax:[ 20800:20806]] ))))))))
rule {Fully analyzed stem with a final inflectional template 22958}
  Full =  20766_0 (16932_1) 17007_2 (24689_3) (17053_4) (22936_5) Stem 22731_0 16933_1
														 | percolation
  <Full synCat>       = <Stem synCat>
  <Full morphoSyntax> = <Stem morphoSyntax>
  <Full inflected>    = +
  <Full requiresInflection> = -
						  | constraints
  <Stem blocksInflection> = - | prevent a non-final template from immediately being inflected without any intervening derivation or compounding
  <Stem  synCat>       = 22932
  <Stem morphoSyntax>    = <20766_0 morphoSyntax>
  <Stem synCat>          = <20766_0 envCat>   | allomorph
  <Stem exception>       = <20766_0 fromException>
  <Stem inflectionClass> = <20766_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <20766_0 morphoSyntax>
  <Stem morphoSyntax>    = <16932_1 morphoSyntax>
  <Stem synCat>          = <16932_1 envCat>   | allomorph
  <Stem exception>       = <16932_1 fromException>
  <Stem inflectionClass> = <16932_1 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <16932_1 morphoSyntax>
  <Stem morphoSyntax>    = <17007_2 morphoSyntax>
  <Stem synCat>          = <17007_2 envCat>   | allomorph
  <Stem exception>       = <17007_2 fromException>
  <Stem inflectionClass> = <17007_2 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17007_2 morphoSyntax>
  <Stem morphoSyntax>    = <24689_3 morphoSyntax>
  <Stem synCat>          = <24689_3 envCat>   | allomorph
  <Stem exception>       = <24689_3 fromException>
  <Stem inflectionClass> = <24689_3 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <24689_3 morphoSyntax>
  <Stem morphoSyntax>    = <17053_4 morphoSyntax>
  <Stem synCat>          = <17053_4 envCat>   | allomorph
  <Stem exception>       = <17053_4 fromException>
  <Stem inflectionClass> = <17053_4 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17053_4 morphoSyntax>
  <Stem morphoSyntax>    = <22936_5 morphoSyntax>
  <Stem synCat>          = <22936_5 envCat>   | allomorph
  <Stem exception>       = <22936_5 fromException>
  <Stem inflectionClass> = <22936_5 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <22936_5 morphoSyntax>
  <Stem morphoSyntax>    = <22731_0 morphoSyntax>
  <Stem synCat>          = <22731_0 envCat>   | allomorph
  <Stem exception>       = <22731_0 fromException>
  <Stem inflectionClass> = <22731_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <22731_0 morphoSyntax>
  <Stem morphoSyntax>    = <16933_1 morphoSyntax>
  <Stem synCat>          = <16933_1 envCat>   | allomorph
  <Stem exception>       = <16933_1 fromException>
  <Stem inflectionClass> = <16933_1 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <16933_1 morphoSyntax>
  <Full stemNameInfo stemName>       = <Stem stemName>
				  | stem name logical constraint
 <Full stemNameInfo> == (
  ([stemName:66683] -> ([morphoSyntax:[ 16944:20772 20800:20801]]  / ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] ))))
				 & ( ([stemName:66696] -> ([morphoSyntax:[ 17137:66715]]  / ([morphoSyntax:[ 20800:20806]] )))
				 & ( ([stemName:66698] -> ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] )))
			& ( ([stemName:NotStemName66683] -> ~([morphoSyntax:[ 16944:20772 20800:20801]]  / ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] ))))
			& ( ([stemName:NotStemName66696] -> ~([morphoSyntax:[ 17137:66715]]  / ([morphoSyntax:[ 20800:20806]] ))))))))
rule {Fully analyzed stem with a final inflectional template 22959}
  Full =  20766_0 17061_1 (24689_2) (17053_3) (22936_4) Stem 22731_0 16933_1
														 | percolation
  <Full synCat>       = <Stem synCat>
  <Full morphoSyntax> = <Stem morphoSyntax>
  <Full inflected>    = +
  <Full requiresInflection> = -
						  | constraints
  <Stem blocksInflection> = - | prevent a non-final template from immediately being inflected without any intervening derivation or compounding
  <Stem  synCat>       = 22932
  <Stem morphoSyntax>    = <20766_0 morphoSyntax>
  <Stem synCat>          = <20766_0 envCat>   | allomorph
  <Stem exception>       = <20766_0 fromException>
  <Stem inflectionClass> = <20766_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <20766_0 morphoSyntax>
  <Stem morphoSyntax>    = <17061_1 morphoSyntax>
  <Stem synCat>          = <17061_1 envCat>   | allomorph
  <Stem exception>       = <17061_1 fromException>
  <Stem inflectionClass> = <17061_1 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17061_1 morphoSyntax>
  <Stem morphoSyntax>    = <24689_2 morphoSyntax>
  <Stem synCat>          = <24689_2 envCat>   | allomorph
  <Stem exception>       = <24689_2 fromException>
  <Stem inflectionClass> = <24689_2 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <24689_2 morphoSyntax>
  <Stem morphoSyntax>    = <17053_3 morphoSyntax>
  <Stem synCat>          = <17053_3 envCat>   | allomorph
  <Stem exception>       = <17053_3 fromException>
  <Stem inflectionClass> = <17053_3 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17053_3 morphoSyntax>
  <Stem morphoSyntax>    = <22936_4 morphoSyntax>
  <Stem synCat>          = <22936_4 envCat>   | allomorph
  <Stem exception>       = <22936_4 fromException>
  <Stem inflectionClass> = <22936_4 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <22936_4 morphoSyntax>
  <Stem morphoSyntax>    = <22731_0 morphoSyntax>
  <Stem synCat>          = <22731_0 envCat>   | allomorph
  <Stem exception>       = <22731_0 fromException>
  <Stem inflectionClass> = <22731_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <22731_0 morphoSyntax>
  <Stem morphoSyntax>    = <16933_1 morphoSyntax>
  <Stem synCat>          = <16933_1 envCat>   | allomorph
  <Stem exception>       = <16933_1 fromException>
  <Stem inflectionClass> = <16933_1 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <16933_1 morphoSyntax>
  <Full stemNameInfo stemName>       = <Stem stemName>
				  | stem name logical constraint
 <Full stemNameInfo> == (
  ([stemName:66683] -> ([morphoSyntax:[ 16944:20772 20800:20801]]  / ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] ))))
				 & ( ([stemName:66696] -> ([morphoSyntax:[ 17137:66715]]  / ([morphoSyntax:[ 20800:20806]] )))
				 & ( ([stemName:66698] -> ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] )))
			& ( ([stemName:NotStemName66683] -> ~([morphoSyntax:[ 16944:20772 20800:20801]]  / ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] ))))
			& ( ([stemName:NotStemName66696] -> ~([morphoSyntax:[ 17137:66715]]  / ([morphoSyntax:[ 20800:20806]] ))))))))
rule {Fully analyzed stem with a final inflectional template 22960}
  Full =  17164_0 17007_1 (24689_2) (17053_3) (22936_4) Stem (17165_0)
														 | percolation
  <Full synCat>       = <Stem synCat>
  <Full morphoSyntax> = <Stem morphoSyntax>
  <Full inflected>    = +
  <Full requiresInflection> = -
						  | constraints
  <Stem blocksInflection> = - | prevent a non-final template from immediately being inflected without any intervening derivation or compounding
  <Stem  synCat>       = 22932
  <Stem morphoSyntax>    = <17164_0 morphoSyntax>
  <Stem synCat>          = <17164_0 envCat>   | allomorph
  <Stem exception>       = <17164_0 fromException>
  <Stem inflectionClass> = <17164_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17164_0 morphoSyntax>
  <Stem morphoSyntax>    = <17007_1 morphoSyntax>
  <Stem synCat>          = <17007_1 envCat>   | allomorph
  <Stem exception>       = <17007_1 fromException>
  <Stem inflectionClass> = <17007_1 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17007_1 morphoSyntax>
  <Stem morphoSyntax>    = <24689_2 morphoSyntax>
  <Stem synCat>          = <24689_2 envCat>   | allomorph
  <Stem exception>       = <24689_2 fromException>
  <Stem inflectionClass> = <24689_2 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <24689_2 morphoSyntax>
  <Stem morphoSyntax>    = <17053_3 morphoSyntax>
  <Stem synCat>          = <17053_3 envCat>   | allomorph
  <Stem exception>       = <17053_3 fromException>
  <Stem inflectionClass> = <17053_3 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17053_3 morphoSyntax>
  <Stem morphoSyntax>    = <22936_4 morphoSyntax>
  <Stem synCat>          = <22936_4 envCat>   | allomorph
  <Stem exception>       = <22936_4 fromException>
  <Stem inflectionClass> = <22936_4 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <22936_4 morphoSyntax>
  <Stem morphoSyntax>    = <17165_0 morphoSyntax>
  <Stem synCat>          = <17165_0 envCat>   | allomorph
  <Stem exception>       = <17165_0 fromException>
  <Stem inflectionClass> = <17165_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17165_0 morphoSyntax>
  <Full stemNameInfo stemName>       = <Stem stemName>
				  | stem name logical constraint
 <Full stemNameInfo> == (
  ([stemName:66683] -> ([morphoSyntax:[ 16944:20772 20800:20801]]  / ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] ))))
				 & ( ([stemName:66696] -> ([morphoSyntax:[ 17137:66715]]  / ([morphoSyntax:[ 20800:20806]] )))
				 & ( ([stemName:66698] -> ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] )))
			& ( ([stemName:NotStemName66683] -> ~([morphoSyntax:[ 16944:20772 20800:20801]]  / ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] ))))
			& ( ([stemName:NotStemName66696] -> ~([morphoSyntax:[ 17137:66715]]  / ([morphoSyntax:[ 20800:20806]] ))))))))
rule {Fully analyzed stem with a final inflectional template 22962}
  Full =  (17122_0) 17007_1 (24689_2) (17053_3) (22936_4) Stem 17142_0
														 | percolation
  <Full synCat>       = <Stem synCat>
  <Full morphoSyntax> = <Stem morphoSyntax>
  <Full inflected>    = +
  <Full requiresInflection> = -
						  | constraints
  <Stem blocksInflection> = - | prevent a non-final template from immediately being inflected without any intervening derivation or compounding
  <Stem  synCat>       = 22932
  <Stem morphoSyntax>    = <17122_0 morphoSyntax>
  <Stem synCat>          = <17122_0 envCat>   | allomorph
  <Stem exception>       = <17122_0 fromException>
  <Stem inflectionClass> = <17122_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17122_0 morphoSyntax>
  <Stem morphoSyntax>    = <17007_1 morphoSyntax>
  <Stem synCat>          = <17007_1 envCat>   | allomorph
  <Stem exception>       = <17007_1 fromException>
  <Stem inflectionClass> = <17007_1 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17007_1 morphoSyntax>
  <Stem morphoSyntax>    = <24689_2 morphoSyntax>
  <Stem synCat>          = <24689_2 envCat>   | allomorph
  <Stem exception>       = <24689_2 fromException>
  <Stem inflectionClass> = <24689_2 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <24689_2 morphoSyntax>
  <Stem morphoSyntax>    = <17053_3 morphoSyntax>
  <Stem synCat>          = <17053_3 envCat>   | allomorph
  <Stem exception>       = <17053_3 fromException>
  <Stem inflectionClass> = <17053_3 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17053_3 morphoSyntax>
  <Stem morphoSyntax>    = <22936_4 morphoSyntax>
  <Stem synCat>          = <22936_4 envCat>   | allomorph
  <Stem exception>       = <22936_4 fromException>
  <Stem inflectionClass> = <22936_4 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <22936_4 morphoSyntax>
  <Stem morphoSyntax>    = <17142_0 morphoSyntax>
  <Stem synCat>          = <17142_0 envCat>   | allomorph
  <Stem exception>       = <17142_0 fromException>
  <Stem inflectionClass> = <17142_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <17142_0 morphoSyntax>
  <Full stemNameInfo stemName>       = <Stem stemName>
				  | stem name logical constraint
 <Full stemNameInfo> == (
  ([stemName:66683] -> ([morphoSyntax:[ 16944:20772 20800:20801]]  / ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] ))))
				 & ( ([stemName:66696] -> ([morphoSyntax:[ 17137:66715]]  / ([morphoSyntax:[ 20800:20806]] )))
				 & ( ([stemName:66698] -> ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] )))
			& ( ([stemName:NotStemName66683] -> ~([morphoSyntax:[ 16944:20772 20800:20801]]  / ([morphoSyntax:[ 20800:22738]]  / ([morphoSyntax:[ 20800:66721]] ))))
			& ( ([stemName:NotStemName66696] -> ~([morphoSyntax:[ 17137:66715]]  / ([morphoSyntax:[ 20800:20806]] ))))))))
rule {Fully analyzed stem with a final inflectional template 23219}
  Full =  (23222_0) Stem (23223_0)
														 | percolation
  <Full synCat>       = <Stem synCat>
  <Full morphoSyntax> = <Stem morphoSyntax>
  <Full inflected>    = +
  <Full requiresInflection> = -
						  | constraints
  <Stem blocksInflection> = - | prevent a non-final template from immediately being inflected without any intervening derivation or compounding
  <Stem  synCat>       = 19944
  <Stem morphoSyntax>    = <23222_0 morphoSyntax>
  <Stem synCat>          = <23222_0 envCat>   | allomorph
  <Stem exception>       = <23222_0 fromException>
  <Stem inflectionClass> = <23222_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <23222_0 morphoSyntax>
  <Stem morphoSyntax>    = <23223_0 morphoSyntax>
  <Stem synCat>          = <23223_0 envCat>   | allomorph
  <Stem exception>       = <23223_0 fromException>
  <Stem inflectionClass> = <23223_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <23223_0 morphoSyntax>
rule {Fully analyzed stem with a final inflectional template 22965}
  Full =  22966_0 Stem
														 | percolation
  <Full synCat>       = <Stem synCat>
  <Full morphoSyntax> = <Stem morphoSyntax>
  <Full inflected>    = +
  <Full requiresInflection> = -
						  | constraints
  <Stem blocksInflection> = - | prevent a non-final template from immediately being inflected without any intervening derivation or compounding
  <Stem  synCat>       = 22964
  <Stem morphoSyntax>    = <22966_0 morphoSyntax>
  <Stem synCat>          = <22966_0 envCat>   | allomorph
  <Stem exception>       = <22966_0 fromException>
  <Stem inflectionClass> = <22966_0 inflectionClass>
  <Full stemNameInfo morphoSyntax> = <22966_0 morphoSyntax>
| ------------------------------------------------------------
|                STEM
| ------------------------------------------------------------

rule {Stem consisting of a single root}
  Stem = root
					| percolation
		<Stem synCat>          = <root rootCat>
		<Stem morphoSyntax>    = <root morphoSyntax>
		<Stem inflectionClass> = <root inflectionClass>
		<Stem stratum>         = <root stratum>
		<Stem requiresInflection> = <root requiresInflection>
		<Stem stemName>   = <root stemName>
		<Stem exception>       = <root exception>
		<root> == ~[rootCat : unknown]  | root category has to be overt


rule {Stem with a derivational prefix}
  Stem_1 = derivPfx Stem_2
								| percolation
		<Stem_1 synCat>           = <Stem_2 synCat> | default to Stem 2 (in case deriv prefix has no category)
		<Stem_1 synCat>           <= <derivPfx toCat> | use priority union to override anything in Stem_2
		<Stem_1 morphoSyntax>     = <Stem_2 morphoSyntax>
		<Stem_1 stratum>          = <derivPfx stratum>
		<Stem_1 requiresInflection> = <Stem_2 requiresInflection> | default to stem 2 (in case deriv prefix has no to category)
		<Stem_1 requiresInflection> <= <derivPfx requiresInflection> | use deriv prefix when it has a category
		<Stem_1 exception>        = <Stem_2 exception>
		<Stem_1 stemName>         = <Stem_2 stemName>
		<Stem_1 morphoSyntax>    <= <derivPfx toMorphoSyntax>
		<Stem_1 inflectionClass> = <Stem_2 inflectionClass>
		<Stem_1 inflectionClass> <= <derivPfx toInflectionClass>
		<Stem_1 exception>       <= <derivPfx toException>
		<Stem_1 blocksInflection> = - | This stem can now be inflected
								| constraints
		<Stem_2 morphoSyntax>     = <derivPfx fromMorphoSyntax>
		<Stem_2 inflectionClass>  = <derivPfx fromInflectionClass>
		<Stem_2 stemName>         = <derivPfx stemName>
		<Stem_2 exception>        = <derivPfx fromException>
		{
		
		<Stem_2 synCat>           = <derivPfx fromCat>
		<Stem_2 synCat>           = <derivPfx envCat>
		/
		<derivPfx fromCat>        = 256
		<derivPfx envCat>         = 256
{
	  
		<Stem_2 synCat>           = 256 /
		<Stem_2 synCat>           = 13146 /
		<Stem_2 synCat>           = 13147 /
		<Stem_2 synCat>           = 13148 /
		<Stem_2 synCat>           = 13339 /
		<Stem_2 synCat>           = 13681 /
		<Stem_2 synCat>           = 24234 /
		<Stem_2 synCat>           = 24235 /
		<Stem_2 synCat>           = 24236
}

		/
		<derivPfx fromCat>        = 24234
		<derivPfx envCat>         = 24234
{
	  
		<Stem_2 synCat>           = 24234 /
		<Stem_2 synCat>           = 24235 /
		<Stem_2 synCat>           = 24236
}

		/
		<derivPfx fromCat>        = 258
		<derivPfx envCat>         = 258
{
	  
		<Stem_2 synCat>           = 258 /
		<Stem_2 synCat>           = 16929 /
		<Stem_2 synCat>           = 16930 /
		<Stem_2 synCat>           = 22932
}

		/
		<derivPfx fromCat>        = 13605
		<derivPfx envCat>         = 13605
{
	  
		<Stem_2 synCat>           = 13605 /
		<Stem_2 synCat>           = 13683
}

		/
		<derivPfx fromCat>        = 13696
		<derivPfx envCat>         = 13696
{
	  
		<Stem_2 synCat>           = 13696 /
		<Stem_2 synCat>           = 13697 /
		<Stem_2 synCat>           = 13698
}

		/
		<derivPfx fromCat>        = 13744
		<derivPfx envCat>         = 13744
{
	  
		<Stem_2 synCat>           = 13744 /
		<Stem_2 synCat>           = 13765 /
		<Stem_2 synCat>           = 13766 /
		<Stem_2 synCat>           = 23342
}

		/
		<derivPfx fromCat>        = 13765
		<derivPfx envCat>         = 13765
{
	  
		<Stem_2 synCat>           = 13765 /
		<Stem_2 synCat>           = 13766 /
		<Stem_2 synCat>           = 23342
}

		/
		<derivPfx fromCat>        = 20333
		<derivPfx envCat>         = 20333
{
	  
		<Stem_2 synCat>           = 20333 /
		<Stem_2 synCat>           = 20334 /
		<Stem_2 synCat>           = 20335
}

		/
		<derivPfx fromCat>        = 22963
		<derivPfx envCat>         = 22963
{
	  
		<Stem_2 synCat>           = 22963 /
		<Stem_2 synCat>           = 22964 /
		<Stem_2 synCat>           = 23053
}

	  }

rule {Stem with a derivational suffix}
  Stem_1 =          Stem_2 derivSfx
								| percolation
		<Stem_1 synCat>           = <Stem_2 synCat> | default to Stem 2 (in case deriv suffix has no to category)
		<Stem_1 synCat>           <= <derivSfx toCat> | use priority union to override anything in Stem_2
		<Stem_1 morphoSyntax>     = <Stem_2 morphoSyntax>
		<Stem_1 stratum>          = <derivSfx stratum>
		<Stem_1 requiresInflection> = <Stem_2 requiresInflection> | default to stem 2 (in case deriv suffix has no to category)
		<Stem_1 requiresInflection> <= <derivSfx requiresInflection> | use deriv suffix when it has a category
		<Stem_1 exception>        = <Stem_2 exception>
		<Stem_1 stemName>         = <Stem_2 stemName>
		<Stem_1 morphoSyntax>    <= <derivSfx toMorphoSyntax>
		<Stem_1 inflectionClass> = <Stem_2 inflectionClass>
		<Stem_1 inflectionClass> <= <derivSfx toInflectionClass>
		<Stem_1 exception>       <= <derivSfx toException>
		<Stem_1 blocksInflection> = - | This stem can now be inflected
								| constraints
		<Stem_2 morphoSyntax>     = <derivSfx fromMorphoSyntax>
		<Stem_2 inflectionClass>  = <derivSfx fromInflectionClass>
		<Stem_2 stemName>         = <derivSfx stemName>
		<Stem_2 exception>        = <derivSfx fromException>
		{
		
		<Stem_2 synCat>           = <derivSfx fromCat>
		<Stem_2 synCat>           = <derivSfx envCat>
		/
		<derivSfx fromCat>        = 256
		<derivSfx envCat>         = 256
{
	  
		<Stem_2 synCat>           = 256 /
		<Stem_2 synCat>           = 13146 /
		<Stem_2 synCat>           = 13147 /
		<Stem_2 synCat>           = 13148 /
		<Stem_2 synCat>           = 13339 /
		<Stem_2 synCat>           = 13681 /
		<Stem_2 synCat>           = 24234 /
		<Stem_2 synCat>           = 24235 /
		<Stem_2 synCat>           = 24236
}

		/
		<derivSfx fromCat>        = 24234
		<derivSfx envCat>         = 24234
{
	  
		<Stem_2 synCat>           = 24234 /
		<Stem_2 synCat>           = 24235 /
		<Stem_2 synCat>           = 24236
}

		/
		<derivSfx fromCat>        = 258
		<derivSfx envCat>         = 258
{
	  
		<Stem_2 synCat>           = 258 /
		<Stem_2 synCat>           = 16929 /
		<Stem_2 synCat>           = 16930 /
		<Stem_2 synCat>           = 22932
}

		/
		<derivSfx fromCat>        = 13605
		<derivSfx envCat>         = 13605
{
	  
		<Stem_2 synCat>           = 13605 /
		<Stem_2 synCat>           = 13683
}

		/
		<derivSfx fromCat>        = 13696
		<derivSfx envCat>         = 13696
{
	  
		<Stem_2 synCat>           = 13696 /
		<Stem_2 synCat>           = 13697 /
		<Stem_2 synCat>           = 13698
}

		/
		<derivSfx fromCat>        = 13744
		<derivSfx envCat>         = 13744
{
	  
		<Stem_2 synCat>           = 13744 /
		<Stem_2 synCat>           = 13765 /
		<Stem_2 synCat>           = 13766 /
		<Stem_2 synCat>           = 23342
}

		/
		<derivSfx fromCat>        = 13765
		<derivSfx envCat>         = 13765
{
	  
		<Stem_2 synCat>           = 13765 /
		<Stem_2 synCat>           = 13766 /
		<Stem_2 synCat>           = 23342
}

		/
		<derivSfx fromCat>        = 20333
		<derivSfx envCat>         = 20333
{
	  
		<Stem_2 synCat>           = 20333 /
		<Stem_2 synCat>           = 20334 /
		<Stem_2 synCat>           = 20335
}

		/
		<derivSfx fromCat>        = 22963
		<derivSfx envCat>         = 22963
{
	  
		<Stem_2 synCat>           = 22963 /
		<Stem_2 synCat>           = 22964 /
		<Stem_2 synCat>           = 23053
}

	  }
rule {Stem with a derivational circumfix}
		 Stem_1 = derivCircumPfx Stem_2 derivCircumSfx
		 | percolation
		 <Stem_1 synCat>           = <Stem_2 synCat> | default to Stem 2 (in case deriv circumfixes have no to category)
		 <Stem_1 synCat>           <= <derivCircumPfx toCat> | use priority union to override anything in Stem_2
		 <Stem_1 synCat>           <= <derivCircumSfx toCat>
		 <Stem_1 morphoSyntax>     = <Stem_2 morphoSyntax>
		 <Stem_1 stratum>          = <derivCircumPfx stratum>
		 <Stem_1 stratum>          = <derivCircumSfx stratum>
		 <Stem_1 requiresInflection> = <Stem_2 requiresInflection> | default to stem 2 (in case deriv prefix has no category)
		 <Stem_1 requiresInflection> <= <derivCircumPfx requiresInflection> | use deriv prefix when it has a category
		 <Stem_1 requiresInflection> <= <derivCircumSfx requiresInflection> | use deriv suffix when it has a category
		 <Stem_1 exception>        = <Stem_2 exception>
		 <Stem_1 stemName>         = <Stem_2 stemName>
		 <Stem_1 morphoSyntax>    <= <derivCircumPfx toMorphoSyntax>
		 <Stem_1 morphoSyntax>    <= <derivCircumSfx toMorphoSyntax>
		 <Stem_1 inflectionClass> = <Stem_2 inflectionClass>
		 <Stem_1 inflectionClass> <= <derivCircumPfx toInflectionClass>
		 <Stem_1 inflectionClass> <= <derivCircumSfx toInflectionClass>
		 <Stem_1 exception>       <= <derivCircumPfx toException>
		 <Stem_1 exception>       <= <derivCircumSfx toException>
		 <Stem_1 blocksInflection> = - | This stem can now be inflected
		 | constraints
		 <Stem_2 morphoSyntax>     = <derivCircumPfx fromMorphoSyntax>
		 <Stem_2 morphoSyntax>     = <derivCircumSfx fromMorphoSyntax>
		 <Stem_2 inflectionClass>  = <derivCircumPfx fromInflectionClass>
		 <Stem_2 inflectionClass>  = <derivCircumSfx fromInflectionClass>
		 <Stem_2 stemName>         = <derivCircumPfx stemName>
		 <Stem_2 stemName>         = <derivCircumSfx stemName>
		 <Stem_2 exception>        = <derivCircumPfx fromException>
		 <Stem_2 exception>        = <derivCircumSfx fromException>
	  {
	  
		<Stem_2 synCat>           = <derivCircumPfx fromCat>
		<Stem_2 synCat>           = <derivCircumPfx envCat>
		<Stem_2 synCat>           = <derivCircumSfx fromCat>
		<Stem_2 synCat>           = <derivCircumSfx envCat>
		/
		<derivCircumPfx fromCat>        = 256
		<derivCircumPfx envCat>         = 256
		<derivCircumSfx fromCat>        = 256
		<derivCircumSfx envCat>         = 256
{
	  
		<Stem_2 synCat>           = 256 /
		<Stem_2 synCat>           = 13146 /
		<Stem_2 synCat>           = 13147 /
		<Stem_2 synCat>           = 13148 /
		<Stem_2 synCat>           = 13339 /
		<Stem_2 synCat>           = 13681 /
		<Stem_2 synCat>           = 24234 /
		<Stem_2 synCat>           = 24235 /
		<Stem_2 synCat>           = 24236
}

		/
		<derivCircumPfx fromCat>        = 24234
		<derivCircumPfx envCat>         = 24234
		<derivCircumSfx fromCat>        = 24234
		<derivCircumSfx envCat>         = 24234
{
	  
		<Stem_2 synCat>           = 24234 /
		<Stem_2 synCat>           = 24235 /
		<Stem_2 synCat>           = 24236
}

		/
		<derivCircumPfx fromCat>        = 258
		<derivCircumPfx envCat>         = 258
		<derivCircumSfx fromCat>        = 258
		<derivCircumSfx envCat>         = 258
{
	  
		<Stem_2 synCat>           = 258 /
		<Stem_2 synCat>           = 16929 /
		<Stem_2 synCat>           = 16930 /
		<Stem_2 synCat>           = 22932
}

		/
		<derivCircumPfx fromCat>        = 13605
		<derivCircumPfx envCat>         = 13605
		<derivCircumSfx fromCat>        = 13605
		<derivCircumSfx envCat>         = 13605
{
	  
		<Stem_2 synCat>           = 13605 /
		<Stem_2 synCat>           = 13683
}

		/
		<derivCircumPfx fromCat>        = 13696
		<derivCircumPfx envCat>         = 13696
		<derivCircumSfx fromCat>        = 13696
		<derivCircumSfx envCat>         = 13696
{
	  
		<Stem_2 synCat>           = 13696 /
		<Stem_2 synCat>           = 13697 /
		<Stem_2 synCat>           = 13698
}

		/
		<derivCircumPfx fromCat>        = 13744
		<derivCircumPfx envCat>         = 13744
		<derivCircumSfx fromCat>        = 13744
		<derivCircumSfx envCat>         = 13744
{
	  
		<Stem_2 synCat>           = 13744 /
		<Stem_2 synCat>           = 13765 /
		<Stem_2 synCat>           = 13766 /
		<Stem_2 synCat>           = 23342
}

		/
		<derivCircumPfx fromCat>        = 13765
		<derivCircumPfx envCat>         = 13765
		<derivCircumSfx fromCat>        = 13765
		<derivCircumSfx envCat>         = 13765
{
	  
		<Stem_2 synCat>           = 13765 /
		<Stem_2 synCat>           = 13766 /
		<Stem_2 synCat>           = 23342
}

		/
		<derivCircumPfx fromCat>        = 20333
		<derivCircumPfx envCat>         = 20333
		<derivCircumSfx fromCat>        = 20333
		<derivCircumSfx envCat>         = 20333
{
	  
		<Stem_2 synCat>           = 20333 /
		<Stem_2 synCat>           = 20334 /
		<Stem_2 synCat>           = 20335
}

		/
		<derivCircumPfx fromCat>        = 22963
		<derivCircumPfx envCat>         = 22963
		<derivCircumSfx fromCat>        = 22963
		<derivCircumSfx envCat>         = 22963
{
	  
		<Stem_2 synCat>           = 22963 /
		<Stem_2 synCat>           = 22964 /
		<Stem_2 synCat>           = 23053
}

	  }
	  
rule {Stem with a derivational circumfix where the rightmost part is an infix (and so may end up as a prefix}
		 Stem_1 = derivCircumPfx_1 derivCircumPfx_2 Stem_2
		 | percolation
		 <Stem_1 synCat>           = <Stem_2 synCat> | default to Stem 2 (in case deriv circumfixes have no to category)
		 <Stem_1 synCat>           <= <derivCircumPfx_1 toCat> | use priority union to override anything in Stem_2
		 <Stem_1 synCat>           <= <derivCircumPfx_2 toCat>
		 <Stem_1 morphoSyntax>     = <Stem_2 morphoSyntax>
		 <Stem_1 stratum>          = <derivCircumPfx_1 stratum>
		 <Stem_1 stratum>          = <derivCircumPfx_2 stratum>
		 <Stem_1 requiresInflection> = <Stem_2 requiresInflection> | default to stem 2 (in case deriv prefix has no category)
		 <Stem_1 requiresInflection> <= <derivCircumPfx_1 requiresInflection> | use deriv prefix when it has a category
		 <Stem_1 requiresInflection> <= <derivCircumPfx_2 requiresInflection> | use deriv suffix when it has a category
		 <Stem_1 exception>        = <Stem_2 exception>
		 <Stem_1 stemName>         = <Stem_2 stemName>
		 <Stem_1 morphoSyntax>    <= <derivCircumPfx_1 toMorphoSyntax>
		 <Stem_1 morphoSyntax>    <= <derivCircumPfx_2 toMorphoSyntax>
		 <Stem_1 inflectionClass> = <Stem_2 inflectionClass>
		 <Stem_1 inflectionClass> <= <derivCircumPfx_1 toInflectionClass>
		 <Stem_1 inflectionClass> <= <derivCircumPfx_2 toInflectionClass>
		 <Stem_1 exception>       <= <derivCircumPfx_1 toException>
		 <Stem_1 exception>       <= <derivCircumPfx_2 toException>
		 <Stem_1 blocksInflection> = - | This stem can now be inflected
		 | constraints
		 <Stem_2 morphoSyntax>     = <derivCircumPfx_1 fromMorphoSyntax>
		 <Stem_2 morphoSyntax>     = <derivCircumPfx_2 fromMorphoSyntax>
		 <Stem_2 inflectionClass>  = <derivCircumPfx_1 fromInflectionClass>
		 <Stem_2 inflectionClass>  = <derivCircumPfx_2 fromInflectionClass>
		 <Stem_2 stemName>         = <derivCircumPfx_1 stemName>
		 <Stem_2 stemName>         = <derivCircumPfx_2 stemName>
		 <Stem_2 exception>        = <derivCircumPfx_1 fromException>
		 <Stem_2 exception>        = <derivCircumPfx_2 fromException>
		 | rightmost "prefix" must be an infix
		 <derivCircumPfx_2> == [morphType : infix]
	  {
	  
		<Stem_2 synCat>           = <derivCircumPfx_1 fromCat>
		<Stem_2 synCat>           = <derivCircumPfx_1 envCat>
		<Stem_2 synCat>           = <derivCircumPfx_2 fromCat>
		<Stem_2 synCat>           = <derivCircumPfx_2 envCat>
		/
		<derivCircumPfx_1 fromCat>        = 256
		<derivCircumPfx_1 envCat>         = 256
		<derivCircumPfx_2 fromCat>        = 256
		<derivCircumPfx_2 envCat>         = 256
{
	  
		<Stem_2 synCat>           = 256 /
		<Stem_2 synCat>           = 13146 /
		<Stem_2 synCat>           = 13147 /
		<Stem_2 synCat>           = 13148 /
		<Stem_2 synCat>           = 13339 /
		<Stem_2 synCat>           = 13681 /
		<Stem_2 synCat>           = 24234 /
		<Stem_2 synCat>           = 24235 /
		<Stem_2 synCat>           = 24236
}

		/
		<derivCircumPfx_1 fromCat>        = 24234
		<derivCircumPfx_1 envCat>         = 24234
		<derivCircumPfx_2 fromCat>        = 24234
		<derivCircumPfx_2 envCat>         = 24234
{
	  
		<Stem_2 synCat>           = 24234 /
		<Stem_2 synCat>           = 24235 /
		<Stem_2 synCat>           = 24236
}

		/
		<derivCircumPfx_1 fromCat>        = 258
		<derivCircumPfx_1 envCat>         = 258
		<derivCircumPfx_2 fromCat>        = 258
		<derivCircumPfx_2 envCat>         = 258
{
	  
		<Stem_2 synCat>           = 258 /
		<Stem_2 synCat>           = 16929 /
		<Stem_2 synCat>           = 16930 /
		<Stem_2 synCat>           = 22932
}

		/
		<derivCircumPfx_1 fromCat>        = 13605
		<derivCircumPfx_1 envCat>         = 13605
		<derivCircumPfx_2 fromCat>        = 13605
		<derivCircumPfx_2 envCat>         = 13605
{
	  
		<Stem_2 synCat>           = 13605 /
		<Stem_2 synCat>           = 13683
}

		/
		<derivCircumPfx_1 fromCat>        = 13696
		<derivCircumPfx_1 envCat>         = 13696
		<derivCircumPfx_2 fromCat>        = 13696
		<derivCircumPfx_2 envCat>         = 13696
{
	  
		<Stem_2 synCat>           = 13696 /
		<Stem_2 synCat>           = 13697 /
		<Stem_2 synCat>           = 13698
}

		/
		<derivCircumPfx_1 fromCat>        = 13744
		<derivCircumPfx_1 envCat>         = 13744
		<derivCircumPfx_2 fromCat>        = 13744
		<derivCircumPfx_2 envCat>         = 13744
{
	  
		<Stem_2 synCat>           = 13744 /
		<Stem_2 synCat>           = 13765 /
		<Stem_2 synCat>           = 13766 /
		<Stem_2 synCat>           = 23342
}

		/
		<derivCircumPfx_1 fromCat>        = 13765
		<derivCircumPfx_1 envCat>         = 13765
		<derivCircumPfx_2 fromCat>        = 13765
		<derivCircumPfx_2 envCat>         = 13765
{
	  
		<Stem_2 synCat>           = 13765 /
		<Stem_2 synCat>           = 13766 /
		<Stem_2 synCat>           = 23342
}

		/
		<derivCircumPfx_1 fromCat>        = 20333
		<derivCircumPfx_1 envCat>         = 20333
		<derivCircumPfx_2 fromCat>        = 20333
		<derivCircumPfx_2 envCat>         = 20333
{
	  
		<Stem_2 synCat>           = 20333 /
		<Stem_2 synCat>           = 20334 /
		<Stem_2 synCat>           = 20335
}

		/
		<derivCircumPfx_1 fromCat>        = 22963
		<derivCircumPfx_1 envCat>         = 22963
		<derivCircumPfx_2 fromCat>        = 22963
		<derivCircumPfx_2 envCat>         = 22963
{
	  
		<Stem_2 synCat>           = 22963 /
		<Stem_2 synCat>           = 22964 /
		<Stem_2 synCat>           = 23053
}

	  }
	  
rule {Stem via compound rule 24288}
  Stem_1 = Stem_2 Stem_3
                                | percolation
		<Stem_1 morphoSyntax> = <Stem_3 morphoSyntax>
		<Stem_1 synCat> = <Stem_3 synCat>
		<Stem_1 requiresInflection> = <Stem_3 requiresInflection>
		<Stem_1 inflectionClass> = <Stem_3 inflectionClass>
		<Stem_1 exception> = <Stem_3 exception>
			   | for stem names, use priority union to handle case of compound within a compound; last one wins
		<Stem_1 stemName>   <= <Stem_3 stemName>

		<Stem_1 blocksInflection> = - | This stem can now be inflected
						  | constraints

				{
		<Stem_2 synCat> =  256 /
		<Stem_2 synCat>           = 13146 /
		<Stem_2 synCat>           = 13147 /
		<Stem_2 synCat>           = 13148 /
		<Stem_2 synCat>           = 13339 /
		<Stem_2 synCat>           = 13681 /
		<Stem_2 synCat>           = 24234 /
		<Stem_2 synCat>           = 24235 /
		<Stem_2 synCat>           = 24236 }
								
				{
		<Stem_3 synCat> =  256 /
		<Stem_3 synCat>           = 13146 /
		<Stem_3 synCat>           = 13147 /
		<Stem_3 synCat>           = 13148 /
		<Stem_3 synCat>           = 13339 /
		<Stem_3 synCat>           = 13681 /
		<Stem_3 synCat>           = 24234 /
		<Stem_3 synCat>           = 24235 /
		<Stem_3 synCat>           = 24236 }
				
rule {Stem via compound rule 24361}
  Stem_1 = Stem_2 Stem_3
                                | percolation
		<Stem_1 morphoSyntax> = <Stem_3 morphoSyntax>
		<Stem_1 synCat> = <Stem_3 synCat>
		<Stem_1 requiresInflection> = <Stem_3 requiresInflection>
		<Stem_1 inflectionClass> = <Stem_3 inflectionClass>
		<Stem_1 exception> = <Stem_3 exception>
			   | for stem names, use priority union to handle case of compound within a compound; last one wins
		<Stem_1 stemName>   <= <Stem_3 stemName>

		<Stem_1 blocksInflection> = - | This stem can now be inflected
						  | constraints

		<Stem_2 synCat> = 				19944
				{
		<Stem_3 synCat> =  256 /
		<Stem_3 synCat>           = 13146 /
		<Stem_3 synCat>           = 13147 /
		<Stem_3 synCat>           = 13148 /
		<Stem_3 synCat>           = 13339 /
		<Stem_3 synCat>           = 13681 /
		<Stem_3 synCat>           = 24234 /
		<Stem_3 synCat>           = 24235 /
		<Stem_3 synCat>           = 24236 }
				
rule {Stem via compound rule 24371}
  Stem_1 = Stem_2 Stem_3
                                | percolation
		<Stem_1 morphoSyntax> = <Stem_3 morphoSyntax>
		<Stem_1 synCat> = <Stem_3 synCat>
		<Stem_1 requiresInflection> = <Stem_3 requiresInflection>
		<Stem_1 inflectionClass> = <Stem_3 inflectionClass>
		<Stem_1 exception> = <Stem_3 exception>
			   | for stem names, use priority union to handle case of compound within a compound; last one wins
		<Stem_1 stemName>   <= <Stem_3 stemName>

		<Stem_1 blocksInflection> = - | This stem can now be inflected
						  | constraints

				{
		<Stem_2 synCat> =  256 /
		<Stem_2 synCat>           = 13146 /
		<Stem_2 synCat>           = 13147 /
		<Stem_2 synCat>           = 13148 /
		<Stem_2 synCat>           = 13339 /
		<Stem_2 synCat>           = 13681 /
		<Stem_2 synCat>           = 24234 /
		<Stem_2 synCat>           = 24235 /
		<Stem_2 synCat>           = 24236 }
								
		<Stem_3 synCat> = 16930
rule {Stem via compound rule 24503}
  Stem_1 = Stem_2 Stem_3
                                | percolation
		<Stem_1 morphoSyntax> = <Stem_3 morphoSyntax>
		<Stem_1 synCat> = <Stem_3 synCat>
		<Stem_1 requiresInflection> = <Stem_3 requiresInflection>
		<Stem_1 inflectionClass> = <Stem_3 inflectionClass>
		<Stem_1 exception> = <Stem_3 exception>
			   | for stem names, use priority union to handle case of compound within a compound; last one wins
		<Stem_1 stemName>   <= <Stem_3 stemName>

		<Stem_1 blocksInflection> = - | This stem can now be inflected
						  | constraints

				{
		<Stem_2 synCat> =  256 /
		<Stem_2 synCat>           = 13146 /
		<Stem_2 synCat>           = 13147 /
		<Stem_2 synCat>           = 13148 /
		<Stem_2 synCat>           = 13339 /
		<Stem_2 synCat>           = 13681 /
		<Stem_2 synCat>           = 24234 /
		<Stem_2 synCat>           = 24235 /
		<Stem_2 synCat>           = 24236 }
								
		<Stem_3 synCat> = 16929
rule {Stem via compound rule 24569}
  Stem_1 = Stem_2 Stem_3
                                | percolation
		<Stem_1 morphoSyntax> = <Stem_3 morphoSyntax>
		<Stem_1 synCat> = <Stem_3 synCat>
		<Stem_1 requiresInflection> = <Stem_3 requiresInflection>
		<Stem_1 inflectionClass> = <Stem_3 inflectionClass>
		<Stem_1 exception> = <Stem_3 exception>
			   | for stem names, use priority union to handle case of compound within a compound; last one wins
		<Stem_1 stemName>   <= <Stem_3 stemName>

		<Stem_1 blocksInflection> = - | This stem can now be inflected
						  | constraints

		<Stem_2 synCat> = 				19944
				{
		<Stem_3 synCat> =  258 /
		<Stem_3 synCat>           = 16929 /
		<Stem_3 synCat>           = 16930 /
		<Stem_3 synCat>           = 22932 }
				
rule {Stem via compound rule 24574}
  Stem_1 = Stem_2 Stem_3
                                | percolation
		<Stem_1 morphoSyntax> = <Stem_3 morphoSyntax>
		<Stem_1 synCat> = <Stem_3 synCat>
		<Stem_1 requiresInflection> = <Stem_3 requiresInflection>
		<Stem_1 inflectionClass> = <Stem_3 inflectionClass>
		<Stem_1 exception> = <Stem_3 exception>
			   | for stem names, use priority union to handle case of compound within a compound; last one wins
		<Stem_1 stemName>   <= <Stem_3 stemName>

		<Stem_1 blocksInflection> = - | This stem can now be inflected
						  | constraints

				{
		<Stem_2 synCat> =  22963 /
		<Stem_2 synCat>           = 22964 /
		<Stem_2 synCat>           = 23053 }
								
				{
		<Stem_3 synCat> =  258 /
		<Stem_3 synCat>           = 16929 /
		<Stem_3 synCat>           = 16930 /
		<Stem_3 synCat>           = 22932 }
				
rule {Stem via compound rule 24613}
  Stem_1 = Stem_2 Stem_3
                                | percolation
		<Stem_1 morphoSyntax> = <Stem_3 morphoSyntax>
		<Stem_1 synCat> = <Stem_3 synCat>
		<Stem_1 requiresInflection> = <Stem_3 requiresInflection>
		<Stem_1 inflectionClass> = <Stem_3 inflectionClass>
		<Stem_1 exception> = <Stem_3 exception>
			   | for stem names, use priority union to handle case of compound within a compound; last one wins
		<Stem_1 stemName>   <= <Stem_3 stemName>

		<Stem_1 blocksInflection> = - | This stem can now be inflected
						  | constraints

		<Stem_2 synCat> = 				255
				{
		<Stem_3 synCat> =  258 /
		<Stem_3 synCat>           = 16929 /
		<Stem_3 synCat>           = 16930 /
		<Stem_3 synCat>           = 22932 }
				
rule {Stem via compound rule 25044}
  Stem_1 = Stem_2 Stem_3
                                | percolation
		<Stem_1 morphoSyntax> = <Stem_3 morphoSyntax>
		<Stem_1 synCat> = <Stem_3 synCat>
		<Stem_1 requiresInflection> = <Stem_3 requiresInflection>
		<Stem_1 inflectionClass> = <Stem_3 inflectionClass>
		<Stem_1 exception> = <Stem_3 exception>
			   | for stem names, use priority union to handle case of compound within a compound; last one wins
		<Stem_1 stemName>   <= <Stem_3 stemName>
        <Stem_1 synCat> <= 16929                                | override category
		<Stem_1 blocksInflection> = - | This stem can now be inflected
						  | constraints

				{
		<Stem_2 synCat> =  256 /
		<Stem_2 synCat>           = 13146 /
		<Stem_2 synCat>           = 13147 /
		<Stem_2 synCat>           = 13148 /
		<Stem_2 synCat>           = 13339 /
		<Stem_2 synCat>           = 13681 /
		<Stem_2 synCat>           = 24234 /
		<Stem_2 synCat>           = 24235 /
		<Stem_2 synCat>           = 24236 }
								
		<Stem_3 synCat> = 16930
| ------------------------------------------------------------
|                PARTIALLY ANALYZED WORD PORTION
| ------------------------------------------------------------

			  | an unmarked root
rule {A root unmarked for category is a partial analysis}
Partial = root
								| percolation
  <Partial synCat> = <root rootCat>
								| constraint
  <root rootCat> = unknown

			  | affixes on an unmarked root
rule {One or more prefixes and suffixes on an unmarked stem}
Partial_1 = Prefs Partial_2 Suffs
								| percolation
  <Partial_1 synCat> = <Partial_2 synCat>
								| constraint
  <Partial_2 synCat> = unknown

			  | prefixes on an unmarked root
rule {One or more prefixes on an unmarked stem}
Partial_1 = Prefs Partial_2
								| percolation
  <Partial_1 synCat> = <Partial_2 synCat>
								| constraint
  <Partial_2 synCat> = unknown

			  | suffixes on an unmarked root
rule {One or more suffixes on an unmarked stem}
Partial_1 = Partial_2 Suffs
								| percolation
  <Partial_1 synCat> = <Partial_2 synCat>
								| constraint
  <Partial_2 synCat> = unknown

rule {Derivational circumfix on an unmarked stem}
Partial_1 = derivCircumPfx Partial_2 derivCircumSfx
								| percolation
  <Partial_1 synCat> = <Partial_2 synCat>
								| constraint
  <Partial_2 synCat> = unknown
rule {Derivational circumfix on an unmarked stem where second is an infix}
Partial_1 = derivCircumPfx_1 derivCircumPfx_2 Partial_2
								 | percolation
  <Partial_1 synCat> = <Partial_2 synCat>
								 | constraint
  <Partial_2 synCat> = unknown
								 | rightmost "prefix" must be an infix
  <derivCircumPfx_2> == [morphType : infix]

rule {Unclassifed circumfix on an unmarked stem}
Partial_1 = circumPfx Partial_2 circumSfx
								| percolation
  <Partial_1 synCat> = <Partial_2 synCat>
								| constraint
  <Partial_2 synCat> = unknown
  rule {Unclassifed circumfix on an unmarked stem where second is an infix}
  Partial_1 = circumPfx_1 circumPfx_2 Partial_2
								| percolation
  <Partial_1 synCat> = <Partial_2 synCat>
								| constraint
  <Partial_2 synCat> = unknown
								| rightmost "prefix" must be an infix
  <circumPfx_2> == [morphType : infix]

rule {An unanalyzed prefix added to a sequence of prefixes; no compound rules}
  Prefs_1 = prefix (Prefs_2)
				| no percolation or constraints

rule {A derivational prefix added to a sequence of prefixes; the derivational prefix may be next to the stem}
  Prefs_1 = derivPfx (Prefs_2)
				| no percolation or constraints

rule {An unanalyzed suffix added to a sequence of suffixes; no compound rules}
  Suffs_1 = (Suffs_2) suffix
				| no percolation or constraints

rule {A derivational suffix added to a sequence of suffixes; the derivational suffix may be next to the stem}
  Suffs_1 = (Suffs_2) derivSfx
				| no percolation or constraints

			  | affixes on otherwise fully analyzed
			  | these never allow derivational affixes next to the stem
rule {One or more unanalyzed prefixes and suffixes on a fully analyzed stem}
  Partial = Prefixes Full Suffixes
								| percolation
  <Partial inflected> = <Full inflected>
  <Partial synCat> = <Full synCat>
								| constraints
  
  {
  
		<Full synCat>           = <Prefixes synCat>
		<Full synCat>           = <Prefixes envCat>
		<Full synCat>           = <Suffixes synCat>
		<Full synCat>           = <Suffixes envCat>
		/
		<Prefixes synCat>        = 256
		<Prefixes envCat>         = 256
		<Suffixes synCat>        = 256
		<Suffixes envCat>         = 256
{
	  
		<Full synCat>           = 256 /
		<Full synCat>           = 13146 /
		<Full synCat>           = 13147 /
		<Full synCat>           = 13148 /
		<Full synCat>           = 13339 /
		<Full synCat>           = 13681 /
		<Full synCat>           = 24234 /
		<Full synCat>           = 24235 /
		<Full synCat>           = 24236
}

		/
		<Prefixes synCat>        = 24234
		<Prefixes envCat>         = 24234
		<Suffixes synCat>        = 24234
		<Suffixes envCat>         = 24234
{
	  
		<Full synCat>           = 24234 /
		<Full synCat>           = 24235 /
		<Full synCat>           = 24236
}

		/
		<Prefixes synCat>        = 258
		<Prefixes envCat>         = 258
		<Suffixes synCat>        = 258
		<Suffixes envCat>         = 258
{
	  
		<Full synCat>           = 258 /
		<Full synCat>           = 16929 /
		<Full synCat>           = 16930 /
		<Full synCat>           = 22932
}

		/
		<Prefixes synCat>        = 13605
		<Prefixes envCat>         = 13605
		<Suffixes synCat>        = 13605
		<Suffixes envCat>         = 13605
{
	  
		<Full synCat>           = 13605 /
		<Full synCat>           = 13683
}

		/
		<Prefixes synCat>        = 13696
		<Prefixes envCat>         = 13696
		<Suffixes synCat>        = 13696
		<Suffixes envCat>         = 13696
{
	  
		<Full synCat>           = 13696 /
		<Full synCat>           = 13697 /
		<Full synCat>           = 13698
}

		/
		<Prefixes synCat>        = 13744
		<Prefixes envCat>         = 13744
		<Suffixes synCat>        = 13744
		<Suffixes envCat>         = 13744
{
	  
		<Full synCat>           = 13744 /
		<Full synCat>           = 13765 /
		<Full synCat>           = 13766 /
		<Full synCat>           = 23342
}

		/
		<Prefixes synCat>        = 13765
		<Prefixes envCat>         = 13765
		<Suffixes synCat>        = 13765
		<Suffixes envCat>         = 13765
{
	  
		<Full synCat>           = 13765 /
		<Full synCat>           = 13766 /
		<Full synCat>           = 23342
}

		/
		<Prefixes synCat>        = 20333
		<Prefixes envCat>         = 20333
		<Suffixes synCat>        = 20333
		<Suffixes envCat>         = 20333
{
	  
		<Full synCat>           = 20333 /
		<Full synCat>           = 20334 /
		<Full synCat>           = 20335
}

		/
		<Prefixes synCat>        = 22963
		<Prefixes envCat>         = 22963
		<Suffixes synCat>        = 22963
		<Suffixes envCat>         = 22963
{
	  
		<Full synCat>           = 22963 /
		<Full synCat>           = 22964 /
		<Full synCat>           = 23053
}

  }

rule {One or more unanalyzed prefixes on a fully analyzed stem}
  Partial = Prefixes Full
								| percolation
  <Partial inflected> = <Full inflected>
  <Partial synCat> = <Full synCat>
								| constraints
  
  {
  
		<Full synCat>           = <Prefixes synCat>
		<Full synCat>           = <Prefixes envCat>
		/
		<Prefixes synCat>        = 256
		<Prefixes envCat>         = 256
{
	  
		<Full synCat>           = 256 /
		<Full synCat>           = 13146 /
		<Full synCat>           = 13147 /
		<Full synCat>           = 13148 /
		<Full synCat>           = 13339 /
		<Full synCat>           = 13681 /
		<Full synCat>           = 24234 /
		<Full synCat>           = 24235 /
		<Full synCat>           = 24236
}

		/
		<Prefixes synCat>        = 24234
		<Prefixes envCat>         = 24234
{
	  
		<Full synCat>           = 24234 /
		<Full synCat>           = 24235 /
		<Full synCat>           = 24236
}

		/
		<Prefixes synCat>        = 258
		<Prefixes envCat>         = 258
{
	  
		<Full synCat>           = 258 /
		<Full synCat>           = 16929 /
		<Full synCat>           = 16930 /
		<Full synCat>           = 22932
}

		/
		<Prefixes synCat>        = 13605
		<Prefixes envCat>         = 13605
{
	  
		<Full synCat>           = 13605 /
		<Full synCat>           = 13683
}

		/
		<Prefixes synCat>        = 13696
		<Prefixes envCat>         = 13696
{
	  
		<Full synCat>           = 13696 /
		<Full synCat>           = 13697 /
		<Full synCat>           = 13698
}

		/
		<Prefixes synCat>        = 13744
		<Prefixes envCat>         = 13744
{
	  
		<Full synCat>           = 13744 /
		<Full synCat>           = 13765 /
		<Full synCat>           = 13766 /
		<Full synCat>           = 23342
}

		/
		<Prefixes synCat>        = 13765
		<Prefixes envCat>         = 13765
{
	  
		<Full synCat>           = 13765 /
		<Full synCat>           = 13766 /
		<Full synCat>           = 23342
}

		/
		<Prefixes synCat>        = 20333
		<Prefixes envCat>         = 20333
{
	  
		<Full synCat>           = 20333 /
		<Full synCat>           = 20334 /
		<Full synCat>           = 20335
}

		/
		<Prefixes synCat>        = 22963
		<Prefixes envCat>         = 22963
{
	  
		<Full synCat>           = 22963 /
		<Full synCat>           = 22964 /
		<Full synCat>           = 23053
}

  }

rule {One or more unanalyzed suffixes on a fully analyzed stem}
  Partial =          Full Suffixes
								| percolation
  <Partial inflected> = <Full inflected>
  <Partial synCat> = <Full synCat>
								| constraints
  
  {
  
		<Full synCat>           = <Suffixes synCat>
		<Full synCat>           = <Suffixes envCat>
		/
		<Suffixes synCat>        = 256
		<Suffixes envCat>         = 256
{
	  
		<Full synCat>           = 256 /
		<Full synCat>           = 13146 /
		<Full synCat>           = 13147 /
		<Full synCat>           = 13148 /
		<Full synCat>           = 13339 /
		<Full synCat>           = 13681 /
		<Full synCat>           = 24234 /
		<Full synCat>           = 24235 /
		<Full synCat>           = 24236
}

		/
		<Suffixes synCat>        = 24234
		<Suffixes envCat>         = 24234
{
	  
		<Full synCat>           = 24234 /
		<Full synCat>           = 24235 /
		<Full synCat>           = 24236
}

		/
		<Suffixes synCat>        = 258
		<Suffixes envCat>         = 258
{
	  
		<Full synCat>           = 258 /
		<Full synCat>           = 16929 /
		<Full synCat>           = 16930 /
		<Full synCat>           = 22932
}

		/
		<Suffixes synCat>        = 13605
		<Suffixes envCat>         = 13605
{
	  
		<Full synCat>           = 13605 /
		<Full synCat>           = 13683
}

		/
		<Suffixes synCat>        = 13696
		<Suffixes envCat>         = 13696
{
	  
		<Full synCat>           = 13696 /
		<Full synCat>           = 13697 /
		<Full synCat>           = 13698
}

		/
		<Suffixes synCat>        = 13744
		<Suffixes envCat>         = 13744
{
	  
		<Full synCat>           = 13744 /
		<Full synCat>           = 13765 /
		<Full synCat>           = 13766 /
		<Full synCat>           = 23342
}

		/
		<Suffixes synCat>        = 13765
		<Suffixes envCat>         = 13765
{
	  
		<Full synCat>           = 13765 /
		<Full synCat>           = 13766 /
		<Full synCat>           = 23342
}

		/
		<Suffixes synCat>        = 20333
		<Suffixes envCat>         = 20333
{
	  
		<Full synCat>           = 20333 /
		<Full synCat>           = 20334 /
		<Full synCat>           = 20335
}

		/
		<Suffixes synCat>        = 22963
		<Suffixes envCat>         = 22963
{
	  
		<Full synCat>           = 22963 /
		<Full synCat>           = 22964 /
		<Full synCat>           = 23053
}

  }

rule {Unanalyzed circumfix on a fully analyzed stem}
  Partial = circumPfx Full circumSfx
								| percolation
  <Partial inflected> = <Full inflected>
  <Partial synCat> = <Full synCat>
								| constraints
  
  {
  
		<Full synCat>           = <circumPfx synCat>
		<Full synCat>           = <circumPfx envCat>
		<Full synCat>           = <circumSfx synCat>
		<Full synCat>           = <circumSfx envCat>
		/
		<circumPfx synCat>        = 256
		<circumPfx envCat>         = 256
		<circumSfx synCat>        = 256
		<circumSfx envCat>         = 256
{
	  
		<Full synCat>           = 256 /
		<Full synCat>           = 13146 /
		<Full synCat>           = 13147 /
		<Full synCat>           = 13148 /
		<Full synCat>           = 13339 /
		<Full synCat>           = 13681 /
		<Full synCat>           = 24234 /
		<Full synCat>           = 24235 /
		<Full synCat>           = 24236
}

		/
		<circumPfx synCat>        = 24234
		<circumPfx envCat>         = 24234
		<circumSfx synCat>        = 24234
		<circumSfx envCat>         = 24234
{
	  
		<Full synCat>           = 24234 /
		<Full synCat>           = 24235 /
		<Full synCat>           = 24236
}

		/
		<circumPfx synCat>        = 258
		<circumPfx envCat>         = 258
		<circumSfx synCat>        = 258
		<circumSfx envCat>         = 258
{
	  
		<Full synCat>           = 258 /
		<Full synCat>           = 16929 /
		<Full synCat>           = 16930 /
		<Full synCat>           = 22932
}

		/
		<circumPfx synCat>        = 13605
		<circumPfx envCat>         = 13605
		<circumSfx synCat>        = 13605
		<circumSfx envCat>         = 13605
{
	  
		<Full synCat>           = 13605 /
		<Full synCat>           = 13683
}

		/
		<circumPfx synCat>        = 13696
		<circumPfx envCat>         = 13696
		<circumSfx synCat>        = 13696
		<circumSfx envCat>         = 13696
{
	  
		<Full synCat>           = 13696 /
		<Full synCat>           = 13697 /
		<Full synCat>           = 13698
}

		/
		<circumPfx synCat>        = 13744
		<circumPfx envCat>         = 13744
		<circumSfx synCat>        = 13744
		<circumSfx envCat>         = 13744
{
	  
		<Full synCat>           = 13744 /
		<Full synCat>           = 13765 /
		<Full synCat>           = 13766 /
		<Full synCat>           = 23342
}

		/
		<circumPfx synCat>        = 13765
		<circumPfx envCat>         = 13765
		<circumSfx synCat>        = 13765
		<circumSfx envCat>         = 13765
{
	  
		<Full synCat>           = 13765 /
		<Full synCat>           = 13766 /
		<Full synCat>           = 23342
}

		/
		<circumPfx synCat>        = 20333
		<circumPfx envCat>         = 20333
		<circumSfx synCat>        = 20333
		<circumSfx envCat>         = 20333
{
	  
		<Full synCat>           = 20333 /
		<Full synCat>           = 20334 /
		<Full synCat>           = 20335
}

		/
		<circumPfx synCat>        = 22963
		<circumPfx envCat>         = 22963
		<circumSfx synCat>        = 22963
		<circumSfx envCat>         = 22963
{
	  
		<Full synCat>           = 22963 /
		<Full synCat>           = 22964 /
		<Full synCat>           = 23053
}

  }
	| (Note: we do not allow for a derivational circumfix to attach to a Full in order to produce a partial - that would be an error.)
rule {Unanalyzed circumfix on a fully analyzed stem where second is an infix}
 Partial = circumPfx_1 circumPfx_2 Full
								 | percolation
	<Partial inflected> = <Full inflected>
	<Partial synCat> = <Full synCat>
								 | constraints
								 | rightmost "prefix" must be an infix
	<circumPfx_2> == [morphType : infix]
	  
	  {
	  
		<Full synCat>           = <circumPfx_1 synCat>
		<Full synCat>           = <circumPfx_1 envCat>
		<Full synCat>           = <circumPfx_2 synCat>
		<Full synCat>           = <circumPfx_2 envCat>
		/
		<circumPfx_1 synCat>        = 256
		<circumPfx_1 envCat>         = 256
		<circumPfx_2 synCat>        = 256
		<circumPfx_2 envCat>         = 256
{
	  
		<Full synCat>           = 256 /
		<Full synCat>           = 13146 /
		<Full synCat>           = 13147 /
		<Full synCat>           = 13148 /
		<Full synCat>           = 13339 /
		<Full synCat>           = 13681 /
		<Full synCat>           = 24234 /
		<Full synCat>           = 24235 /
		<Full synCat>           = 24236
}

		/
		<circumPfx_1 synCat>        = 24234
		<circumPfx_1 envCat>         = 24234
		<circumPfx_2 synCat>        = 24234
		<circumPfx_2 envCat>         = 24234
{
	  
		<Full synCat>           = 24234 /
		<Full synCat>           = 24235 /
		<Full synCat>           = 24236
}

		/
		<circumPfx_1 synCat>        = 258
		<circumPfx_1 envCat>         = 258
		<circumPfx_2 synCat>        = 258
		<circumPfx_2 envCat>         = 258
{
	  
		<Full synCat>           = 258 /
		<Full synCat>           = 16929 /
		<Full synCat>           = 16930 /
		<Full synCat>           = 22932
}

		/
		<circumPfx_1 synCat>        = 13605
		<circumPfx_1 envCat>         = 13605
		<circumPfx_2 synCat>        = 13605
		<circumPfx_2 envCat>         = 13605
{
	  
		<Full synCat>           = 13605 /
		<Full synCat>           = 13683
}

		/
		<circumPfx_1 synCat>        = 13696
		<circumPfx_1 envCat>         = 13696
		<circumPfx_2 synCat>        = 13696
		<circumPfx_2 envCat>         = 13696
{
	  
		<Full synCat>           = 13696 /
		<Full synCat>           = 13697 /
		<Full synCat>           = 13698
}

		/
		<circumPfx_1 synCat>        = 13744
		<circumPfx_1 envCat>         = 13744
		<circumPfx_2 synCat>        = 13744
		<circumPfx_2 envCat>         = 13744
{
	  
		<Full synCat>           = 13744 /
		<Full synCat>           = 13765 /
		<Full synCat>           = 13766 /
		<Full synCat>           = 23342
}

		/
		<circumPfx_1 synCat>        = 13765
		<circumPfx_1 envCat>         = 13765
		<circumPfx_2 synCat>        = 13765
		<circumPfx_2 envCat>         = 13765
{
	  
		<Full synCat>           = 13765 /
		<Full synCat>           = 13766 /
		<Full synCat>           = 23342
}

		/
		<circumPfx_1 synCat>        = 20333
		<circumPfx_1 envCat>         = 20333
		<circumPfx_2 synCat>        = 20333
		<circumPfx_2 envCat>         = 20333
{
	  
		<Full synCat>           = 20333 /
		<Full synCat>           = 20334 /
		<Full synCat>           = 20335
}

		/
		<circumPfx_1 synCat>        = 22963
		<circumPfx_1 envCat>         = 22963
		<circumPfx_2 synCat>        = 22963
		<circumPfx_2 envCat>         = 22963
{
	  
		<Full synCat>           = 22963 /
		<Full synCat>           = 22964 /
		<Full synCat>           = 23053
}

	  }
	  | (Note: we do not allow for a derivational circumfix to attach to a Full in order to produce a partial - that would be an error.)

			  | affixes on partial with non-final inflection
rule {One or more unanalyzed prefixes and suffixes on partial}
  Partial_1 = Prefs Partial_2 Suffs
								| percolation
  <Partial_1 inflected> = <Partial_2 inflected>
  <Partial_1 synCat> = <Partial_2 synCat>
								| constraints
  <Partial_2> == ~[synCat:unknown]

rule {One or more unanalyzed prefixes on partial}
  Partial_1 = Prefs Partial_2
								| percolation
  <Partial_1 inflected> = <Partial_2 inflected>
  <Partial_1 synCat> = <Partial_2 synCat>
								| constraints
  <Partial_2> == ~[synCat:unknown]

rule {One or more unanalyzed suffixes on partial}
  Partial_1 =          Partial_2 Suffs
								| percolation
  <Partial_1 inflected> = <Partial_2 inflected>
  <Partial_1 synCat> = <Partial_2 synCat>
								| constraints
  <Partial_2> == ~[synCat:unknown]

rule {Unanalyzed circumfix on partial}
  Partial_1 = circumPfx Partial_2 circumSfx
								| percolation
  <Partial_1 inflected> = <Partial_2 inflected>
  <Partial_1 synCat> = <Partial_2 synCat>
								| constraints
  <Partial_2> == ~[synCat:unknown]
rule {Unanalyzed circumfix on partial, where second part is an infix}
  Partial_1 = circumPfx_1 circumPfx_2 Partial_2
								| percolation
  <Partial_1 inflected> = <Partial_2 inflected>
  <Partial_1 synCat> = <Partial_2 synCat>
								| constraints
  <Partial_2> == ~[synCat:unknown]
								| rightmost "prefix" must be an infix
  <circumPfx_2> == [morphType : infix]

rule {Derivational circumfix on partial}
  Partial_1 = derivCircumPfx Partial_2 derivCircumSfx
								| percolation
  <Partial_1 inflected> = <Partial_2 inflected>
  <Partial_1 synCat> = <Partial_2 synCat>
								| constraints
  <Partial_2> == ~[synCat:unknown]
rule {Derivational circumfix on partial, where second part is an infix}
  Partial_1 = derivCircumPfx_1 derivCircumPfx_2 Partial_2
								| percolation
  <Partial_1 inflected> = <Partial_2 inflected>
  <Partial_1 synCat> = <Partial_2 synCat>
								| constraints
  <Partial_2> == ~[synCat:unknown]
								| rightmost "prefix" must be an infix
   <derivCircumPfx_2> == [morphType : infix]

rule {An unanalyzed prefix added to a sequence of prefixes}
  Prefixes_1 = prefix (Prefixes_2)
								| percolation
  <Prefixes_1 synCat> = <prefix fromCat>  | keep the same category
								| constraints
  
  {
  
		<Prefixes_2 synCat>           = <prefix fromCat>
		/
		<prefix fromCat>        = 256
{
	  
		<Prefixes_2 synCat>           = 256 /
		<Prefixes_2 synCat>           = 13146 /
		<Prefixes_2 synCat>           = 13147 /
		<Prefixes_2 synCat>           = 13148 /
		<Prefixes_2 synCat>           = 13339 /
		<Prefixes_2 synCat>           = 13681 /
		<Prefixes_2 synCat>           = 24234 /
		<Prefixes_2 synCat>           = 24235 /
		<Prefixes_2 synCat>           = 24236
}

		/
		<prefix fromCat>        = 24234
{
	  
		<Prefixes_2 synCat>           = 24234 /
		<Prefixes_2 synCat>           = 24235 /
		<Prefixes_2 synCat>           = 24236
}

		/
		<prefix fromCat>        = 258
{
	  
		<Prefixes_2 synCat>           = 258 /
		<Prefixes_2 synCat>           = 16929 /
		<Prefixes_2 synCat>           = 16930 /
		<Prefixes_2 synCat>           = 22932
}

		/
		<prefix fromCat>        = 13605
{
	  
		<Prefixes_2 synCat>           = 13605 /
		<Prefixes_2 synCat>           = 13683
}

		/
		<prefix fromCat>        = 13696
{
	  
		<Prefixes_2 synCat>           = 13696 /
		<Prefixes_2 synCat>           = 13697 /
		<Prefixes_2 synCat>           = 13698
}

		/
		<prefix fromCat>        = 13744
{
	  
		<Prefixes_2 synCat>           = 13744 /
		<Prefixes_2 synCat>           = 13765 /
		<Prefixes_2 synCat>           = 13766 /
		<Prefixes_2 synCat>           = 23342
}

		/
		<prefix fromCat>        = 13765
{
	  
		<Prefixes_2 synCat>           = 13765 /
		<Prefixes_2 synCat>           = 13766 /
		<Prefixes_2 synCat>           = 23342
}

		/
		<prefix fromCat>        = 20333
{
	  
		<Prefixes_2 synCat>           = 20333 /
		<Prefixes_2 synCat>           = 20334 /
		<Prefixes_2 synCat>           = 20335
}

		/
		<prefix fromCat>        = 22963
{
	  
		<Prefixes_2 synCat>           = 22963 /
		<Prefixes_2 synCat>           = 22964 /
		<Prefixes_2 synCat>           = 23053
}

  }

rule {A derivational prefix added to a sequence of prefixes; the derivational cannot be next to the stem}
  Prefixes_1 = derivPfx Prefixes_2
								| percolation
  <Prefixes_1 synCat> = <derivPfx toCat>
								| constraints
  {
  
		<Prefixes_2 synCat>           = <derivPfx fromCat>
		/
		<derivPfx fromCat>        = 256
{
	  
		<Prefixes_2 synCat>           = 256 /
		<Prefixes_2 synCat>           = 13146 /
		<Prefixes_2 synCat>           = 13147 /
		<Prefixes_2 synCat>           = 13148 /
		<Prefixes_2 synCat>           = 13339 /
		<Prefixes_2 synCat>           = 13681 /
		<Prefixes_2 synCat>           = 24234 /
		<Prefixes_2 synCat>           = 24235 /
		<Prefixes_2 synCat>           = 24236
}

		/
		<derivPfx fromCat>        = 24234
{
	  
		<Prefixes_2 synCat>           = 24234 /
		<Prefixes_2 synCat>           = 24235 /
		<Prefixes_2 synCat>           = 24236
}

		/
		<derivPfx fromCat>        = 258
{
	  
		<Prefixes_2 synCat>           = 258 /
		<Prefixes_2 synCat>           = 16929 /
		<Prefixes_2 synCat>           = 16930 /
		<Prefixes_2 synCat>           = 22932
}

		/
		<derivPfx fromCat>        = 13605
{
	  
		<Prefixes_2 synCat>           = 13605 /
		<Prefixes_2 synCat>           = 13683
}

		/
		<derivPfx fromCat>        = 13696
{
	  
		<Prefixes_2 synCat>           = 13696 /
		<Prefixes_2 synCat>           = 13697 /
		<Prefixes_2 synCat>           = 13698
}

		/
		<derivPfx fromCat>        = 13744
{
	  
		<Prefixes_2 synCat>           = 13744 /
		<Prefixes_2 synCat>           = 13765 /
		<Prefixes_2 synCat>           = 13766 /
		<Prefixes_2 synCat>           = 23342
}

		/
		<derivPfx fromCat>        = 13765
{
	  
		<Prefixes_2 synCat>           = 13765 /
		<Prefixes_2 synCat>           = 13766 /
		<Prefixes_2 synCat>           = 23342
}

		/
		<derivPfx fromCat>        = 20333
{
	  
		<Prefixes_2 synCat>           = 20333 /
		<Prefixes_2 synCat>           = 20334 /
		<Prefixes_2 synCat>           = 20335
}

		/
		<derivPfx fromCat>        = 22963
{
	  
		<Prefixes_2 synCat>           = 22963 /
		<Prefixes_2 synCat>           = 22964 /
		<Prefixes_2 synCat>           = 23053
}

  }

rule {A derivational prefix added to a partial analysis}
Partial_1 = derivPfx Partial_2
								| percolation
<Partial_1 synCat> = <derivPfx toCat>
								| constraints
{
  
		<Partial_2 synCat>           = <derivPfx fromCat>
		<Partial_2 synCat>           = <derivPfx envCat>
		/
		<derivPfx fromCat>        = 256
		<derivPfx envCat>         = 256
{
	  
		<Partial_2 synCat>           = 256 /
		<Partial_2 synCat>           = 13146 /
		<Partial_2 synCat>           = 13147 /
		<Partial_2 synCat>           = 13148 /
		<Partial_2 synCat>           = 13339 /
		<Partial_2 synCat>           = 13681 /
		<Partial_2 synCat>           = 24234 /
		<Partial_2 synCat>           = 24235 /
		<Partial_2 synCat>           = 24236
}

		/
		<derivPfx fromCat>        = 24234
		<derivPfx envCat>         = 24234
{
	  
		<Partial_2 synCat>           = 24234 /
		<Partial_2 synCat>           = 24235 /
		<Partial_2 synCat>           = 24236
}

		/
		<derivPfx fromCat>        = 258
		<derivPfx envCat>         = 258
{
	  
		<Partial_2 synCat>           = 258 /
		<Partial_2 synCat>           = 16929 /
		<Partial_2 synCat>           = 16930 /
		<Partial_2 synCat>           = 22932
}

		/
		<derivPfx fromCat>        = 13605
		<derivPfx envCat>         = 13605
{
	  
		<Partial_2 synCat>           = 13605 /
		<Partial_2 synCat>           = 13683
}

		/
		<derivPfx fromCat>        = 13696
		<derivPfx envCat>         = 13696
{
	  
		<Partial_2 synCat>           = 13696 /
		<Partial_2 synCat>           = 13697 /
		<Partial_2 synCat>           = 13698
}

		/
		<derivPfx fromCat>        = 13744
		<derivPfx envCat>         = 13744
{
	  
		<Partial_2 synCat>           = 13744 /
		<Partial_2 synCat>           = 13765 /
		<Partial_2 synCat>           = 13766 /
		<Partial_2 synCat>           = 23342
}

		/
		<derivPfx fromCat>        = 13765
		<derivPfx envCat>         = 13765
{
	  
		<Partial_2 synCat>           = 13765 /
		<Partial_2 synCat>           = 13766 /
		<Partial_2 synCat>           = 23342
}

		/
		<derivPfx fromCat>        = 20333
		<derivPfx envCat>         = 20333
{
	  
		<Partial_2 synCat>           = 20333 /
		<Partial_2 synCat>           = 20334 /
		<Partial_2 synCat>           = 20335
}

		/
		<derivPfx fromCat>        = 22963
		<derivPfx envCat>         = 22963
{
	  
		<Partial_2 synCat>           = 22963 /
		<Partial_2 synCat>           = 22964 /
		<Partial_2 synCat>           = 23053
}

  }

rule {An unanalyzed suffix added to a sequence of suffixes}
  Suffixes_1 = (Suffixes_2) suffix
								| percolation
  <Suffixes_1 synCat> = <suffix fromCat>  | keep the same category
								| constraints
  
  {
  
		<Suffixes_2 synCat>           = <suffix fromCat>
		/
		<suffix fromCat>        = 256
{
	  
		<Suffixes_2 synCat>           = 256 /
		<Suffixes_2 synCat>           = 13146 /
		<Suffixes_2 synCat>           = 13147 /
		<Suffixes_2 synCat>           = 13148 /
		<Suffixes_2 synCat>           = 13339 /
		<Suffixes_2 synCat>           = 13681 /
		<Suffixes_2 synCat>           = 24234 /
		<Suffixes_2 synCat>           = 24235 /
		<Suffixes_2 synCat>           = 24236
}

		/
		<suffix fromCat>        = 24234
{
	  
		<Suffixes_2 synCat>           = 24234 /
		<Suffixes_2 synCat>           = 24235 /
		<Suffixes_2 synCat>           = 24236
}

		/
		<suffix fromCat>        = 258
{
	  
		<Suffixes_2 synCat>           = 258 /
		<Suffixes_2 synCat>           = 16929 /
		<Suffixes_2 synCat>           = 16930 /
		<Suffixes_2 synCat>           = 22932
}

		/
		<suffix fromCat>        = 13605
{
	  
		<Suffixes_2 synCat>           = 13605 /
		<Suffixes_2 synCat>           = 13683
}

		/
		<suffix fromCat>        = 13696
{
	  
		<Suffixes_2 synCat>           = 13696 /
		<Suffixes_2 synCat>           = 13697 /
		<Suffixes_2 synCat>           = 13698
}

		/
		<suffix fromCat>        = 13744
{
	  
		<Suffixes_2 synCat>           = 13744 /
		<Suffixes_2 synCat>           = 13765 /
		<Suffixes_2 synCat>           = 13766 /
		<Suffixes_2 synCat>           = 23342
}

		/
		<suffix fromCat>        = 13765
{
	  
		<Suffixes_2 synCat>           = 13765 /
		<Suffixes_2 synCat>           = 13766 /
		<Suffixes_2 synCat>           = 23342
}

		/
		<suffix fromCat>        = 20333
{
	  
		<Suffixes_2 synCat>           = 20333 /
		<Suffixes_2 synCat>           = 20334 /
		<Suffixes_2 synCat>           = 20335
}

		/
		<suffix fromCat>        = 22963
{
	  
		<Suffixes_2 synCat>           = 22963 /
		<Suffixes_2 synCat>           = 22964 /
		<Suffixes_2 synCat>           = 23053
}

  }

rule {A derivational suffix added to a sequence of suffixes; the derivational cannot be next to the stem}
  Suffixes_1 = Suffixes_2 derivSfx
								| percolation
  <Suffixes_1 synCat> = <derivSfx toCat>
								| constraints
  {
  
		<Suffixes_2 synCat>           = <derivSfx fromCat>
		/
		<derivSfx fromCat>        = 256
{
	  
		<Suffixes_2 synCat>           = 256 /
		<Suffixes_2 synCat>           = 13146 /
		<Suffixes_2 synCat>           = 13147 /
		<Suffixes_2 synCat>           = 13148 /
		<Suffixes_2 synCat>           = 13339 /
		<Suffixes_2 synCat>           = 13681 /
		<Suffixes_2 synCat>           = 24234 /
		<Suffixes_2 synCat>           = 24235 /
		<Suffixes_2 synCat>           = 24236
}

		/
		<derivSfx fromCat>        = 24234
{
	  
		<Suffixes_2 synCat>           = 24234 /
		<Suffixes_2 synCat>           = 24235 /
		<Suffixes_2 synCat>           = 24236
}

		/
		<derivSfx fromCat>        = 258
{
	  
		<Suffixes_2 synCat>           = 258 /
		<Suffixes_2 synCat>           = 16929 /
		<Suffixes_2 synCat>           = 16930 /
		<Suffixes_2 synCat>           = 22932
}

		/
		<derivSfx fromCat>        = 13605
{
	  
		<Suffixes_2 synCat>           = 13605 /
		<Suffixes_2 synCat>           = 13683
}

		/
		<derivSfx fromCat>        = 13696
{
	  
		<Suffixes_2 synCat>           = 13696 /
		<Suffixes_2 synCat>           = 13697 /
		<Suffixes_2 synCat>           = 13698
}

		/
		<derivSfx fromCat>        = 13744
{
	  
		<Suffixes_2 synCat>           = 13744 /
		<Suffixes_2 synCat>           = 13765 /
		<Suffixes_2 synCat>           = 13766 /
		<Suffixes_2 synCat>           = 23342
}

		/
		<derivSfx fromCat>        = 13765
{
	  
		<Suffixes_2 synCat>           = 13765 /
		<Suffixes_2 synCat>           = 13766 /
		<Suffixes_2 synCat>           = 23342
}

		/
		<derivSfx fromCat>        = 20333
{
	  
		<Suffixes_2 synCat>           = 20333 /
		<Suffixes_2 synCat>           = 20334 /
		<Suffixes_2 synCat>           = 20335
}

		/
		<derivSfx fromCat>        = 22963
{
	  
		<Suffixes_2 synCat>           = 22963 /
		<Suffixes_2 synCat>           = 22964 /
		<Suffixes_2 synCat>           = 23053
}

  }

rule {A derivational suffix added to a partial analysis}
Partial_1 = Partial_2 derivSfx
								| percolation
<Partial_1 synCat> = <derivSfx toCat>
								| constraints
{
  
		<Partial_2 synCat>           = <derivSfx fromCat>
		<Partial_2 synCat>           = <derivSfx envCat>
		/
		<derivSfx fromCat>        = 256
		<derivSfx envCat>         = 256
{
	  
		<Partial_2 synCat>           = 256 /
		<Partial_2 synCat>           = 13146 /
		<Partial_2 synCat>           = 13147 /
		<Partial_2 synCat>           = 13148 /
		<Partial_2 synCat>           = 13339 /
		<Partial_2 synCat>           = 13681 /
		<Partial_2 synCat>           = 24234 /
		<Partial_2 synCat>           = 24235 /
		<Partial_2 synCat>           = 24236
}

		/
		<derivSfx fromCat>        = 24234
		<derivSfx envCat>         = 24234
{
	  
		<Partial_2 synCat>           = 24234 /
		<Partial_2 synCat>           = 24235 /
		<Partial_2 synCat>           = 24236
}

		/
		<derivSfx fromCat>        = 258
		<derivSfx envCat>         = 258
{
	  
		<Partial_2 synCat>           = 258 /
		<Partial_2 synCat>           = 16929 /
		<Partial_2 synCat>           = 16930 /
		<Partial_2 synCat>           = 22932
}

		/
		<derivSfx fromCat>        = 13605
		<derivSfx envCat>         = 13605
{
	  
		<Partial_2 synCat>           = 13605 /
		<Partial_2 synCat>           = 13683
}

		/
		<derivSfx fromCat>        = 13696
		<derivSfx envCat>         = 13696
{
	  
		<Partial_2 synCat>           = 13696 /
		<Partial_2 synCat>           = 13697 /
		<Partial_2 synCat>           = 13698
}

		/
		<derivSfx fromCat>        = 13744
		<derivSfx envCat>         = 13744
{
	  
		<Partial_2 synCat>           = 13744 /
		<Partial_2 synCat>           = 13765 /
		<Partial_2 synCat>           = 13766 /
		<Partial_2 synCat>           = 23342
}

		/
		<derivSfx fromCat>        = 13765
		<derivSfx envCat>         = 13765
{
	  
		<Partial_2 synCat>           = 13765 /
		<Partial_2 synCat>           = 13766 /
		<Partial_2 synCat>           = 23342
}

		/
		<derivSfx fromCat>        = 20333
		<derivSfx envCat>         = 20333
{
	  
		<Partial_2 synCat>           = 20333 /
		<Partial_2 synCat>           = 20334 /
		<Partial_2 synCat>           = 20335
}

		/
		<derivSfx fromCat>        = 22963
		<derivSfx envCat>         = 22963
{
	  
		<Partial_2 synCat>           = 22963 /
		<Partial_2 synCat>           = 22964 /
		<Partial_2 synCat>           = 23053
}

  }


rule {Partially analyzed stem that's been inflected with empty template}
	Partial = PartialInflected
								| percolation
	<Partial synCat> = <PartialInflected synCat>
								| constraints
	<Partial synCat> = <PartialInflected synCat>
	<Partial morphoSyntax> = <PartialInflected morphoSyntax>

	<Partial inflected> = +
	<PartialInflected inflected> = +

	
rule {Partially analyzed stem with inflectional template  13149}
		Partial_1 =   Partial_2 13150_0  :
														 | percolation
  <Partial_1 synCat>       = <Partial_2 synCat>
														 | constraints
  <Partial_2 synCat>       = 13146 

  <Partial_1 morphoSyntax>    = <13150_0 morphoSyntax>
														 | constraint
  <Partial_1 inflected> = +
  <Partial_2 inflected> = -
		
rule {Partially analyzed stem with inflectional template  13166}
		Partial_1 =   13205_0 Partial_2 (13303_0) (13196_1)  :
														 | percolation
  <Partial_1 synCat>       = <Partial_2 synCat>
														 | constraints
  <Partial_2 synCat>       = 13146 

  <Partial_1 morphoSyntax>    = <13205_0 morphoSyntax>
  <Partial_1 morphoSyntax>    = <13303_0 morphoSyntax>
  <Partial_1 morphoSyntax>    = <13196_1 morphoSyntax>
														 | constraint
  <Partial_1 inflected> = +
  <Partial_2 inflected> = -
		
rule {Partially analyzed stem with inflectional template  17101}
		Partial_1 =   17102_0 Partial_2 13150_0  :
														 | percolation
  <Partial_1 synCat>       = <Partial_2 synCat>
														 | constraints
  <Partial_2 synCat>       = 13146 

  <Partial_1 morphoSyntax>    = <17102_0 morphoSyntax>
  <Partial_1 morphoSyntax>    = <13150_0 morphoSyntax>
														 | constraint
  <Partial_1 inflected> = +
  <Partial_2 inflected> = -
		
rule {Partially analyzed stem with inflectional template  17117}
		Partial_1 =   17102_0 13205_1 Partial_2 (13303_0) (13196_1)  :
														 | percolation
  <Partial_1 synCat>       = <Partial_2 synCat>
														 | constraints
  <Partial_2 synCat>       = 13146 

  <Partial_1 morphoSyntax>    = <17102_0 morphoSyntax>
  <Partial_1 morphoSyntax>    = <13205_1 morphoSyntax>
  <Partial_1 morphoSyntax>    = <13303_0 morphoSyntax>
  <Partial_1 morphoSyntax>    = <13196_1 morphoSyntax>
														 | constraint
  <Partial_1 inflected> = +
  <Partial_2 inflected> = -
		
rule {Partially analyzed stem with inflectional template  13277}
		Partial_1 =   13205_0 Partial_2 (13303_0) (13196_1)  :
														 | percolation
  <Partial_1 synCat>       = <Partial_2 synCat>
														 | constraints
  <Partial_2 synCat>       = 13147 

  <Partial_1 morphoSyntax>    = <13205_0 morphoSyntax>
  <Partial_1 morphoSyntax>    = <13303_0 morphoSyntax>
  <Partial_1 morphoSyntax>    = <13196_1 morphoSyntax>
														 | constraint
  <Partial_1 inflected> = +
  <Partial_2 inflected> = -
		
rule {Partially analyzed stem with inflectional template  17118}
		Partial_1 =   17102_0 13205_1 Partial_2 (13303_0) (13196_1)  :
														 | percolation
  <Partial_1 synCat>       = <Partial_2 synCat>
														 | constraints
  <Partial_2 synCat>       = 13147 

  <Partial_1 morphoSyntax>    = <17102_0 morphoSyntax>
  <Partial_1 morphoSyntax>    = <13205_1 morphoSyntax>
  <Partial_1 morphoSyntax>    = <13303_0 morphoSyntax>
  <Partial_1 morphoSyntax>    = <13196_1 morphoSyntax>
														 | constraint
  <Partial_1 inflected> = +
  <Partial_2 inflected> = -
		
rule {Partially analyzed stem with inflectional template  13278}
		PartialInflected =   Partial (13279_0)  :
														 | percolation
  <PartialInflected synCat>       = <Partial synCat>
														 | constraints
  <Partial synCat>       = 13148 

  <Partial_1 morphoSyntax>    = <13279_0 morphoSyntax>
														 | constraint
  <PartialInflected inflected> = +
  <Partial inflected> = -
		
rule {Partially analyzed stem with inflectional template  13329}
		Partial_1 =   13205_0 Partial_2 (13196_0)  :
														 | percolation
  <Partial_1 synCat>       = <Partial_2 synCat>
														 | constraints
  <Partial_2 synCat>       = 13148 

  <Partial_1 morphoSyntax>    = <13205_0 morphoSyntax>
  <Partial_1 morphoSyntax>    = <13196_0 morphoSyntax>
														 | constraint
  <Partial_1 inflected> = +
  <Partial_2 inflected> = -
		
rule {Partially analyzed stem with inflectional template  17119}
		Partial_1 =   17102_0 13205_1 Partial_2 (13196_0)  :
														 | percolation
  <Partial_1 synCat>       = <Partial_2 synCat>
														 | constraints
  <Partial_2 synCat>       = 13148 

  <Partial_1 morphoSyntax>    = <17102_0 morphoSyntax>
  <Partial_1 morphoSyntax>    = <13205_1 morphoSyntax>
  <Partial_1 morphoSyntax>    = <13196_0 morphoSyntax>
														 | constraint
  <Partial_1 inflected> = +
  <Partial_2 inflected> = -
		
rule {Partially analyzed stem with inflectional template  13340}
		PartialInflected =   Partial (13341_0)  :
														 | percolation
  <PartialInflected synCat>       = <Partial synCat>
														 | constraints
  <Partial synCat>       = 13339 

  <Partial_1 morphoSyntax>    = <13341_0 morphoSyntax>
														 | constraint
  <PartialInflected inflected> = +
  <Partial inflected> = -
		
rule {Partially analyzed stem with inflectional template  17120}
		Partial_1 =   17102_0 Partial_2 (13341_0)  :
														 | percolation
  <Partial_1 synCat>       = <Partial_2 synCat>
														 | constraints
  <Partial_2 synCat>       = 13339 

  <Partial_1 morphoSyntax>    = <17102_0 morphoSyntax>
  <Partial_1 morphoSyntax>    = <13341_0 morphoSyntax>
														 | constraint
  <Partial_1 inflected> = +
  <Partial_2 inflected> = -
		
rule {Partially analyzed stem with inflectional template  16931}
		Partial_1 =   (16932_0) (24689_1) Partial_2 16933_0  :
														 | percolation
  <Partial_1 synCat>       = <Partial_2 synCat>
														 | constraints
  <Partial_2 synCat>       = 16929 

  <Partial_1 morphoSyntax>    = <16932_0 morphoSyntax>
  <Partial_1 morphoSyntax>    = <24689_1 morphoSyntax>
  <Partial_1 morphoSyntax>    = <16933_0 morphoSyntax>
														 | constraint
  <Partial_1 inflected> = +
  <Partial_2 inflected> = -
		
rule {Partially analyzed stem with inflectional template  22719}
		Partial_1 =   (16932_0) (24689_1) Partial_2 22720_0 22008_1  :
														 | percolation
  <Partial_1 synCat>       = <Partial_2 synCat>
														 | constraints
  <Partial_2 synCat>       = 16929 

  <Partial_1 morphoSyntax>    = <16932_0 morphoSyntax>
  <Partial_1 morphoSyntax>    = <24689_1 morphoSyntax>
  <Partial_1 morphoSyntax>    = <22720_0 morphoSyntax>
  <Partial_1 morphoSyntax>    = <22008_1 morphoSyntax>
														 | constraint
  <Partial_1 inflected> = +
  <Partial_2 inflected> = -
		
rule {Partially analyzed stem with inflectional template  20765}
		Partial_1 =   20766_0 (16932_1) (24689_2) Partial_2 22008_0  :
														 | percolation
  <Partial_1 synCat>       = <Partial_2 synCat>
														 | constraints
  <Partial_2 synCat>       = 16929 

  <Partial_1 morphoSyntax>    = <20766_0 morphoSyntax>
  <Partial_1 morphoSyntax>    = <16932_1 morphoSyntax>
  <Partial_1 morphoSyntax>    = <24689_2 morphoSyntax>
  <Partial_1 morphoSyntax>    = <22008_0 morphoSyntax>
														 | constraint
  <Partial_1 inflected> = +
  <Partial_2 inflected> = -
		
rule {Partially analyzed stem with inflectional template  22730}
		Partial_1 =   20766_0 (16932_1) (24689_2) Partial_2 22731_0 16933_1  :
														 | percolation
  <Partial_1 synCat>       = <Partial_2 synCat>
														 | constraints
  <Partial_2 synCat>       = 16929 

  <Partial_1 morphoSyntax>    = <20766_0 morphoSyntax>
  <Partial_1 morphoSyntax>    = <16932_1 morphoSyntax>
  <Partial_1 morphoSyntax>    = <24689_2 morphoSyntax>
  <Partial_1 morphoSyntax>    = <22731_0 morphoSyntax>
  <Partial_1 morphoSyntax>    = <16933_1 morphoSyntax>
														 | constraint
  <Partial_1 inflected> = +
  <Partial_2 inflected> = -
		
rule {Partially analyzed stem with inflectional template  17170}
		Partial_1 =   17164_0 (24689_1) Partial_2 (17165_0)  :
														 | percolation
  <Partial_1 synCat>       = <Partial_2 synCat>
														 | constraints
  <Partial_2 synCat>       = 16929 

  <Partial_1 morphoSyntax>    = <17164_0 morphoSyntax>
  <Partial_1 morphoSyntax>    = <24689_1 morphoSyntax>
  <Partial_1 morphoSyntax>    = <17165_0 morphoSyntax>
														 | constraint
  <Partial_1 inflected> = +
  <Partial_2 inflected> = -
		
rule {Partially analyzed stem with inflectional template  17169}
		Partial_1 =   (17122_0) (24689_1) Partial_2 17142_0  :
														 | percolation
  <Partial_1 synCat>       = <Partial_2 synCat>
														 | constraints
  <Partial_2 synCat>       = 16929 

  <Partial_1 morphoSyntax>    = <17122_0 morphoSyntax>
  <Partial_1 morphoSyntax>    = <24689_1 morphoSyntax>
  <Partial_1 morphoSyntax>    = <17142_0 morphoSyntax>
														 | constraint
  <Partial_1 inflected> = +
  <Partial_2 inflected> = -
		
rule {Partially analyzed stem with inflectional template  17006}
		Partial_1 =   (16932_0) 17007_1 (24689_2) (17053_3) Partial_2 16933_0  :
														 | percolation
  <Partial_1 synCat>       = <Partial_2 synCat>
														 | constraints
  <Partial_2 synCat>       = 16930 

  <Partial_1 morphoSyntax>    = <16932_0 morphoSyntax>
  <Partial_1 morphoSyntax>    = <17007_1 morphoSyntax>
  <Partial_1 morphoSyntax>    = <24689_2 morphoSyntax>
  <Partial_1 morphoSyntax>    = <17053_3 morphoSyntax>
  <Partial_1 morphoSyntax>    = <16933_0 morphoSyntax>
														 | constraint
  <Partial_1 inflected> = +
  <Partial_2 inflected> = -
		
rule {Partially analyzed stem with inflectional template  17060}
		Partial_1 =   17061_0 (24689_1) (17053_2) Partial_2 16933_0  :
														 | percolation
  <Partial_1 synCat>       = <Partial_2 synCat>
														 | constraints
  <Partial_2 synCat>       = 16930 

  <Partial_1 morphoSyntax>    = <17061_0 morphoSyntax>
  <Partial_1 morphoSyntax>    = <24689_1 morphoSyntax>
  <Partial_1 morphoSyntax>    = <17053_2 morphoSyntax>
  <Partial_1 morphoSyntax>    = <16933_0 morphoSyntax>
														 | constraint
  <Partial_1 inflected> = +
  <Partial_2 inflected> = -
		
rule {Partially analyzed stem with inflectional template  22742}
		Partial_1 =   (16932_0) 17007_1 (24689_2) (17053_3) Partial_2 22720_0 22008_1  :
														 | percolation
  <Partial_1 synCat>       = <Partial_2 synCat>
														 | constraints
  <Partial_2 synCat>       = 16930 

  <Partial_1 morphoSyntax>    = <16932_0 morphoSyntax>
  <Partial_1 morphoSyntax>    = <17007_1 morphoSyntax>
  <Partial_1 morphoSyntax>    = <24689_2 morphoSyntax>
  <Partial_1 morphoSyntax>    = <17053_3 morphoSyntax>
  <Partial_1 morphoSyntax>    = <22720_0 morphoSyntax>
  <Partial_1 morphoSyntax>    = <22008_1 morphoSyntax>
														 | constraint
  <Partial_1 inflected> = +
  <Partial_2 inflected> = -
		
rule {Partially analyzed stem with inflectional template  22743}
		Partial_1 =   17061_0 (24689_1) (17053_2) Partial_2 22720_0 22008_1  :
														 | percolation
  <Partial_1 synCat>       = <Partial_2 synCat>
														 | constraints
  <Partial_2 synCat>       = 16930 

  <Partial_1 morphoSyntax>    = <17061_0 morphoSyntax>
  <Partial_1 morphoSyntax>    = <24689_1 morphoSyntax>
  <Partial_1 morphoSyntax>    = <17053_2 morphoSyntax>
  <Partial_1 morphoSyntax>    = <22720_0 morphoSyntax>
  <Partial_1 morphoSyntax>    = <22008_1 morphoSyntax>
														 | constraint
  <Partial_1 inflected> = +
  <Partial_2 inflected> = -
		
rule {Partially analyzed stem with inflectional template  20774}
		Partial_1 =   20766_0 (16932_1) 17007_2 (24689_3) (17053_4) Partial_2 22008_0  :
														 | percolation
  <Partial_1 synCat>       = <Partial_2 synCat>
														 | constraints
  <Partial_2 synCat>       = 16930 

  <Partial_1 morphoSyntax>    = <20766_0 morphoSyntax>
  <Partial_1 morphoSyntax>    = <16932_1 morphoSyntax>
  <Partial_1 morphoSyntax>    = <17007_2 morphoSyntax>
  <Partial_1 morphoSyntax>    = <24689_3 morphoSyntax>
  <Partial_1 morphoSyntax>    = <17053_4 morphoSyntax>
  <Partial_1 morphoSyntax>    = <22008_0 morphoSyntax>
														 | constraint
  <Partial_1 inflected> = +
  <Partial_2 inflected> = -
		
rule {Partially analyzed stem with inflectional template  20775}
		Partial_1 =   20766_0 17061_1 (24689_2) (17053_3) Partial_2 22008_0  :
														 | percolation
  <Partial_1 synCat>       = <Partial_2 synCat>
														 | constraints
  <Partial_2 synCat>       = 16930 

  <Partial_1 morphoSyntax>    = <20766_0 morphoSyntax>
  <Partial_1 morphoSyntax>    = <17061_1 morphoSyntax>
  <Partial_1 morphoSyntax>    = <24689_2 morphoSyntax>
  <Partial_1 morphoSyntax>    = <17053_3 morphoSyntax>
  <Partial_1 morphoSyntax>    = <22008_0 morphoSyntax>
														 | constraint
  <Partial_1 inflected> = +
  <Partial_2 inflected> = -
		
rule {Partially analyzed stem with inflectional template  22744}
		Partial_1 =   20766_0 (16932_1) 17007_2 (24689_3) (17053_4) Partial_2 22731_0 16933_1  :
														 | percolation
  <Partial_1 synCat>       = <Partial_2 synCat>
														 | constraints
  <Partial_2 synCat>       = 16930 

  <Partial_1 morphoSyntax>    = <20766_0 morphoSyntax>
  <Partial_1 morphoSyntax>    = <16932_1 morphoSyntax>
  <Partial_1 morphoSyntax>    = <17007_2 morphoSyntax>
  <Partial_1 morphoSyntax>    = <24689_3 morphoSyntax>
  <Partial_1 morphoSyntax>    = <17053_4 morphoSyntax>
  <Partial_1 morphoSyntax>    = <22731_0 morphoSyntax>
  <Partial_1 morphoSyntax>    = <16933_1 morphoSyntax>
														 | constraint
  <Partial_1 inflected> = +
  <Partial_2 inflected> = -
		
rule {Partially analyzed stem with inflectional template  22745}
		Partial_1 =   20766_0 17061_1 (24689_2) (17053_3) Partial_2 22731_0 16933_1  :
														 | percolation
  <Partial_1 synCat>       = <Partial_2 synCat>
														 | constraints
  <Partial_2 synCat>       = 16930 

  <Partial_1 morphoSyntax>    = <20766_0 morphoSyntax>
  <Partial_1 morphoSyntax>    = <17061_1 morphoSyntax>
  <Partial_1 morphoSyntax>    = <24689_2 morphoSyntax>
  <Partial_1 morphoSyntax>    = <17053_3 morphoSyntax>
  <Partial_1 morphoSyntax>    = <22731_0 morphoSyntax>
  <Partial_1 morphoSyntax>    = <16933_1 morphoSyntax>
														 | constraint
  <Partial_1 inflected> = +
  <Partial_2 inflected> = -
		
rule {Partially analyzed stem with inflectional template  17163}
		Partial_1 =   17164_0 17007_1 (24689_2) (17053_3) Partial_2 (17165_0)  :
														 | percolation
  <Partial_1 synCat>       = <Partial_2 synCat>
														 | constraints
  <Partial_2 synCat>       = 16930 

  <Partial_1 morphoSyntax>    = <17164_0 morphoSyntax>
  <Partial_1 morphoSyntax>    = <17007_1 morphoSyntax>
  <Partial_1 morphoSyntax>    = <24689_2 morphoSyntax>
  <Partial_1 morphoSyntax>    = <17053_3 morphoSyntax>
  <Partial_1 morphoSyntax>    = <17165_0 morphoSyntax>
														 | constraint
  <Partial_1 inflected> = +
  <Partial_2 inflected> = -
		
rule {Partially analyzed stem with inflectional template  17121}
		Partial_1 =   (17122_0) 17007_1 (24689_2) (17053_3) Partial_2 17142_0  :
														 | percolation
  <Partial_1 synCat>       = <Partial_2 synCat>
														 | constraints
  <Partial_2 synCat>       = 16930 

  <Partial_1 morphoSyntax>    = <17122_0 morphoSyntax>
  <Partial_1 morphoSyntax>    = <17007_1 morphoSyntax>
  <Partial_1 morphoSyntax>    = <24689_2 morphoSyntax>
  <Partial_1 morphoSyntax>    = <17053_3 morphoSyntax>
  <Partial_1 morphoSyntax>    = <17142_0 morphoSyntax>
														 | constraint
  <Partial_1 inflected> = +
  <Partial_2 inflected> = -
		
rule {Partially analyzed stem with inflectional template  58164}
		Partial_1 =   20766_0 (16932_1) 17007_2 (24689_3) (17053_4) Partial_2 58165_0 16933_1  :
														 | percolation
  <Partial_1 synCat>       = <Partial_2 synCat>
														 | constraints
  <Partial_2 synCat>       = 16930 

  <Partial_1 morphoSyntax>    = <20766_0 morphoSyntax>
  <Partial_1 morphoSyntax>    = <16932_1 morphoSyntax>
  <Partial_1 morphoSyntax>    = <17007_2 morphoSyntax>
  <Partial_1 morphoSyntax>    = <24689_3 morphoSyntax>
  <Partial_1 morphoSyntax>    = <17053_4 morphoSyntax>
  <Partial_1 morphoSyntax>    = <58165_0 morphoSyntax>
  <Partial_1 morphoSyntax>    = <16933_1 morphoSyntax>
														 | constraint
  <Partial_1 inflected> = +
  <Partial_2 inflected> = -
		
rule {Partially analyzed stem with inflectional template  22935}
		Partial_1 =   (16932_0) 17007_1 (24689_2) (17053_3) (22936_4) Partial_2 16933_0  :
														 | percolation
  <Partial_1 synCat>       = <Partial_2 synCat>
														 | constraints
  <Partial_2 synCat>       = 22932 

  <Partial_1 morphoSyntax>    = <16932_0 morphoSyntax>
  <Partial_1 morphoSyntax>    = <17007_1 morphoSyntax>
  <Partial_1 morphoSyntax>    = <24689_2 morphoSyntax>
  <Partial_1 morphoSyntax>    = <17053_3 morphoSyntax>
  <Partial_1 morphoSyntax>    = <22936_4 morphoSyntax>
  <Partial_1 morphoSyntax>    = <16933_0 morphoSyntax>
														 | constraint
  <Partial_1 inflected> = +
  <Partial_2 inflected> = -
		
rule {Partially analyzed stem with inflectional template  22953}
		Partial_1 =   17061_0 (24689_1) (17053_2) (22936_3) Partial_2 16933_0  :
														 | percolation
  <Partial_1 synCat>       = <Partial_2 synCat>
														 | constraints
  <Partial_2 synCat>       = 22932 

  <Partial_1 morphoSyntax>    = <17061_0 morphoSyntax>
  <Partial_1 morphoSyntax>    = <24689_1 morphoSyntax>
  <Partial_1 morphoSyntax>    = <17053_2 morphoSyntax>
  <Partial_1 morphoSyntax>    = <22936_3 morphoSyntax>
  <Partial_1 morphoSyntax>    = <16933_0 morphoSyntax>
														 | constraint
  <Partial_1 inflected> = +
  <Partial_2 inflected> = -
		
rule {Partially analyzed stem with inflectional template  22954}
		Partial_1 =   (16932_0) 17007_1 (24689_2) (17053_3) (22936_4) Partial_2 22720_0 22008_1  :
														 | percolation
  <Partial_1 synCat>       = <Partial_2 synCat>
														 | constraints
  <Partial_2 synCat>       = 22932 

  <Partial_1 morphoSyntax>    = <16932_0 morphoSyntax>
  <Partial_1 morphoSyntax>    = <17007_1 morphoSyntax>
  <Partial_1 morphoSyntax>    = <24689_2 morphoSyntax>
  <Partial_1 morphoSyntax>    = <17053_3 morphoSyntax>
  <Partial_1 morphoSyntax>    = <22936_4 morphoSyntax>
  <Partial_1 morphoSyntax>    = <22720_0 morphoSyntax>
  <Partial_1 morphoSyntax>    = <22008_1 morphoSyntax>
														 | constraint
  <Partial_1 inflected> = +
  <Partial_2 inflected> = -
		
rule {Partially analyzed stem with inflectional template  22955}
		Partial_1 =   17061_0 (24689_1) (17053_2) (22936_3) Partial_2 22720_0 22008_1  :
														 | percolation
  <Partial_1 synCat>       = <Partial_2 synCat>
														 | constraints
  <Partial_2 synCat>       = 22932 

  <Partial_1 morphoSyntax>    = <17061_0 morphoSyntax>
  <Partial_1 morphoSyntax>    = <24689_1 morphoSyntax>
  <Partial_1 morphoSyntax>    = <17053_2 morphoSyntax>
  <Partial_1 morphoSyntax>    = <22936_3 morphoSyntax>
  <Partial_1 morphoSyntax>    = <22720_0 morphoSyntax>
  <Partial_1 morphoSyntax>    = <22008_1 morphoSyntax>
														 | constraint
  <Partial_1 inflected> = +
  <Partial_2 inflected> = -
		
rule {Partially analyzed stem with inflectional template  22956}
		Partial_1 =   20766_0 (16932_1) 17007_2 (24689_3) (17053_4) (22936_5) Partial_2 22008_0  :
														 | percolation
  <Partial_1 synCat>       = <Partial_2 synCat>
														 | constraints
  <Partial_2 synCat>       = 22932 

  <Partial_1 morphoSyntax>    = <20766_0 morphoSyntax>
  <Partial_1 morphoSyntax>    = <16932_1 morphoSyntax>
  <Partial_1 morphoSyntax>    = <17007_2 morphoSyntax>
  <Partial_1 morphoSyntax>    = <24689_3 morphoSyntax>
  <Partial_1 morphoSyntax>    = <17053_4 morphoSyntax>
  <Partial_1 morphoSyntax>    = <22936_5 morphoSyntax>
  <Partial_1 morphoSyntax>    = <22008_0 morphoSyntax>
														 | constraint
  <Partial_1 inflected> = +
  <Partial_2 inflected> = -
		
rule {Partially analyzed stem with inflectional template  22957}
		Partial_1 =   20766_0 17061_1 (24689_2) (17053_3) (22936_4) Partial_2 22008_0  :
														 | percolation
  <Partial_1 synCat>       = <Partial_2 synCat>
														 | constraints
  <Partial_2 synCat>       = 22932 

  <Partial_1 morphoSyntax>    = <20766_0 morphoSyntax>
  <Partial_1 morphoSyntax>    = <17061_1 morphoSyntax>
  <Partial_1 morphoSyntax>    = <24689_2 morphoSyntax>
  <Partial_1 morphoSyntax>    = <17053_3 morphoSyntax>
  <Partial_1 morphoSyntax>    = <22936_4 morphoSyntax>
  <Partial_1 morphoSyntax>    = <22008_0 morphoSyntax>
														 | constraint
  <Partial_1 inflected> = +
  <Partial_2 inflected> = -
		
rule {Partially analyzed stem with inflectional template  22958}
		Partial_1 =   20766_0 (16932_1) 17007_2 (24689_3) (17053_4) (22936_5) Partial_2 22731_0 16933_1  :
														 | percolation
  <Partial_1 synCat>       = <Partial_2 synCat>
														 | constraints
  <Partial_2 synCat>       = 22932 

  <Partial_1 morphoSyntax>    = <20766_0 morphoSyntax>
  <Partial_1 morphoSyntax>    = <16932_1 morphoSyntax>
  <Partial_1 morphoSyntax>    = <17007_2 morphoSyntax>
  <Partial_1 morphoSyntax>    = <24689_3 morphoSyntax>
  <Partial_1 morphoSyntax>    = <17053_4 morphoSyntax>
  <Partial_1 morphoSyntax>    = <22936_5 morphoSyntax>
  <Partial_1 morphoSyntax>    = <22731_0 morphoSyntax>
  <Partial_1 morphoSyntax>    = <16933_1 morphoSyntax>
														 | constraint
  <Partial_1 inflected> = +
  <Partial_2 inflected> = -
		
rule {Partially analyzed stem with inflectional template  22959}
		Partial_1 =   20766_0 17061_1 (24689_2) (17053_3) (22936_4) Partial_2 22731_0 16933_1  :
														 | percolation
  <Partial_1 synCat>       = <Partial_2 synCat>
														 | constraints
  <Partial_2 synCat>       = 22932 

  <Partial_1 morphoSyntax>    = <20766_0 morphoSyntax>
  <Partial_1 morphoSyntax>    = <17061_1 morphoSyntax>
  <Partial_1 morphoSyntax>    = <24689_2 morphoSyntax>
  <Partial_1 morphoSyntax>    = <17053_3 morphoSyntax>
  <Partial_1 morphoSyntax>    = <22936_4 morphoSyntax>
  <Partial_1 morphoSyntax>    = <22731_0 morphoSyntax>
  <Partial_1 morphoSyntax>    = <16933_1 morphoSyntax>
														 | constraint
  <Partial_1 inflected> = +
  <Partial_2 inflected> = -
		
rule {Partially analyzed stem with inflectional template  22960}
		Partial_1 =   17164_0 17007_1 (24689_2) (17053_3) (22936_4) Partial_2 (17165_0)  :
														 | percolation
  <Partial_1 synCat>       = <Partial_2 synCat>
														 | constraints
  <Partial_2 synCat>       = 22932 

  <Partial_1 morphoSyntax>    = <17164_0 morphoSyntax>
  <Partial_1 morphoSyntax>    = <17007_1 morphoSyntax>
  <Partial_1 morphoSyntax>    = <24689_2 morphoSyntax>
  <Partial_1 morphoSyntax>    = <17053_3 morphoSyntax>
  <Partial_1 morphoSyntax>    = <22936_4 morphoSyntax>
  <Partial_1 morphoSyntax>    = <17165_0 morphoSyntax>
														 | constraint
  <Partial_1 inflected> = +
  <Partial_2 inflected> = -
		
rule {Partially analyzed stem with inflectional template  22962}
		Partial_1 =   (17122_0) 17007_1 (24689_2) (17053_3) (22936_4) Partial_2 17142_0  :
														 | percolation
  <Partial_1 synCat>       = <Partial_2 synCat>
														 | constraints
  <Partial_2 synCat>       = 22932 

  <Partial_1 morphoSyntax>    = <17122_0 morphoSyntax>
  <Partial_1 morphoSyntax>    = <17007_1 morphoSyntax>
  <Partial_1 morphoSyntax>    = <24689_2 morphoSyntax>
  <Partial_1 morphoSyntax>    = <17053_3 morphoSyntax>
  <Partial_1 morphoSyntax>    = <22936_4 morphoSyntax>
  <Partial_1 morphoSyntax>    = <17142_0 morphoSyntax>
														 | constraint
  <Partial_1 inflected> = +
  <Partial_2 inflected> = -
		
rule {Partially analyzed stem with inflectional template  23219}
		PartialInflected =   (23222_0) Partial (23223_0)  :
														 | percolation
  <PartialInflected synCat>       = <Partial synCat>
														 | constraints
  <Partial synCat>       = 19944 

  <Partial_1 morphoSyntax>    = <23222_0 morphoSyntax>
  <Partial_1 morphoSyntax>    = <23223_0 morphoSyntax>
														 | constraint
  <PartialInflected inflected> = +
  <Partial inflected> = -
		
rule {Partially analyzed stem with inflectional template  22965}
		Partial_1 =   22966_0 Partial_2  :
														 | percolation
  <Partial_1 synCat>       = <Partial_2 synCat>
														 | constraints
  <Partial_2 synCat>       = 22964 

  <Partial_1 morphoSyntax>    = <22966_0 morphoSyntax>
														 | constraint
  <Partial_1 inflected> = +
  <Partial_2 inflected> = -
		
| ------------------------------------------------------------
|                TEMPLATES
| ------------------------------------------------------------
Let W be []
Let W/W be []
Let Prt be []
Let Linker be []
Let Proclitic be []
Let Enclitic be []
Let Bound be []

Let ExcpFeat31275Plus  be [exception:[31275:+]]
Let ExcpFeat31275Minus be [exception:[31275:-]]
Let FromExcpFeat31275Plus  be [fromException:[31275:+]]
Let FromExcpFeat31275Minus be [fromException:[31275:-]]

Let ToExcpFeat31275Plus  be [toException:[31275:+ 31278:!- 39912:!- 39915:!- 39918:!- 39930:!- 39936:!- 57399:!- 57429:!- ]]
Let ToExcpFeat31275Minus be [toException:[31275:-]]
Let ExcpFeat31278Plus  be [exception:[31278:+]]
Let ExcpFeat31278Minus be [exception:[31278:-]]
Let FromExcpFeat31278Plus  be [fromException:[31278:+]]
Let FromExcpFeat31278Minus be [fromException:[31278:-]]

Let ToExcpFeat31278Plus  be [toException:[31278:+ 31275:!- 39912:!- 39915:!- 39918:!- 39930:!- 39936:!- 57399:!- 57429:!- ]]
Let ToExcpFeat31278Minus be [toException:[31278:-]]
Let ExcpFeat39912Plus  be [exception:[39912:+]]
Let ExcpFeat39912Minus be [exception:[39912:-]]
Let FromExcpFeat39912Plus  be [fromException:[39912:+]]
Let FromExcpFeat39912Minus be [fromException:[39912:-]]

Let ToExcpFeat39912Plus  be [toException:[39912:+ 31275:!- 31278:!- 39915:!- 39918:!- 39930:!- 39936:!- 57399:!- 57429:!- ]]
Let ToExcpFeat39912Minus be [toException:[39912:-]]
Let ExcpFeat39915Plus  be [exception:[39915:+]]
Let ExcpFeat39915Minus be [exception:[39915:-]]
Let FromExcpFeat39915Plus  be [fromException:[39915:+]]
Let FromExcpFeat39915Minus be [fromException:[39915:-]]

Let ToExcpFeat39915Plus  be [toException:[39915:+ 31275:!- 31278:!- 39912:!- 39918:!- 39930:!- 39936:!- 57399:!- 57429:!- ]]
Let ToExcpFeat39915Minus be [toException:[39915:-]]
Let ExcpFeat39918Plus  be [exception:[39918:+]]
Let ExcpFeat39918Minus be [exception:[39918:-]]
Let FromExcpFeat39918Plus  be [fromException:[39918:+]]
Let FromExcpFeat39918Minus be [fromException:[39918:-]]

Let ToExcpFeat39918Plus  be [toException:[39918:+ 31275:!- 31278:!- 39912:!- 39915:!- 39930:!- 39936:!- 57399:!- 57429:!- ]]
Let ToExcpFeat39918Minus be [toException:[39918:-]]
Let ExcpFeat39930Plus  be [exception:[39930:+]]
Let ExcpFeat39930Minus be [exception:[39930:-]]
Let FromExcpFeat39930Plus  be [fromException:[39930:+]]
Let FromExcpFeat39930Minus be [fromException:[39930:-]]

Let ToExcpFeat39930Plus  be [toException:[39930:+ 31275:!- 31278:!- 39912:!- 39915:!- 39918:!- 39936:!- 57399:!- 57429:!- ]]
Let ToExcpFeat39930Minus be [toException:[39930:-]]
Let ExcpFeat39936Plus  be [exception:[39936:+]]
Let ExcpFeat39936Minus be [exception:[39936:-]]
Let FromExcpFeat39936Plus  be [fromException:[39936:+]]
Let FromExcpFeat39936Minus be [fromException:[39936:-]]

Let ToExcpFeat39936Plus  be [toException:[39936:+ 31275:!- 31278:!- 39912:!- 39915:!- 39918:!- 39930:!- 57399:!- 57429:!- ]]
Let ToExcpFeat39936Minus be [toException:[39936:-]]
Let ExcpFeat57399Plus  be [exception:[57399:+]]
Let ExcpFeat57399Minus be [exception:[57399:-]]
Let FromExcpFeat57399Plus  be [fromException:[57399:+]]
Let FromExcpFeat57399Minus be [fromException:[57399:-]]

Let ToExcpFeat57399Plus  be [toException:[57399:+ 31275:!- 31278:!- 39912:!- 39915:!- 39918:!- 39930:!- 39936:!- 57429:!- ]]
Let ToExcpFeat57399Minus be [toException:[57399:-]]
Let ExcpFeat57429Plus  be [exception:[57429:+]]
Let ExcpFeat57429Minus be [exception:[57429:-]]
Let FromExcpFeat57429Plus  be [fromException:[57429:+]]
Let FromExcpFeat57429Minus be [fromException:[57429:-]]

Let ToExcpFeat57429Plus  be [toException:[57429:+ 31275:!- 31278:!- 39912:!- 39915:!- 39918:!- 39930:!- 39936:!- 57399:!- ]]
Let ToExcpFeat57429Minus be [toException:[57429:-]]
Let DefaultExcpFeatures be [exception:[31275:!- 31278:!- 39912:!- 39915:!- 39918:!- 39930:!- 39936:!- 57399:!- 57429:!- ]]

Let RootPOS0 be [rootCat:unknown] 
Let CliticPOS0 be [rootCat:unknown] 
Let RootPOS255 be [rootCat:255
	requiresInflection : -] [DefaultExcpFeatures]
Let MSEnvPOS255 be {[envCat:255]}
Let FromPOS255 be [fromCat:255]

Let ToPOS255 be [toCat:255
	requiresInflection : -]
Let CliticPOS255 be {[rootCat:255]}
Let CFP255 be {[fromCat:255]}
Let RootPOS256 be [rootCat:256
	requiresInflection : -] [DefaultExcpFeatures]
Let MSEnvPOS256 be {[envCat:256][envCat:13146][envCat:13147][envCat:13148][envCat:13339][envCat:13681][envCat:24234][envCat:24235][envCat:24236]}
Let FromPOS256 be [fromCat:256]

Let ToPOS256 be [toCat:256
	requiresInflection : -]
Let CliticPOS256 be {[rootCat:256][rootCat:13146][rootCat:13147][rootCat:13148][rootCat:13339][rootCat:13681][rootCat:24234][rootCat:24235][rootCat:24236]}
Let CFP256 be {[fromCat:256][fromCat:13146][fromCat:13147][fromCat:13148][fromCat:13339][fromCat:13681][fromCat:24234][fromCat:24235][fromCat:24236]}
Let RootPOS13146 be [rootCat:13146
	requiresInflection : +] [DefaultExcpFeatures]
Let MSEnvPOS13146 be {[envCat:13146]}
Let FromPOS13146 be [fromCat:13146]

Let ToPOS13146 be [toCat:13146
	requiresInflection : +]
Let CliticPOS13146 be {[rootCat:13146]}
Let CFP13146 be {[fromCat:13146]}
Let RootPOS13147 be [rootCat:13147
	requiresInflection : +] [DefaultExcpFeatures]
Let MSEnvPOS13147 be {[envCat:13147]}
Let FromPOS13147 be [fromCat:13147]

Let ToPOS13147 be [toCat:13147
	requiresInflection : +]
Let CliticPOS13147 be {[rootCat:13147]}
Let CFP13147 be {[fromCat:13147]}
Let RootPOS13148 be [rootCat:13148
	requiresInflection : +] [DefaultExcpFeatures]
Let MSEnvPOS13148 be {[envCat:13148]}
Let FromPOS13148 be [fromCat:13148]

Let ToPOS13148 be [toCat:13148
	requiresInflection : +]
Let CliticPOS13148 be {[rootCat:13148]}
Let CFP13148 be {[fromCat:13148]}
Let RootPOS13339 be [rootCat:13339
	requiresInflection : +] [DefaultExcpFeatures]
Let MSEnvPOS13339 be {[envCat:13339]}
Let FromPOS13339 be [fromCat:13339]

Let ToPOS13339 be [toCat:13339
	requiresInflection : +]
Let CliticPOS13339 be {[rootCat:13339]}
Let CFP13339 be {[fromCat:13339]}
Let RootPOS13681 be [rootCat:13681
	requiresInflection : -] [DefaultExcpFeatures]
Let MSEnvPOS13681 be {[envCat:13681]}
Let FromPOS13681 be [fromCat:13681]

Let ToPOS13681 be [toCat:13681
	requiresInflection : -]
Let CliticPOS13681 be {[rootCat:13681]}
Let CFP13681 be {[fromCat:13681]}
Let RootPOS24234 be [rootCat:24234
	requiresInflection : -] [DefaultExcpFeatures]
Let MSEnvPOS24234 be {[envCat:24234][envCat:24235][envCat:24236]}
Let FromPOS24234 be [fromCat:24234]

Let ToPOS24234 be [toCat:24234
	requiresInflection : -]
Let CliticPOS24234 be {[rootCat:24234][rootCat:24235][rootCat:24236]}
Let CFP24234 be {[fromCat:24234][fromCat:24235][fromCat:24236]}
Let RootPOS24235 be [rootCat:24235
	requiresInflection : -] [DefaultExcpFeatures]
Let MSEnvPOS24235 be {[envCat:24235]}
Let FromPOS24235 be [fromCat:24235]

Let ToPOS24235 be [toCat:24235
	requiresInflection : -]
Let CliticPOS24235 be {[rootCat:24235]}
Let CFP24235 be {[fromCat:24235]}
Let RootPOS24236 be [rootCat:24236
	requiresInflection : -] [DefaultExcpFeatures]
Let MSEnvPOS24236 be {[envCat:24236]}
Let FromPOS24236 be [fromCat:24236]

Let ToPOS24236 be [toCat:24236
	requiresInflection : -]
Let CliticPOS24236 be {[rootCat:24236]}
Let CFP24236 be {[fromCat:24236]}
Let RootPOS257 be [rootCat:257
	requiresInflection : -] [DefaultExcpFeatures]
Let MSEnvPOS257 be {[envCat:257]}
Let FromPOS257 be [fromCat:257]

Let ToPOS257 be [toCat:257
	requiresInflection : -]
Let CliticPOS257 be {[rootCat:257]}
Let CFP257 be {[fromCat:257]}
Let RootPOS258 be [rootCat:258
	requiresInflection : -] [DefaultExcpFeatures]
Let MSEnvPOS258 be {[envCat:258][envCat:16929][envCat:16930][envCat:22932]}
Let FromPOS258 be [fromCat:258]

Let ToPOS258 be [toCat:258
	requiresInflection : -]
Let CliticPOS258 be {[rootCat:258][rootCat:16929][rootCat:16930][rootCat:22932]}
Let CFP258 be {[fromCat:258][fromCat:16929][fromCat:16930][fromCat:22932]}
Let StemName66683 be [stemName:66683]
Let StemNameAffix66683 be []
Let StemName66696 be [stemName:66696]
Let StemNameAffix66696 be []
Let StemName66698 be [stemName:66698]
Let StemNameAffix66698 be []
Let RootPOS16929 be [rootCat:16929
	requiresInflection : +] [DefaultExcpFeatures]
Let MSEnvPOS16929 be {[envCat:16929]}
Let FromPOS16929 be [fromCat:16929]

Let ToPOS16929 be [toCat:16929
	requiresInflection : +]
Let CliticPOS16929 be {[rootCat:16929]}
Let CFP16929 be {[fromCat:16929]}
Let RootPOS16930 be [rootCat:16930
	requiresInflection : +] [DefaultExcpFeatures]
Let MSEnvPOS16930 be {[envCat:16930]}
Let FromPOS16930 be [fromCat:16930]

Let ToPOS16930 be [toCat:16930
	requiresInflection : +]
Let CliticPOS16930 be {[rootCat:16930]}
Let CFP16930 be {[fromCat:16930]}
Let RootPOS22932 be [rootCat:22932
	requiresInflection : +] [DefaultExcpFeatures]
Let MSEnvPOS22932 be {[envCat:22932]}
Let FromPOS22932 be [fromCat:22932]

Let ToPOS22932 be [toCat:22932
	requiresInflection : +]
Let CliticPOS22932 be {[rootCat:22932]}
Let CFP22932 be {[fromCat:22932]}
Let RootPOS13605 be [rootCat:13605
	requiresInflection : -] [DefaultExcpFeatures]
Let MSEnvPOS13605 be {[envCat:13605][envCat:13683]}
Let FromPOS13605 be [fromCat:13605]

Let ToPOS13605 be [toCat:13605
	requiresInflection : -]
Let CliticPOS13605 be {[rootCat:13605][rootCat:13683]}
Let CFP13605 be {[fromCat:13605][fromCat:13683]}
Let RootPOS13683 be [rootCat:13683
	requiresInflection : -] [DefaultExcpFeatures]
Let MSEnvPOS13683 be {[envCat:13683]}
Let FromPOS13683 be [fromCat:13683]

Let ToPOS13683 be [toCat:13683
	requiresInflection : -]
Let CliticPOS13683 be {[rootCat:13683]}
Let CFP13683 be {[fromCat:13683]}
Let RootPOS13696 be [rootCat:13696
	requiresInflection : -] [DefaultExcpFeatures]
Let MSEnvPOS13696 be {[envCat:13696][envCat:13697][envCat:13698]}
Let FromPOS13696 be [fromCat:13696]

Let ToPOS13696 be [toCat:13696
	requiresInflection : -]
Let CliticPOS13696 be {[rootCat:13696][rootCat:13697][rootCat:13698]}
Let CFP13696 be {[fromCat:13696][fromCat:13697][fromCat:13698]}
Let RootPOS13697 be [rootCat:13697
	requiresInflection : -] [DefaultExcpFeatures]
Let MSEnvPOS13697 be {[envCat:13697]}
Let FromPOS13697 be [fromCat:13697]

Let ToPOS13697 be [toCat:13697
	requiresInflection : -]
Let CliticPOS13697 be {[rootCat:13697]}
Let CFP13697 be {[fromCat:13697]}
Let RootPOS13698 be [rootCat:13698
	requiresInflection : -] [DefaultExcpFeatures]
Let MSEnvPOS13698 be {[envCat:13698]}
Let FromPOS13698 be [fromCat:13698]

Let ToPOS13698 be [toCat:13698
	requiresInflection : -]
Let CliticPOS13698 be {[rootCat:13698]}
Let CFP13698 be {[fromCat:13698]}
Let RootPOS13744 be [rootCat:13744
	requiresInflection : -] [DefaultExcpFeatures]
Let MSEnvPOS13744 be {[envCat:13744][envCat:13765][envCat:13766][envCat:23342]}
Let FromPOS13744 be [fromCat:13744]

Let ToPOS13744 be [toCat:13744
	requiresInflection : -]
Let CliticPOS13744 be {[rootCat:13744][rootCat:13765][rootCat:13766][rootCat:23342]}
Let CFP13744 be {[fromCat:13744][fromCat:13765][fromCat:13766][fromCat:23342]}
Let RootPOS13765 be [rootCat:13765
	requiresInflection : -] [DefaultExcpFeatures]
Let MSEnvPOS13765 be {[envCat:13765][envCat:13766][envCat:23342]}
Let FromPOS13765 be [fromCat:13765]

Let ToPOS13765 be [toCat:13765
	requiresInflection : -]
Let CliticPOS13765 be {[rootCat:13765][rootCat:13766][rootCat:23342]}
Let CFP13765 be {[fromCat:13765][fromCat:13766][fromCat:23342]}
Let RootPOS13766 be [rootCat:13766
	requiresInflection : -] [DefaultExcpFeatures]
Let MSEnvPOS13766 be {[envCat:13766]}
Let FromPOS13766 be [fromCat:13766]

Let ToPOS13766 be [toCat:13766
	requiresInflection : -]
Let CliticPOS13766 be {[rootCat:13766]}
Let CFP13766 be {[fromCat:13766]}
Let RootPOS23342 be [rootCat:23342
	requiresInflection : -] [DefaultExcpFeatures]
Let MSEnvPOS23342 be {[envCat:23342]}
Let FromPOS23342 be [fromCat:23342]

Let ToPOS23342 be [toCat:23342
	requiresInflection : -]
Let CliticPOS23342 be {[rootCat:23342]}
Let CFP23342 be {[fromCat:23342]}
Let RootPOS19944 be [rootCat:19944
	requiresInflection : +] [DefaultExcpFeatures]
Let MSEnvPOS19944 be {[envCat:19944]}
Let FromPOS19944 be [fromCat:19944]

Let ToPOS19944 be [toCat:19944
	requiresInflection : +]
Let CliticPOS19944 be {[rootCat:19944]}
Let CFP19944 be {[fromCat:19944]}
Let RootPOS20333 be [rootCat:20333
	requiresInflection : -] [DefaultExcpFeatures]
Let MSEnvPOS20333 be {[envCat:20333][envCat:20334][envCat:20335]}
Let FromPOS20333 be [fromCat:20333]

Let ToPOS20333 be [toCat:20333
	requiresInflection : -]
Let CliticPOS20333 be {[rootCat:20333][rootCat:20334][rootCat:20335]}
Let CFP20333 be {[fromCat:20333][fromCat:20334][fromCat:20335]}
Let RootPOS20334 be [rootCat:20334
	requiresInflection : -] [DefaultExcpFeatures]
Let MSEnvPOS20334 be {[envCat:20334]}
Let FromPOS20334 be [fromCat:20334]

Let ToPOS20334 be [toCat:20334
	requiresInflection : -]
Let CliticPOS20334 be {[rootCat:20334]}
Let CFP20334 be {[fromCat:20334]}
Let RootPOS20335 be [rootCat:20335
	requiresInflection : -] [DefaultExcpFeatures]
Let MSEnvPOS20335 be {[envCat:20335]}
Let FromPOS20335 be [fromCat:20335]

Let ToPOS20335 be [toCat:20335
	requiresInflection : -]
Let CliticPOS20335 be {[rootCat:20335]}
Let CFP20335 be {[fromCat:20335]}
Let RootPOS22754 be [rootCat:22754
	requiresInflection : -] [DefaultExcpFeatures]
Let MSEnvPOS22754 be {[envCat:22754]}
Let FromPOS22754 be [fromCat:22754]

Let ToPOS22754 be [toCat:22754
	requiresInflection : -]
Let CliticPOS22754 be {[rootCat:22754]}
Let CFP22754 be {[fromCat:22754]}
Let RootPOS22963 be [rootCat:22963
	requiresInflection : -] [DefaultExcpFeatures]
Let MSEnvPOS22963 be {[envCat:22963][envCat:22964][envCat:23053]}
Let FromPOS22963 be [fromCat:22963]

Let ToPOS22963 be [toCat:22963
	requiresInflection : -]
Let CliticPOS22963 be {[rootCat:22963][rootCat:22964][rootCat:23053]}
Let CFP22963 be {[fromCat:22963][fromCat:22964][fromCat:23053]}
Let RootPOS22964 be [rootCat:22964
	requiresInflection : +] [DefaultExcpFeatures]
Let MSEnvPOS22964 be {[envCat:22964]}
Let FromPOS22964 be [fromCat:22964]

Let ToPOS22964 be [toCat:22964
	requiresInflection : +]
Let CliticPOS22964 be {[rootCat:22964]}
Let CFP22964 be {[fromCat:22964]}
Let RootPOS23053 be [rootCat:23053
	requiresInflection : -] [DefaultExcpFeatures]
Let MSEnvPOS23053 be {[envCat:23053]}
Let FromPOS23053 be [fromCat:23053]

Let ToPOS23053 be [toCat:23053
	requiresInflection : -]
Let CliticPOS23053 be {[rootCat:23053]}
Let CFP23053 be {[fromCat:23053]}
Let RootPOS23345 be [rootCat:23345
	requiresInflection : -] [DefaultExcpFeatures]
Let MSEnvPOS23345 be {[envCat:23345]}
Let FromPOS23345 be [fromCat:23345]

Let ToPOS23345 be [toCat:23345
	requiresInflection : -]
Let CliticPOS23345 be {[rootCat:23345]}
Let CFP23345 be {[fromCat:23345]}
Let RootPOS23389 be [rootCat:23389
	requiresInflection : -] [DefaultExcpFeatures]
Let MSEnvPOS23389 be {[envCat:23389]}
Let FromPOS23389 be [fromCat:23389]

Let ToPOS23389 be [toCat:23389
	requiresInflection : -]
Let CliticPOS23389 be {[rootCat:23389]}
Let CFP23389 be {[fromCat:23389]}
Let NotStemName66683 be [stemName:NotStemName66683]
Let NotStemName66696 be [stemName:NotStemName66696]
Let MSFS13376 be [ morphoSyntax : [] ]
Let MSFS13381 be [ morphoSyntax : [] ]
Let MSFS13388 be [ morphoSyntax : [] ]
Let MSFS13393 be [ morphoSyntax : [] ]
Let MSFS13402 be [ morphoSyntax : [] ]
Let MSFS13409 be [ morphoSyntax : [] ]
Let MSFS13414 be [ morphoSyntax : [] ]
Let MSFS13419 be [ morphoSyntax : [] ]
Let MSFS13424 be [ morphoSyntax : [] ]
Let MSFS13429 be [ morphoSyntax : [] ]
Let MSFS13434 be [ morphoSyntax : [] ]
Let MSFS13440 be [ morphoSyntax : [] ]
Let MSFS13445 be [ morphoSyntax : [] ]
Let MSFS13450 be [ morphoSyntax : [] ]
Let MSFS13455 be [ morphoSyntax : [] ]
Let MSFS13463 be [ morphoSyntax : [] ]
Let MSFS13467 be [ morphoSyntax : [] ]
Let MSFS13472 be [ morphoSyntax : [] ]
Let MSFS13477 be [ morphoSyntax : [] ]
Let MSFS13482 be [ morphoSyntax : [] ]
Let MSFS13487 be [ morphoSyntax : [] ]
Let MSFS13492 be [ morphoSyntax : [] ]
Let MSFS13497 be [ morphoSyntax : [] ]
Let MSFS13502 be [ morphoSyntax : [] ]
Let MSFS13507 be [ morphoSyntax : [] ]
Let MSFS13512 be [ morphoSyntax : [] ]
Let MSFS13517 be [ morphoSyntax : [] ]
Let MSFS13522 be [ morphoSyntax : [] ]
Let MSFS13527 be [ morphoSyntax : [] ]
Let MSFS13532 be [ morphoSyntax : [] ]
Let MSFS13537 be [ morphoSyntax : [] ]
Let MSFS13547 be [ morphoSyntax : [] ]
Let MSFS13552 be [ morphoSyntax : [] ]
Let MSFS13557 be [ morphoSyntax : [] ]
Let MSFS13566 be [ morphoSyntax : [] ]
Let MSFS13581 be [ morphoSyntax : [] ]
Let MSFS13586 be [ morphoSyntax : [] ]
Let MSFS13592 be [ morphoSyntax : [] ]
Let MSFS13609 be [ morphoSyntax : [] ]
Let MSFS13614 be [ morphoSyntax : [] ]
Let MSFS13619 be [ morphoSyntax : [] ]
Let MSFS13624 be [ morphoSyntax : [] ]
Let MSFS13629 be [ morphoSyntax : [] ]
Let MSFS13644 be [ morphoSyntax : [] ]
Let MSFS13649 be [ morphoSyntax : [] ]
Let MSFS13654 be [ morphoSyntax : [] ]
Let MSFS13659 be [ morphoSyntax : [] ]
Let MSFS13671 be [ morphoSyntax : [] ]
Let MSFS13685 be [ morphoSyntax : [] ]
Let MSFS13687 be [ morphoSyntax : [] ]
Let MSFS13689 be [ morphoSyntax : [] ]
Let MSFS13700 be [ morphoSyntax : [] ]
Let MSFS13704 be [ morphoSyntax : [] ]
Let MSFS13708 be [ morphoSyntax : [] ]
Let MSFS13712 be [ morphoSyntax : [] ]
Let MSFS13717 be [ morphoSyntax : [] ]
Let MSFS13722 be [ morphoSyntax : [] ]
Let MSFS13727 be [ morphoSyntax : [] ]
Let MSFS13737 be [ morphoSyntax : [] ]
Let MSFS13742 be [ morphoSyntax : [] ]
Let MSFS13753 be [ morphoSyntax : [] ]
Let MSFS13758 be [ morphoSyntax : [] ]
Let MSFS13763 be [ morphoSyntax : [] ]
Let MSFS13768 be [ morphoSyntax : [] ]
Let MSFS13772 be [ morphoSyntax : [] ]
Let MSFS13777 be [ morphoSyntax : [] ]
Let MSFS13782 be [ morphoSyntax : [] ]
Let MSFS13789 be [ morphoSyntax : [] ]
Let MSFS13794 be [ morphoSyntax : [] ]
Let MSFS13800 be [ morphoSyntax : [] ]
Let MSFS13805 be [ morphoSyntax : [] ]
Let MSFS13810 be [ morphoSyntax : [] ]
Let MSFS13815 be [ morphoSyntax : [] ]
Let MSFS16362 be [ morphoSyntax : [] ]
Let MSFS17787 be [ morphoSyntax : [] ]
Let MSFS17798 be [ morphoSyntax : [] ]
Let MSFS17831 be [ morphoSyntax : [] ]
Let MSFS17842 be [ morphoSyntax : [] ]
Let MSFS17987 be [ morphoSyntax : [] ]
Let MSFS18145 be [ morphoSyntax : [] ]
Let MSFS18162 be [ morphoSyntax : [] ]
Let MSFS18174 be [ morphoSyntax : [] ]
Let MSFS18244 be [ morphoSyntax : [] ]
Let MSFS18256 be [ morphoSyntax : [] ]
Let MSFS18299 be [ morphoSyntax : [] ]
Let MSFS18311 be [ morphoSyntax : [] ]
Let MSFS18326 be [ morphoSyntax : [] ]
Let MSFS18337 be [ morphoSyntax : [] ]
Let MSFS18349 be [ morphoSyntax : [] ]
Let MSFS18363 be [ morphoSyntax : [] ]
Let MSFS18375 be [ morphoSyntax : [] ]
Let MSFS18386 be [ morphoSyntax : [] ]
Let MSFS19896 be [ morphoSyntax : [] ]
Let MSFS19901 be [ morphoSyntax : [] ]
Let MSFS19906 be [ morphoSyntax : [] ]
Let MSFS19911 be [ morphoSyntax : [] ]
Let MSFS19937 be [ morphoSyntax : [] ]
Let MSFS19942 be [ morphoSyntax : [] ]
Let MSFS19948 be [ morphoSyntax : [] ]
Let MSFS19953 be [ morphoSyntax : [] ]
Let MSFS19963 be [ morphoSyntax : [] ]
Let MSFS19968 be [ morphoSyntax : [] ]
Let MSFS19973 be [ morphoSyntax : [] ]
Let MSFS19979 be [ morphoSyntax : [] ]
Let MSFS18445 be [ morphoSyntax : [] ]
Let MSFS18457 be [ morphoSyntax : [] ]
Let MSFS18497 be [ morphoSyntax : [] ]
Let MSFS20234 be [ morphoSyntax : [] ]
Let MSFS20782 be [ morphoSyntax : [] ]
Let MSFS20943 be [ morphoSyntax : [] ]
Let MSFS20948 be [ morphoSyntax : [] ]
Let MSFS20953 be [ morphoSyntax : [] ]
Let MSFS20963 be [ morphoSyntax : [] ]
Let MSFS20969 be [ morphoSyntax : [] ]
Let MSFS20975 be [ morphoSyntax : [] ]
Let MSFS20984 be [ morphoSyntax : [] ]
Let MSFS20990 be [ morphoSyntax : [] ]
Let MSFS20998 be [ morphoSyntax : [] ]
Let MSFS22647 be [ morphoSyntax : [] ]
Let MSFS22658 be [ morphoSyntax : [] ]
Let MSFS22663 be [ morphoSyntax : [] ]
Let MSFS22668 be [ morphoSyntax : [] ]
Let MSFS22673 be [ morphoSyntax : [] ]
Let MSFS22679 be [ morphoSyntax : [] ]
Let MSFS22685 be [ morphoSyntax : [] ]
Let MSFS22691 be [ morphoSyntax : [] ]
Let MSFS22699 be [ morphoSyntax : [] ]
Let MSFS22705 be [ morphoSyntax : [] ]
Let MSFS22711 be [ morphoSyntax : [] ]
Let MSFS22758 be [ morphoSyntax : [ 17137:17151] ]
Let MSFS22767 be [ morphoSyntax : [] ]
Let MSFS22778 be [ morphoSyntax : [] ]
Let MSFS22783 be [ morphoSyntax : [] ]
Let MSFS22789 be [ morphoSyntax : [] ]
Let MSFS22794 be [ morphoSyntax : [] ]
Let MSFS22799 be [ morphoSyntax : [] ]
Let MSFS22804 be [ morphoSyntax : [] ]
Let MSFS22809 be [ morphoSyntax : [] ]
Let MSFS22814 be [ morphoSyntax : [] ]
Let MSFS22826 be [ morphoSyntax : [] ]
Let MSFS22832 be [ morphoSyntax : [] ]
Let MSFS22838 be [ morphoSyntax : [] ]
Let MSFS22844 be [ morphoSyntax : [] ]
Let MSFS22849 be [ morphoSyntax : [] ]
Let MSFS22854 be [ morphoSyntax : [] ]
Let MSFS22859 be [ morphoSyntax : [] ]
Let MSFS22864 be [ morphoSyntax : [] ]
Let MSFS22869 be [ morphoSyntax : [] ]
Let MSFS22874 be [ morphoSyntax : [] ]
Let MSFS22885 be [ morphoSyntax : [] ]
Let MSFS23026 be [ morphoSyntax : [] ]
Let MSFS23031 be [ morphoSyntax : [] ]
Let MSFS23036 be [ morphoSyntax : [] ]
Let MSFS23043 be [ morphoSyntax : [] ]
Let MSFS23048 be [ morphoSyntax : [17013 : [ 13174:13184]] ]
Let MSFS23057 be [ morphoSyntax : [] ]
Let MSFS23062 be [ morphoSyntax : [] ]
Let MSFS23067 be [ morphoSyntax : [17013 : [ 13174:13175 13212:13259]] ]
Let MSFS23076 be [ morphoSyntax : [] ]
Let MSFS23082 be [ morphoSyntax : [] ]
Let MSFS23087 be [ morphoSyntax : [] ]
Let MSFS23093 be [ morphoSyntax : [] ]
Let MSFS23098 be [ morphoSyntax : [] ]
Let MSFS23103 be [ morphoSyntax : [] ]
Let MSFS23108 be [ morphoSyntax : [] ]
Let MSFS23113 be [ morphoSyntax : [] ]
Let MSFS23118 be [ morphoSyntax : [] ]
Let MSFS23123 be [ morphoSyntax : [] ]
Let MSFS23129 be [ morphoSyntax : [] ]
Let MSFS23134 be [ morphoSyntax : [] ]
Let MSFS23140 be [ morphoSyntax : [] ]
Let MSFS23145 be [ morphoSyntax : [] ]
Let MSFS23150 be [ morphoSyntax : [] ]
Let MSFS23155 be [ morphoSyntax : [] ]
Let MSFS23160 be [ morphoSyntax : [] ]
Let MSFS23166 be [ morphoSyntax : [] ]
Let MSFS23171 be [ morphoSyntax : [] ]
Let MSFS23176 be [ morphoSyntax : [] ]
Let MSFS23181 be [ morphoSyntax : [] ]
Let MSFS23186 be [ morphoSyntax : [] ]
Let MSFS23191 be [ morphoSyntax : [] ]
Let MSFS23196 be [ morphoSyntax : [] ]
Let MSFS23370 be [ morphoSyntax : [] ]
Let MSFS23375 be [ morphoSyntax : [] ]
Let MSFS23379 be [ morphoSyntax : [] ]
Let MSFS23382 be [ morphoSyntax : [] ]
Let MSFS23386 be [ morphoSyntax : [] ]
Let MSFS23393 be [ morphoSyntax : [] ]
Let MSFS23401 be [ morphoSyntax : [] ]
Let MSFS23406 be [ morphoSyntax : [] ]
Let MSFS23411 be [ morphoSyntax : [] ]
Let MSFS23417 be [ morphoSyntax : [] ]
Let MSFS23425 be [ morphoSyntax : [] ]
Let MSFS23430 be [ morphoSyntax : [] ]
Let MSFS23438 be [ morphoSyntax : [] ]
Let MSFS23443 be [ morphoSyntax : [] ]
Let MSFS23448 be [ morphoSyntax : [] ]
Let MSFS23453 be [ morphoSyntax : [] ]
Let MSFS23458 be [ morphoSyntax : [] ]
Let MSFS23463 be [ morphoSyntax : [] ]
Let MSFS23468 be [ morphoSyntax : [] ]
Let MSFS23475 be [ morphoSyntax : [] ]
Let MSFS23480 be [ morphoSyntax : [] ]
Let MSFS23485 be [ morphoSyntax : [] ]
Let MSFS23491 be [ morphoSyntax : [] ]
Let MSFS23496 be [ morphoSyntax : [] ]
Let MSFS23501 be [ morphoSyntax : [] ]
Let MSFS23505 be [ morphoSyntax : [] ]
Let MSFS23509 be [ morphoSyntax : [] ]
Let MSFS23514 be [ morphoSyntax : [] ]
Let MSFS23518 be [ morphoSyntax : [] ]
Let MSFS23241 be [ morphoSyntax : [] ]
Let MSFS23247 be [ morphoSyntax : [] ]
Let MSFS23252 be [ morphoSyntax : [] ]
Let MSFS37704 be [ morphoSyntax : [] ]
Let MSFS23263 be [ morphoSyntax : [] ]
Let MSFS23268 be [ morphoSyntax : [] ]
Let MSFS23273 be [ morphoSyntax : [] ]
Let MSFS23278 be [ morphoSyntax : [] ]
Let MSFS23283 be [ morphoSyntax : [] ]
Let MSFS23288 be [ morphoSyntax : [] ]
Let MSFS23293 be [ morphoSyntax : [] ]
Let MSFS23298 be [ morphoSyntax : [] ]
Let MSFS23303 be [ morphoSyntax : [] ]
Let MSFS23308 be [ morphoSyntax : [] ]
Let MSFS23313 be [ morphoSyntax : [] ]
Let MSFS23318 be [ morphoSyntax : [] ]
Let MSFS23323 be [ morphoSyntax : [] ]
Let MSFS23328 be [ morphoSyntax : [] ]
Let MSFS23333 be [ morphoSyntax : [] ]
Let MSFS23338 be [ morphoSyntax : [] ]
Let MSFS23344 be [ morphoSyntax : [] ]
Let MSFS23347 be [ morphoSyntax : [] ]
Let MSFS22912 be [ morphoSyntax : [] ]
Let MSFS22917 be [ morphoSyntax : [] ]
Let MSFS22922 be [ morphoSyntax : [] ]
Let MSFS22926 be [ morphoSyntax : [] ]
Let MSFS22930 be [ morphoSyntax : [] ]
Let MSFS23208 be [ morphoSyntax : [] ]
Let MSFS23554 be [ morphoSyntax : [] ]
Let MSFS23565 be [ morphoSyntax : [] ]
Let MSFS23571 be [ morphoSyntax : [] ]
Let MSFS23577 be [ morphoSyntax : [] ]
Let MSFS23618 be [ morphoSyntax : [] ]
Let MSFS23623 be [ morphoSyntax : [] ]
Let MSFS23628 be [ morphoSyntax : [] ]
Let MSFS23633 be [ morphoSyntax : [] ]
Let MSFS23638 be [ morphoSyntax : [] ]
Let MSFS23643 be [ morphoSyntax : [] ]
Let MSFS23648 be [ morphoSyntax : [] ]
Let MSFS23653 be [ morphoSyntax : [] ]
Let MSFS23658 be [ morphoSyntax : [] ]
Let MSFS23663 be [ morphoSyntax : [] ]
Let MSFS23668 be [ morphoSyntax : [] ]
Let MSFS23673 be [ morphoSyntax : [] ]
Let MSFS23678 be [ morphoSyntax : [] ]
Let MSFS23683 be [ morphoSyntax : [] ]
Let MSFS23688 be [ morphoSyntax : [] ]
Let MSFS23693 be [ morphoSyntax : [] ]
Let MSFS23698 be [ morphoSyntax : [] ]
Let MSFS23703 be [ morphoSyntax : [] ]
Let MSFS23708 be [ morphoSyntax : [] ]
Let MSFS23713 be [ morphoSyntax : [] ]
Let MSFS23718 be [ morphoSyntax : [] ]
Let MSFS23723 be [ morphoSyntax : [] ]
Let MSFS23728 be [ morphoSyntax : [] ]
Let MSFS23733 be [ morphoSyntax : [] ]
Let MSFS23738 be [ morphoSyntax : [] ]
Let MSFS23743 be [ morphoSyntax : [] ]
Let MSFS23748 be [ morphoSyntax : [] ]
Let MSFS23753 be [ morphoSyntax : [] ]
Let MSFS23758 be [ morphoSyntax : [] ]
Let MSFS23764 be [ morphoSyntax : [] ]
Let MSFS23770 be [ morphoSyntax : [] ]
Let MSFS23774 be [ morphoSyntax : [] ]
Let MSFS23778 be [ morphoSyntax : [] ]
Let MSFS23783 be [ morphoSyntax : [] ]
Let MSFS23788 be [ morphoSyntax : [] ]
Let MSFS23793 be [ morphoSyntax : [] ]
Let MSFS23798 be [ morphoSyntax : [] ]
Let MSFS23803 be [ morphoSyntax : [] ]
Let MSFS23808 be [ morphoSyntax : [] ]
Let MSFS23813 be [ morphoSyntax : [] ]
Let MSFS23818 be [ morphoSyntax : [] ]
Let MSFS23823 be [ morphoSyntax : [] ]
Let MSFS23829 be [ morphoSyntax : [] ]
Let MSFS23834 be [ morphoSyntax : [] ]
Let MSFS23839 be [ morphoSyntax : [] ]
Let MSFS23845 be [ morphoSyntax : [] ]
Let MSFS23851 be [ morphoSyntax : [] ]
Let MSFS23855 be [ morphoSyntax : [] ]
Let MSFS23859 be [ morphoSyntax : [] ]
Let MSFS23864 be [ morphoSyntax : [] ]
Let MSFS23869 be [ morphoSyntax : [] ]
Let MSFS23874 be [ morphoSyntax : [] ]
Let MSFS23879 be [ morphoSyntax : [] ]
Let MSFS23884 be [ morphoSyntax : [] ]
Let MSFS23889 be [ morphoSyntax : [] ]
Let MSFS23894 be [ morphoSyntax : [] ]
Let MSFS23899 be [ morphoSyntax : [] ]
Let MSFS23905 be [ morphoSyntax : [] ]
Let MSFS23910 be [ morphoSyntax : [] ]
Let MSFS23915 be [ morphoSyntax : [] ]
Let MSFS23920 be [ morphoSyntax : [] ]
Let MSFS23925 be [ morphoSyntax : [] ]
Let MSFS23930 be [ morphoSyntax : [] ]
Let MSFS23934 be [ morphoSyntax : [] ]
Let MSFS23938 be [ morphoSyntax : [] ]
Let MSFS23943 be [ morphoSyntax : [] ]
Let MSFS23948 be [ morphoSyntax : [] ]
Let MSFS23952 be [ morphoSyntax : [] ]
Let MSFS23956 be [ morphoSyntax : [] ]
Let MSFS23961 be [ morphoSyntax : [] ]
Let MSFS23966 be [ morphoSyntax : [] ]
Let MSFS23971 be [ morphoSyntax : [] ]
Let MSFS23976 be [ morphoSyntax : [] ]
Let MSFS23981 be [ morphoSyntax : [] ]
Let MSFS23985 be [ morphoSyntax : [] ]
Let MSFS23991 be [ morphoSyntax : [] ]
Let MSFS23996 be [ morphoSyntax : [] ]
Let MSFS24000 be [ morphoSyntax : [] ]
Let MSFS24004 be [ morphoSyntax : [] ]
Let MSFS24009 be [ morphoSyntax : [] ]
Let MSFS24014 be [ morphoSyntax : [] ]
Let MSFS55525 be [ morphoSyntax : [] ]
Let MSFS24036 be [ morphoSyntax : [] ]
Let MSFS24047 be [ morphoSyntax : [] ]
Let MSFS24252 be [ morphoSyntax : [] ]
Let MSFS24257 be [ morphoSyntax : [] ]
Let MSFS24262 be [ morphoSyntax : [] ]
Let MSFS24273 be [ morphoSyntax : [] ]
Let MSFS24277 be [ morphoSyntax : [] ]
Let MSFS24281 be [ morphoSyntax : [] ]
Let MSFS24290 be [ morphoSyntax : [] ]
Let MSFS24292 be [ morphoSyntax : [] ]
Let MSFS24296 be [ morphoSyntax : [] ]
Let MSFS24301 be [ morphoSyntax : [] ]
Let MSFS24306 be [ morphoSyntax : [] ]
Let MSFS24311 be [ morphoSyntax : [] ]
Let MSFS24316 be [ morphoSyntax : [] ]
Let MSFS24321 be [ morphoSyntax : [] ]
Let MSFS24326 be [ morphoSyntax : [] ]
Let MSFS24331 be [ morphoSyntax : [] ]
Let MSFS24337 be [ morphoSyntax : [] ]
Let MSFS24342 be [ morphoSyntax : [] ]
Let MSFS24347 be [ morphoSyntax : [] ]
Let MSFS24353 be [ morphoSyntax : [] ]
Let MSFS24359 be [ morphoSyntax : [] ]
Let MSFS24363 be [ morphoSyntax : [] ]
Let MSFS24365 be [ morphoSyntax : [] ]
Let MSFS24369 be [ morphoSyntax : [] ]
Let MSFS24373 be [ morphoSyntax : [] ]
Let MSFS24375 be [ morphoSyntax : [] ]
Let MSFS24386 be [ morphoSyntax : [] ]
Let MSFS24391 be [ morphoSyntax : [] ]
Let MSFS24396 be [ morphoSyntax : [] ]
Let MSFS24446 be [ morphoSyntax : [] ]
Let MSFS24451 be [ morphoSyntax : [] ]
Let MSFS24456 be [ morphoSyntax : [] ]
Let MSFS24461 be [ morphoSyntax : [] ]
Let MSFS24466 be [ morphoSyntax : [] ]
Let MSFS24471 be [ morphoSyntax : [] ]
Let MSFS24476 be [ morphoSyntax : [] ]
Let MSFS24481 be [ morphoSyntax : [] ]
Let MSFS24486 be [ morphoSyntax : [] ]
Let MSFS24491 be [ morphoSyntax : [] ]
Let MSFS24496 be [ morphoSyntax : [] ]
Let MSFS24501 be [ morphoSyntax : [] ]
Let MSFS24505 be [ morphoSyntax : [] ]
Let MSFS24507 be [ morphoSyntax : [] ]
Let MSFS24511 be [ morphoSyntax : [] ]
Let MSFS24516 be [ morphoSyntax : [] ]
Let MSFS24526 be [ morphoSyntax : [] ]
Let MSFS24533 be [ morphoSyntax : [] ]
Let MSFS24538 be [ morphoSyntax : [] ]
Let MSFS24543 be [ morphoSyntax : [] ]
Let MSFS24548 be [ morphoSyntax : [] ]
Let MSFS24552 be [ morphoSyntax : [] ]
Let MSFS24556 be [ morphoSyntax : [] ]
Let MSFS24561 be [ morphoSyntax : [] ]
Let MSFS24566 be [ morphoSyntax : [] ]
Let MSFS24571 be [ morphoSyntax : [] ]
Let MSFS24573 be [ morphoSyntax : [] ]
Let MSFS24576 be [ morphoSyntax : [] ]
Let MSFS24578 be [ morphoSyntax : [] ]
Let MSFS24582 be [ morphoSyntax : [] ]
Let MSFS24593 be [ morphoSyntax : [] ]
Let MSFS24598 be [ morphoSyntax : [] ]
Let MSFS24603 be [ morphoSyntax : [] ]
Let MSFS24608 be [ morphoSyntax : [] ]
Let MSFS24612 be [ morphoSyntax : [] ]
Let MSFS24615 be [ morphoSyntax : [] ]
Let MSFS24617 be [ morphoSyntax : [] ]
Let MSFS24621 be [ morphoSyntax : [] ]
Let MSFS24629 be [ morphoSyntax : [] ]
Let MSFS24634 be [ morphoSyntax : [] ]
Let MSFS24639 be [ morphoSyntax : [] ]
Let MSFS24644 be [ morphoSyntax : [] ]
Let MSFS24649 be [ morphoSyntax : [] ]
Let MSFS24129 be [ morphoSyntax : [] ]
Let MSFS24138 be [ morphoSyntax : [] ]
Let MSFS24145 be [ morphoSyntax : [] ]
Let MSFS24172 be [ morphoSyntax : [] ]
Let MSFS24178 be [ morphoSyntax : [] ]
Let MSFS24183 be [ morphoSyntax : [] ]
Let MSFS24188 be [ morphoSyntax : [] ]
Let MSFS24193 be [ morphoSyntax : [] ]
Let MSFS24198 be [ morphoSyntax : [] ]
Let MSFS24203 be [ morphoSyntax : [] ]
Let MSFS24207 be [ morphoSyntax : [] ]
Let MSFS24212 be [ morphoSyntax : [] ]
Let MSFS24217 be [ morphoSyntax : [] ]
Let MSFS24222 be [ morphoSyntax : [] ]
Let MSFS24227 be [ morphoSyntax : [] ]
Let MSFS24232 be [ morphoSyntax : [] ]
Let MSFS24661 be [ morphoSyntax : [] ]
Let MSFS24666 be [ morphoSyntax : [] ]
Let MSFS24671 be [ morphoSyntax : [] ]
Let MSFS24676 be [ morphoSyntax : [] ]
Let MSFS24681 be [ morphoSyntax : [] ]
Let MSFS24703 be [ morphoSyntax : [] ]
Let MSFS24708 be [ morphoSyntax : [] ]
Let MSFS25046 be [ morphoSyntax : [] ]
Let MSFS25048 be [ morphoSyntax : [] ]
Let MSFS25050 be [ morphoSyntax : [] ]
Let MSFS37709 be [ morphoSyntax : [] ]
Let MSFS55515 be [ morphoSyntax : [] ]
Let MSFS55516 be [ morphoSyntax : [] ]
Let MSFS55580 be [ morphoSyntax : [] ]
Let MSFS55582 be [ morphoSyntax : [] ]
Let MSFS24087 be [ morphoSyntax : [] ]
Let MSFS24097 be [ morphoSyntax : [] ]
Let MSFS24103 be [ morphoSyntax : [] ]
Let MSFS24109 be [ morphoSyntax : [] ]
Let MSFS23588 be [ morphoSyntax : [] ]
Let FromMSFS23593 be [ fromMorphoSyntax : [] ]
Let FromMSFS23608 be [ fromMorphoSyntax : [] ]
Let FromMSFS24117 be [ fromMorphoSyntax : [] ]
Let FromMSFS24122 be [ fromMorphoSyntax : [] ]
Let FromMSFS39957 be [ fromMorphoSyntax : [] ]
Let FromMSFS24747 be [ fromMorphoSyntax : [] ]
Let FromMSFS24750 be [ fromMorphoSyntax : [] ]
Let FromMSFS24761 be [ fromMorphoSyntax : [] ]
Let FromMSFS24767 be [ fromMorphoSyntax : [] ]
Let FromMSFS24773 be [ fromMorphoSyntax : [] ]
Let FromMSFS24779 be [ fromMorphoSyntax : [] ]
Let FromMSFS24686 be [ fromMorphoSyntax : [] ]
Let FromMSFS24240 be [ fromMorphoSyntax : [] ]
Let FromMSFS24247 be [ fromMorphoSyntax : [] ]
Let FromMSFS39953 be [ fromMorphoSyntax : [] ]
Let FromMSFS24155 be [ fromMorphoSyntax : [] ]
Let FromMSFS24163 be [ fromMorphoSyntax : [] ]
Let FromMSFS39955 be [ fromMorphoSyntax : [] ]
Let FromMSFS24654 be [ fromMorphoSyntax : [] ]
Let FromMSFS39949 be [ fromMorphoSyntax : [] ]
Let FromMSFS39951 be [ fromMorphoSyntax : [] ]
Let FromMSFS42098 be [ fromMorphoSyntax : [] ]
Let FromMSFS23582 be [ fromMorphoSyntax : [] ]
Let FromMSFS23214 be [ fromMorphoSyntax : [] ]
Let FromMSFS23350 be [ fromMorphoSyntax : [] ]
Let FromMSFS23357 be [ fromMorphoSyntax : [] ]
Let FromMSFS23521 be [ fromMorphoSyntax : [] ]
Let FromMSFS31480 be [ fromMorphoSyntax : [] ]
Let FromMSFS23539 be [ fromMorphoSyntax : [] ]
Let FromMSFS23202 be [ fromMorphoSyntax : [] ]
Let FromMSFS22890 be [ fromMorphoSyntax : [] ]
Let FromMSFS22899 be [ fromMorphoSyntax : [] ]
Let FromMSFS16524 be [ fromMorphoSyntax : [] ]
Let ToMSFS23594 be [ toMorphoSyntax : [] ]
Let ToMSFS23609 be [ toMorphoSyntax : [] ]
Let ToMSFS24118 be [ toMorphoSyntax : [] ]
Let ToMSFS24123 be [ toMorphoSyntax : [] ]
Let ToMSFS39958 be [ toMorphoSyntax : [] ]
Let ToMSFS24748 be [ toMorphoSyntax : [] ]
Let ToMSFS24751 be [ toMorphoSyntax : [] ]
Let ToMSFS24762 be [ toMorphoSyntax : [] ]
Let ToMSFS24768 be [ toMorphoSyntax : [] ]
Let ToMSFS24774 be [ toMorphoSyntax : [] ]
Let ToMSFS24780 be [ toMorphoSyntax : [] ]
Let ToMSFS24687 be [ toMorphoSyntax : [] ]
Let ToMSFS24241 be [ toMorphoSyntax : [] ]
Let ToMSFS24248 be [ toMorphoSyntax : [] ]
Let ToMSFS39954 be [ toMorphoSyntax : [] ]
Let ToMSFS24156 be [ toMorphoSyntax : [] ]
Let ToMSFS24164 be [ toMorphoSyntax : [] ]
Let ToMSFS39956 be [ toMorphoSyntax : [] ]
Let ToMSFS58175 be [ toMorphoSyntax : [ 20800:22738] ]
Let ToMSFS24655 be [ toMorphoSyntax : [] ]
Let ToMSFS39950 be [ toMorphoSyntax : [] ]
Let ToMSFS39952 be [ toMorphoSyntax : [] ]
Let ToMSFS42099 be [ toMorphoSyntax : [] ]
Let ToMSFS23583 be [ toMorphoSyntax : [] ]
Let ToMSFS23215 be [ toMorphoSyntax : [] ]
Let ToMSFS23351 be [ toMorphoSyntax : [] ]
Let ToMSFS23358 be [ toMorphoSyntax : [] ]
Let ToMSFS23522 be [ toMorphoSyntax : [] ]
Let ToMSFS31481 be [ toMorphoSyntax : [] ]
Let ToMSFS23540 be [ toMorphoSyntax : [] ]
Let ToMSFS23203 be [ toMorphoSyntax : [] ]
Let ToMSFS22891 be [ toMorphoSyntax : [] ]
Let ToMSFS22900 be [ toMorphoSyntax : [] ]
Let ToMSFS16525 be [ toMorphoSyntax : [] ]
Let InflectionFS16954 be [ morphoSyntax : [16947 : [ 13174:13184] 20800:20806] ]
Let InflectionFS16972 be [ morphoSyntax : [16947 : [ 13212:13213 13174:13175]] ]
Let InflectionFS16981 be [ morphoSyntax : [16947 : [ 13212:13240 13174:13175]] ]
Let InflectionFS16990 be [ morphoSyntax : [16947 : [ 13212:13240 13174:13184]] ]
Let InflectionFS17000 be [ morphoSyntax : [16947 : [ 13212:13213 13174:13184]] ]
Let InflectionFS17011 be [ morphoSyntax : [17013 : [ 13212:13213 13174:13175]] ]
Let InflectionFS17021 be [ morphoSyntax : [17013 : [ 13212:13213 13174:13184]] ]
Let InflectionFS17030 be [ morphoSyntax : [17013 : [ 13212:13240 13174:13175]] ]
Let InflectionFS17039 be [ morphoSyntax : [17013 : [ 13212:13240 13174:13184]] ]
Let InflectionFS17048 be [ morphoSyntax : [17013 : [ 13212:13259]] ]
Let InflectionFS17057 be [ morphoSyntax : [] ]
Let InflectionFS17065 be [ morphoSyntax : [16947 : [ 13212:13240 13174:13175]17013 : [ 13212:13213 13174:13175]] ]
Let InflectionFS17078 be [ morphoSyntax : [16947 : [ 13212:13240 13174:13184]17013 : [ 13212:13213 13174:13175]] ]
Let InflectionFS17091 be [ morphoSyntax : [16947 : [ 13212:13240 13174:13184]17013 : [ 13212:13213 13174:13175]] ]
Let InflectionFS17108 be [ morphoSyntax : [16947 : [ 13174:13175 13212:13213]] ]
Let InflectionFS17110 be [ morphoSyntax : [16947 : [ 13174:13184 13212:13213]] ]
Let InflectionFS17112 be [ morphoSyntax : [16947 : [ 13174:13175 13212:13240]] ]
Let InflectionFS17114 be [ morphoSyntax : [16947 : [ 13174:13184 13212:13240]] ]
Let InflectionFS17124 be [ morphoSyntax : [16947 : [ 13174:13175 13212:13213]] ]
Let InflectionFS17128 be [ morphoSyntax : [16947 : [ 13174:13184 13212:13213]] ]
Let InflectionFS17132 be [ morphoSyntax : [16947 : [ 13212:13240] 17137:17138] ]
Let InflectionFS17174 be [ morphoSyntax : [16947 : [ 13174:13184] 17137:17151] ]
Let InflectionFS17182 be [ morphoSyntax : [16947 : [ 13174:13184] 17137:17138] ]
Let InflectionFS20789 be [ morphoSyntax : [16947 : [ 13174:13175] 20800:20801] ]
Let InflectionFS20798 be [ morphoSyntax : [16947 : [ 13174:13184] 20800:20801] ]
Let InflectionFS20770 be [ morphoSyntax : [ 16944:20772] ]
Let InflectionFS18567 be [ morphoSyntax : [17013 : [ 13212:18579]] ]
Let InflectionFS13170 be [ morphoSyntax : [13173 : [ 13174:13175]] ]
Let InflectionFS13209 be [ morphoSyntax : [13211 : [ 13212:13213 13174:13175]] ]
Let InflectionFS13221 be [ morphoSyntax : [13173 : [ 13174:13184]] ]
Let InflectionFS13229 be [ morphoSyntax : [13211 : [ 13212:13213 13174:13184]] ]
Let InflectionFS13238 be [ morphoSyntax : [13211 : [ 13212:13240 13174:13175]] ]
Let InflectionFS13248 be [ morphoSyntax : [13211 : [ 13212:13240 13174:13184]] ]
Let InflectionFS13257 be [ morphoSyntax : [13211 : [ 13212:13259 13174:13175]] ]
Let InflectionFS13267 be [ morphoSyntax : [13211 : [ 13212:13259 13174:13184]] ]
Let InflectionFS13314 be [ morphoSyntax : [13173 : [ 13174:13184]] ]
Let InflectionFS13333 be [ morphoSyntax : [13211 : [ 13212:18579]] ]
Let InflectionFS20170 be [ morphoSyntax : [17013 : [ 13212:18579]] ]
Let InflectionFS15420 be [ morphoSyntax : [13173 : [ 13174:13184]] ]
Let InflectionFS16256 be [ morphoSyntax : [] ]
Let InflectionFS16338 be [ morphoSyntax : [] ]
Let InflectionFS16345 be [ morphoSyntax : [] ]
Let InflectionFS16349 be [ morphoSyntax : [13173 : [ 13174:13184]] ]
Let InflectionFS22724 be [ morphoSyntax : [ 16944:22726] ]
Let InflectionFS22735 be [ morphoSyntax : [ 20800:20806 16944:20772] ]
Let InflectionFS23221 be [ morphoSyntax : [23229 : [ 13174:13184]] ]
Let InflectionFS23227 be [ morphoSyntax : [23229 : [ 13174:13184]] ]
Let InflectionFS22945 be [ morphoSyntax : [22946 : [ 13212:18579]] ]
Let InflectionFS22969 be [ morphoSyntax : [17013 : [ 13174:13184 13212:13240]] ]
Let InflectionFS22977 be [ morphoSyntax : [17013 : [ 13174:13175 13212:13259]] ]
Let InflectionFS22986 be [ morphoSyntax : [17013 : [ 13174:13184 13212:13259]] ]
Let InflectionFS22992 be [ morphoSyntax : [17013 : [ 13174:13175 13212:13240]] ]
Let InflectionFS22999 be [ morphoSyntax : [17013 : [ 13174:13175 13212:13213]] ]
Let InflectionFS23005 be [ morphoSyntax : [17013 : [ 13212:13213 13174:13184]] ]
Let InflectionFS23012 be [ morphoSyntax : [17013 : [ 13212:18579]] ]
Let InflectionFS24698 be [ morphoSyntax : [] ]
Let InflectionFS56164 be [ morphoSyntax : [16947 : [ 13174:13175] 20800:20806] ]
Let InflectionFS56594 be [ morphoSyntax : [16947 : [ 13174:13175] 17137:17151] ]
Let InflectionFS58167 be [ morphoSyntax : [ 17137:66715] ]
Let InflectionFS66722 be [ morphoSyntax : [ 20800:66721] ]
Let InflClass15408 be [inflectionClass:15408]
Let FromInflClass15408 be [fromInflectionClass:15408]
Let ToInflClass15408 be [toInflectionClass:15408]
Let ICA15408 be [inflectionClass:15408]
		 
Let InflClass15409 be [inflectionClass:15409]
Let FromInflClass15409 be [fromInflectionClass:15409]
Let ToInflClass15409 be [toInflectionClass:15409]
Let ICA15409 be [inflectionClass:15409]
		 
Let InflClass15410 be [inflectionClass:15410]
Let FromInflClass15410 be [fromInflectionClass:15410]
Let ToInflClass15410 be [toInflectionClass:15410]
Let ICA15410 be [inflectionClass:15410]
		 
Let InflClass15411 be [inflectionClass:15411]
Let FromInflClass15411 be [fromInflectionClass:15411]
Let ToInflClass15411 be [toInflectionClass:15411]
Let ICA15411 be [inflectionClass:15411]
		 
Let InflClass17760 be [inflectionClass:17760]
Let FromInflClass17760 be [fromInflectionClass:17760]
Let ToInflClass17760 be [toInflectionClass:17760]
Let ICA17760 be [inflectionClass:17760]
		 
Let InflClass17761 be [inflectionClass:17761]
Let FromInflClass17761 be [fromInflectionClass:17761]
Let ToInflClass17761 be [toInflectionClass:17761]
Let ICA17761 be [inflectionClass:17761]
		 
Let InflClass17765 be [inflectionClass:17765]
Let FromInflClass17765 be [fromInflectionClass:17765]
Let ToInflClass17765 be [toInflectionClass:17765]
Let ICA17765 be [inflectionClass:17765]
		 
Let InflClass17766 be [inflectionClass:17766]
Let FromInflClass17766 be [fromInflectionClass:17766]
Let ToInflClass17766 be [toInflectionClass:17766]
Let ICA17766 be [inflectionClass:17766]
		 
Let InflClass23233 be [inflectionClass:23233]
Let FromInflClass23233 be [fromInflectionClass:23233]
Let ToInflClass23233 be [toInflectionClass:23233]
Let ICA23233 be [inflectionClass:23233]
		 
Let InflClass23234 be [inflectionClass:23234]
Let FromInflClass23234 be [fromInflectionClass:23234]
Let ToInflClass23234 be [toInflectionClass:23234]
Let ICA23234 be [inflectionClass:23234]
		  
Let ICA17765ICA17766 be {[inflectionClass:17765][inflectionClass:17766]} 
Let ICA17760ICA17761 be {[inflectionClass:17760][inflectionClass:17761]} 
 
 

Let Infix be [morphType:infix]
Let prefixinginterfix be {[cat:prefix]
						  [cat:interfix]}
Let suffixinginterfix be {[cat:suffix]
						  [cat:interfix]}
